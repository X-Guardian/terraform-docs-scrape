[
    {
        "name": "aws_acm_certificate",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/acm_certificate.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "domain",
                "description": "(Required) The domain of the certificate to look up. If no certificate is found with this name, an error will be returned.",
                "args": []
            },
            {
                "name": "statuses",
                "description": "(Optional) A list of statuses on which to filter the returned list. Valid values are PENDING_VALIDATION, ISSUED,\nINACTIVE, EXPIRED, VALIDATION_TIMED_OUT, REVOKED and FAILED. If no value is specified, only certificates in the ISSUED state\nare returned.",
                "args": []
            },
            {
                "name": "types",
                "description": "(Optional) A list of types on which to filter the returned list. Valid values are AMAZON_ISSUED and IMPORTED.",
                "args": []
            },
            {
                "name": "most_recent",
                "description": "(Optional) If set to true, it sorts the certificates matched by previous criteria by the NotBefore field, returning only the most recent one. If set to false, it returns an error if more than one certificate is found. Defaults to false.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "Set to the ARN of the found certificate, suitable for referencing in other resources that support ACM certificates.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_alb",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/lb.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "arn",
                "description": "(Optional) The full ARN of the load balancer.",
                "args": []
            },
            {
                "name": "name",
                "description": "(Optional) The unique name of the load balancer.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_alb_listener",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/lb_listener.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "arn",
                "description": "(Optional) The arn of the listener. Required if load_balancer_arn and port is not set.",
                "args": []
            },
            {
                "name": "load_balancer_arn",
                "description": "(Optional) The arn of the load balander. Required if arn is not set.",
                "args": []
            },
            {
                "name": "port",
                "description": "(Optional) The port of the listener. Required if arn is not set.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_alb_target_group",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/lb_target_group.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "arn",
                "description": "(Optional) The full ARN of the target group.",
                "args": []
            },
            {
                "name": "name",
                "description": "(Optional) The unique name of the target group.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_ami",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/ami.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "most_recent",
                "description": "(Optional) If more than one result is returned, use the most\nrecent AMI.",
                "args": []
            },
            {
                "name": "executable_users",
                "description": "(Optional) Limit search to users with explicit launch permission on\nthe image. Valid items are the numeric account ID or self.",
                "args": []
            },
            {
                "name": "filter",
                "description": "(Optional) One or more name/value pairs to filter off of. There are\nseveral valid keys, for a full reference, check out\ndescribe-images in the AWS CLI reference.",
                "args": []
            },
            {
                "name": "owners",
                "description": "(Optional) Limit search to specific AMI owners. Valid items are the numeric\naccount ID, amazon, or self.",
                "args": []
            },
            {
                "name": "name_regex",
                "description": "(Optional) A regex string to apply to the AMI list returned\nby AWS. This allows more advanced filtering not supported from the AWS API. This\nfiltering is done locally on what AWS returns, and could have a performance\nimpact if the result is large. It is recommended to combine this with other\noptions to narrow down the list AWS returns.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "architecture",
                "description": "The OS architecture of the AMI (ie: i386 or x86_64).",
                "args": []
            },
            {
                "name": "block_device_mappings",
                "description": "The block device mappings of the AMI.\nblock_device_mappings.#.device_name - The physical name of the device.\nblock_device_mappings.#.ebs.delete_on_termination - true if the EBS volume\nwill be deleted on termination.\nblock_device_mappings.#.ebs.encrypted - true if the EBS volume\nis encrypted.\nblock_device_mappings.#.ebs.iops - 0 if the EBS volume is\nnot a provisioned IOPS image, otherwise the supported IOPS count.\nblock_device_mappings.#.ebs.snapshot_id - The ID of the snapshot.\nblock_device_mappings.#.ebs.volume_size - The size of the volume, in GiB.\nblock_device_mappings.#.ebs.volume_type - The volume type.\nblock_device_mappings.#.no_device - Suppresses the specified device\nincluded in the block device mapping of the AMI.\nblock_device_mappings.#.virtual_name - The virtual device name (for\ninstance stores).",
                "args": []
            },
            {
                "name": "creation_date",
                "description": "The date and time the image was created.",
                "args": []
            },
            {
                "name": "description",
                "description": "The description of the AMI that was provided during image\ncreation.",
                "args": []
            },
            {
                "name": "hypervisor",
                "description": "The hypervisor type of the image.",
                "args": []
            },
            {
                "name": "image_id",
                "description": "The ID of the AMI. Should be the same as the resource id.",
                "args": []
            },
            {
                "name": "image_location",
                "description": "The location of the AMI.",
                "args": []
            },
            {
                "name": "image_owner_alias",
                "description": "The AWS account alias (for example, amazon, self) or\nthe AWS account ID of the AMI owner.",
                "args": []
            },
            {
                "name": "image_type",
                "description": "The type of image.",
                "args": []
            },
            {
                "name": "kernel_id",
                "description": "The kernel associated with the image, if any. Only applicable\nfor machine images.",
                "args": []
            },
            {
                "name": "name",
                "description": "The name of the AMI that was provided during image creation.",
                "args": []
            },
            {
                "name": "owner_id",
                "description": "The AWS account ID of the image owner.",
                "args": []
            },
            {
                "name": "platform",
                "description": "The value is Windows for Windows AMIs; otherwise blank.",
                "args": []
            },
            {
                "name": "product_codes",
                "description": "Any product codes associated with the AMI.\nproduct_codes.#.product_code_id - The product code.\nproduct_codes.#.product_code_type - The type of product code.",
                "args": []
            },
            {
                "name": "public",
                "description": "true if the image has public launch permissions.",
                "args": []
            },
            {
                "name": "ramdisk_id",
                "description": "The RAM disk associated with the image, if any. Only applicable\nfor machine images.",
                "args": []
            },
            {
                "name": "root_device_name",
                "description": "The device name of the root device.",
                "args": []
            },
            {
                "name": "root_device_type",
                "description": "The type of root device (ie: ebs or instance-store).",
                "args": []
            },
            {
                "name": "root_snapshot_id",
                "description": "The snapshot id associated with the root device, if any\n(only applies to ebs root devices).",
                "args": []
            },
            {
                "name": "sriov_net_support",
                "description": "Specifies whether enhanced networking is enabled.",
                "args": []
            },
            {
                "name": "state",
                "description": "The current state of the AMI. If the state is available, the image\nis successfully registered and can be used to launch an instance.",
                "args": []
            },
            {
                "name": "state_reason",
                "description": "Describes a state change. Fields are UNSET if not available.\nstate_reason.code - The reason code for the state change.\nstate_reason.message - The message for the state change.",
                "args": []
            },
            {
                "name": "tags",
                "description": "Any tags assigned to the image.\ntags.#.key - The key name of the tag.\ntags.#.value - The value of the tag.",
                "args": []
            },
            {
                "name": "virtualization_type",
                "description": "The type of virtualization of the AMI (ie: hvm or\nparavirtual).",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ami_ids",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/ami_ids.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "executable_users",
                "description": "(Optional) Limit search to users with explicit launch\npermission on  the image. Valid items are the numeric account ID or self.",
                "args": []
            },
            {
                "name": "filter",
                "description": "(Optional) One or more name/value pairs to filter off of. There\nare several valid keys, for a full reference, check out\ndescribe-images in the AWS CLI reference.",
                "args": []
            },
            {
                "name": "owners",
                "description": "(Optional) Limit search to specific AMI owners. Valid items are\nthe numeric account ID, amazon, or self.",
                "args": []
            },
            {
                "name": "name_regex",
                "description": "(Optional) A regex string to apply to the AMI list returned\nby AWS. This allows more advanced filtering not supported from the AWS API.\nThis filtering is done locally on what AWS returns, and could have a performance\nimpact if the result is large. It is recommended to combine this with other\noptions to narrow down the list AWS returns.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_autoscaling_groups",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/autoscaling_groups.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "filter",
                "description": "(Optional) A filter used to scope the list e.g. by tags. See related docs.\nname - (Required) The name of the filter. The valid values are: auto-scaling-group, key, value, and propagate-at-launch.\nvalues - (Required) The value of the filter.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "names",
                "description": "A list of the Autoscaling Groups in the current region.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_availability_zone",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/availability_zone.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "name",
                "description": "(Optional) The full name of the availability zone to select.",
                "args": []
            },
            {
                "name": "state",
                "description": "(Optional) A specific availability zone state to require. May\nbe any of \"available\", \"information\" or \"impaired\".",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "name",
                "description": "The name of the selected availability zone.",
                "args": []
            },
            {
                "name": "region",
                "description": "The region where the selected availability zone resides.\nThis is always the region selected on the provider, since this data source\nsearches only within that region.",
                "args": []
            },
            {
                "name": "name_suffix",
                "description": "The part of the AZ name that appears after the region name,\nuniquely identifying the AZ within its region.",
                "args": []
            },
            {
                "name": "state",
                "description": "The current state of the AZ.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_availability_zones",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/availability_zones.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "state",
                "description": "(Optional) Allows to filter list of Availability Zones based on their\ncurrent state. Can be either \"available\", \"information\", \"impaired\" or\n\"unavailable\". By default the list includes a complete set of Availability Zones\nto which the underlying AWS account has access, regardless of their state.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "names",
                "description": "A list of the Availability Zone names available to the account.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_billing_service_account",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/billing_service_account.html",
        "groupName": "Data Sources",
        "args": [],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the AWS billing service account.",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the AWS billing service account.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_caller_identity",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/caller_identity.html",
        "groupName": "Data Sources",
        "args": [],
        "attrs": [
            {
                "name": "account_id",
                "description": "The AWS Account ID number of the account that owns or contains the calling entity.",
                "args": []
            },
            {
                "name": "arn",
                "description": "The AWS ARN associated with the calling entity.",
                "args": []
            },
            {
                "name": "user_id",
                "description": "The unique identifier of the calling entity.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_canonical_user_id",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/canonical_user_id.html",
        "groupName": "Data Sources",
        "args": [],
        "attrs": [
            {
                "name": "id",
                "description": "The canonical user ID associated with the AWS account.",
                "args": []
            },
            {
                "name": "display_name",
                "description": "The human-friendly name linked to the canonical user ID.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_cloudformation_stack",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/cloudformation_stack.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the stack",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "capabilities",
                "description": "A list of capabilities",
                "args": []
            },
            {
                "name": "description",
                "description": "Description of the stack",
                "args": []
            },
            {
                "name": "disable_rollback",
                "description": "Whether the rollback of the stack is disabled when stack creation fails",
                "args": []
            },
            {
                "name": "notification_arns",
                "description": "A list of SNS topic ARNs to publish stack related events",
                "args": []
            },
            {
                "name": "outputs",
                "description": "A map of outputs from the stack.",
                "args": []
            },
            {
                "name": "parameters",
                "description": "A map of parameters that specify input parameters for the stack.",
                "args": []
            },
            {
                "name": "tags",
                "description": "A map of tags associated with this stack.",
                "args": []
            },
            {
                "name": "template_body",
                "description": "Structure containing the template body.",
                "args": []
            },
            {
                "name": "iam_role_arn",
                "description": "The ARN of the IAM role used to create the stack.",
                "args": []
            },
            {
                "name": "timeout_in_minutes",
                "description": "The amount of time that can pass before the stack status becomes CREATE_FAILED",
                "args": []
            }
        ]
    },
    {
        "name": "aws_cloudtrail_service_account",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/cloudtrail_service_account.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "region",
                "description": "(Optional) Name of the region whose AWS CloudTrail account ID is desired.\nDefaults to the region from the AWS provider configuration.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the AWS CloudTrail service account in the selected region.",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the AWS CloudTrail service account in the selected region.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_db_instance",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/db_instance.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "db_instance_identifier",
                "description": "(Required) The name of the RDS instance",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "address",
                "description": "The address of the RDS instance.",
                "args": []
            },
            {
                "name": "allocated_storage",
                "description": "Specifies the allocated storage size specified in gigabytes.",
                "args": []
            },
            {
                "name": "auto_minor_version_upgrade",
                "description": "Indicates that minor version patches are applied automatically.",
                "args": []
            },
            {
                "name": "availability_zone",
                "description": "Specifies the name of the Availability Zone the DB instance is located in.",
                "args": []
            },
            {
                "name": "backup_retention_period",
                "description": "Specifies the number of days for which automatic DB snapshots are retained.",
                "args": []
            },
            {
                "name": "db_cluster_identifier",
                "description": "If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.",
                "args": []
            },
            {
                "name": "db_instance_arn",
                "description": "The Amazon Resource Name (ARN) for the DB instance.",
                "args": []
            },
            {
                "name": "db_instance_class",
                "description": "Contains the name of the compute and memory capacity class of the DB instance.",
                "args": []
            },
            {
                "name": "db_name",
                "description": "Contains the name of the initial database of this instance that was provided at create time, if one was specified when the DB instance was created. This same name is returned for the life of the DB instance.",
                "args": []
            },
            {
                "name": "db_parameter_groups",
                "description": "Provides the list of DB parameter groups applied to this DB instance.",
                "args": []
            },
            {
                "name": "db_security_groups",
                "description": "Provides List of DB security groups associated to this DB instance.",
                "args": []
            },
            {
                "name": "db_subnet_group",
                "description": "Specifies the name of the subnet group associated with the DB instance.",
                "args": []
            },
            {
                "name": "db_instance_port",
                "description": "Specifies the port that the DB instance listens on.",
                "args": []
            },
            {
                "name": "endpoint",
                "description": "The connection endpoint.",
                "args": []
            },
            {
                "name": "engine",
                "description": "Provides the name of the database engine to be used for this DB instance.",
                "args": []
            },
            {
                "name": "engine_version",
                "description": "Indicates the database engine version.",
                "args": []
            },
            {
                "name": "hosted_zone_id",
                "description": "The canonical hosted zone ID of the DB instance (to be used in a Route 53 Alias record).",
                "args": []
            },
            {
                "name": "iops",
                "description": "Specifies the Provisioned IOPS (I/O operations per second) value.",
                "args": []
            },
            {
                "name": "kms_key_id",
                "description": "If StorageEncrypted is true, the KMS key identifier for the encrypted DB instance.",
                "args": []
            },
            {
                "name": "license_model",
                "description": "License model information for this DB instance.",
                "args": []
            },
            {
                "name": "master_username",
                "description": "Contains the master username for the DB instance.",
                "args": []
            },
            {
                "name": "monitoring_interval",
                "description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance.",
                "args": []
            },
            {
                "name": "monitoring_role_arn",
                "description": "The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to CloudWatch Logs.",
                "args": []
            },
            {
                "name": "multi_az",
                "description": "Specifies if the DB instance is a Multi-AZ deployment.",
                "args": []
            },
            {
                "name": "option_group_memberships",
                "description": "Provides the list of option group memberships for this DB instance.",
                "args": []
            },
            {
                "name": "port",
                "description": "The database port.",
                "args": []
            },
            {
                "name": "preferred_backup_window",
                "description": "Specifies the daily time range during which automated backups are created.",
                "args": []
            },
            {
                "name": "preferred_maintenance_window",
                "description": "Specifies the weekly time range during which system maintenance can occur in UTC.",
                "args": []
            },
            {
                "name": "publicly_accessible",
                "description": "Specifies the accessibility options for the DB instance.",
                "args": []
            },
            {
                "name": "storage_encrypted",
                "description": "Specifies whether the DB instance is encrypted.",
                "args": []
            },
            {
                "name": "storage_type",
                "description": "Specifies the storage type associated with DB instance.",
                "args": []
            },
            {
                "name": "timezone",
                "description": "The time zone of the DB instance.",
                "args": []
            },
            {
                "name": "vpc_security_groups",
                "description": "Provides a list of VPC security group elements that the DB instance belongs to.",
                "args": []
            },
            {
                "name": "replicate_source_db",
                "description": "The identifier of the source DB that this is a replica of.",
                "args": []
            },
            {
                "name": "ca_cert_identifier",
                "description": "Specifies the identifier of the CA certificate for the DB instance.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_db_snapshot",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/db_snapshot.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "most_recent",
                "description": "(Optional) If more than one result is returned, use the most\nrecent Snapshot.",
                "args": []
            },
            {
                "name": "db_instance_identifier",
                "description": "(Optional) Returns the list of snapshots created by the specific db_instance",
                "args": []
            },
            {
                "name": "db_snapshot_identifier",
                "description": "(Optional) Returns information on a specific snapshot_id.",
                "args": []
            },
            {
                "name": "snapshot_type",
                "description": "(Optional) The type of snapshots to be returned. If you don't specify a SnapshotType \nvalue, then both automated and manual snapshots are returned. Shared and public DB snapshots are not \nincluded in the returned results by default. Possible values are, automated, manual, shared and public.",
                "args": []
            },
            {
                "name": "include_shared",
                "description": "(Optional) Set this value to true to include shared manual DB snapshots from other \nAWS accounts that this AWS account has been given permission to copy or restore, otherwise set this value to false. \nThe default is false.",
                "args": []
            },
            {
                "name": "include_public",
                "description": "(Optional) Set this value to true to include manual DB snapshots that are public and can be \ncopied or restored by any AWS account, otherwise set this value to false. The default is false.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The snapshot ID.",
                "args": []
            },
            {
                "name": "allocated_storage",
                "description": "Specifies the allocated storage size in gigabytes (GB).",
                "args": []
            },
            {
                "name": "availability_zone",
                "description": "Specifies the name of the Availability Zone the DB instance was located in at the time of the DB snapshot.",
                "args": []
            },
            {
                "name": "db_snapshot_arn",
                "description": "The Amazon Resource Name (ARN) for the DB snapshot.",
                "args": []
            },
            {
                "name": "encrypted",
                "description": "Specifies whether the DB snapshot is encrypted.",
                "args": []
            },
            {
                "name": "engine",
                "description": "Specifies the name of the database engine.",
                "args": []
            },
            {
                "name": "engine_version",
                "description": "Specifies the version of the database engine.",
                "args": []
            },
            {
                "name": "iops",
                "description": "Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at the time of the snapshot.",
                "args": []
            },
            {
                "name": "kms_key_id",
                "description": "The ARN for the KMS encryption key.",
                "args": []
            },
            {
                "name": "license_model",
                "description": "License model information for the restored DB instance.",
                "args": []
            },
            {
                "name": "option_group_name",
                "description": "Provides the option group name for the DB snapshot.",
                "args": []
            },
            {
                "name": "source_db_snapshot_identifier",
                "description": "The DB snapshot Arn that the DB snapshot was copied from. It only has value in case of cross customer or cross region copy.",
                "args": []
            },
            {
                "name": "source_region",
                "description": "The region that the DB snapshot was created in or copied from.",
                "args": []
            },
            {
                "name": "status",
                "description": "Specifies the status of this DB snapshot.",
                "args": []
            },
            {
                "name": "storage_type",
                "description": "Specifies the storage type associated with DB snapshot.",
                "args": []
            },
            {
                "name": "vpc_id",
                "description": "Specifies the storage type associated with DB snapshot.",
                "args": []
            },
            {
                "name": "snapshot_create_time",
                "description": "Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).",
                "args": []
            }
        ]
    },
    {
        "name": "aws_dynamodb_table",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/dynamodb_table.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the DynamoDB table.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_ebs_snapshot",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/ebs_snapshot.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "most_recent",
                "description": "(Optional) If more than one result is returned, use the most recent snapshot.",
                "args": []
            },
            {
                "name": "owners",
                "description": "(Optional) Returns the snapshots owned by the specified owner id. Multiple owners can be specified.",
                "args": []
            },
            {
                "name": "snapshot_ids",
                "description": "(Optional) Returns information on a specific snapshot_id.",
                "args": []
            },
            {
                "name": "restorable_by_user_ids",
                "description": "(Optional) One or more AWS accounts IDs that can create volumes from the snapshot.",
                "args": []
            },
            {
                "name": "filter",
                "description": "(Optional) One or more name/value pairs to filter off of. There are\nseveral valid keys, for a full reference, check out\ndescribe-snapshots in the AWS CLI reference.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The snapshot ID (e.g. snap-59fcb34e).",
                "args": []
            },
            {
                "name": "snapshot_id",
                "description": "The snapshot ID (e.g. snap-59fcb34e).",
                "args": []
            },
            {
                "name": "description",
                "description": "A description for the snapshot",
                "args": []
            },
            {
                "name": "owner_id",
                "description": "The AWS account ID of the EBS snapshot owner.",
                "args": []
            },
            {
                "name": "owner_alias",
                "description": "Value from an Amazon-maintained list (amazon, aws-marketplace, microsoft) of snapshot owners.",
                "args": []
            },
            {
                "name": "volume_id",
                "description": "The volume ID (e.g. vol-59fcb34e).",
                "args": []
            },
            {
                "name": "encrypted",
                "description": "Whether the snapshot is encrypted.",
                "args": []
            },
            {
                "name": "volume_size",
                "description": "The size of the drive in GiBs.",
                "args": []
            },
            {
                "name": "kms_key_id",
                "description": "The ARN for the KMS encryption key.",
                "args": []
            },
            {
                "name": "data_encryption_key_id",
                "description": "The data encryption key identifier for the snapshot.",
                "args": []
            },
            {
                "name": "state",
                "description": "The snapshot state.",
                "args": []
            },
            {
                "name": "tags",
                "description": "A mapping of tags for the resource.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ebs_snapshot_ids",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/ebs_snapshot_ids.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "owners",
                "description": "(Optional) Returns the snapshots owned by the specified owner id. Multiple owners can be specified.",
                "args": []
            },
            {
                "name": "restorable_by_user_ids",
                "description": "(Optional) One or more AWS accounts IDs that can create volumes from the snapshot.",
                "args": []
            },
            {
                "name": "filter",
                "description": "(Optional) One or more name/value pairs to filter off of. There are\nseveral valid keys, for a full reference, check out\ndescribe-volumes in the AWS CLI reference.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_ebs_volume",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/ebs_volume.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "most_recent",
                "description": "(Optional) If more than one result is returned, use the most\nrecent Volume.",
                "args": []
            },
            {
                "name": "filter",
                "description": "(Optional) One or more name/value pairs to filter off of. There are\nseveral valid keys, for a full reference, check out\ndescribe-volumes in the AWS CLI reference.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The volume ID (e.g. vol-59fcb34e).",
                "args": []
            },
            {
                "name": "volume_id",
                "description": "The volume ID (e.g. vol-59fcb34e).",
                "args": []
            },
            {
                "name": "arn",
                "description": "The volume ARN (e.g. arn:aws:ec2:us-east-1:0123456789012:volume/vol-59fcb34e).",
                "args": []
            },
            {
                "name": "availability_zone",
                "description": "The AZ where the EBS volume exists.",
                "args": []
            },
            {
                "name": "encrypted",
                "description": "Whether the disk is encrypted.",
                "args": []
            },
            {
                "name": "iops",
                "description": "The amount of IOPS for the disk.",
                "args": []
            },
            {
                "name": "size",
                "description": "The size of the drive in GiBs.",
                "args": []
            },
            {
                "name": "snapshot_id",
                "description": "The snapshot_id the EBS volume is based off.",
                "args": []
            },
            {
                "name": "volume_type",
                "description": "The type of EBS volume.",
                "args": []
            },
            {
                "name": "kms_key_id",
                "description": "The ARN for the KMS encryption key.",
                "args": []
            },
            {
                "name": "tags",
                "description": "A mapping of tags for the resource.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ecr_repository",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/ecr_repository.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the ECR Repository.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "Full ARN of the repository.",
                "args": []
            },
            {
                "name": "registry_id",
                "description": "The registry ID where the repository was created.",
                "args": []
            },
            {
                "name": "repository_url",
                "description": "The URL of the repository (in the form aws_account_id.dkr.ecr.region.amazonaws.com/repositoryName).",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ecs_cluster",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/ecs_cluster.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "cluster_name",
                "description": "(Required) The name of the ECS Cluster",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The ARN of the ECS Cluster",
                "args": []
            },
            {
                "name": "status",
                "description": "The status of the ECS Cluster",
                "args": []
            },
            {
                "name": "pending_tasks_count",
                "description": "The number of pending tasks for the ECS Cluster",
                "args": []
            },
            {
                "name": "running_tasks_count",
                "description": "The number of running tasks for the ECS Cluster",
                "args": []
            },
            {
                "name": "registered_container_instances_count",
                "description": "The number of registered container instances for the ECS Cluster",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ecs_container_definition",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/ecs_container_definition.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "task_definition",
                "description": "(Required) The ARN of the task definition which contains the container",
                "args": []
            },
            {
                "name": "container_name",
                "description": "(Required) The name of the container definition",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "image",
                "description": "The docker image in use, including the digest",
                "args": []
            },
            {
                "name": "image_digest",
                "description": "The digest of the docker image in use",
                "args": []
            },
            {
                "name": "cpu",
                "description": "The CPU limit for this container definition",
                "args": []
            },
            {
                "name": "memory",
                "description": "The memory limit for this container definition",
                "args": []
            },
            {
                "name": "memory_reservation",
                "description": "The soft limit (in MiB) of memory to reserve for the container. When system memory is under contention, Docker attempts to keep the container memory to this soft limit",
                "args": []
            },
            {
                "name": "environment",
                "description": "The environment in use",
                "args": []
            },
            {
                "name": "disable_networking",
                "description": "Indicator if networking is disabled",
                "args": []
            },
            {
                "name": "docker_labels",
                "description": "Set docker labels",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ecs_task_definition",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/ecs_task_definition.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "task_definition",
                "description": "(Required) The family for the latest ACTIVE revision, family and revision (family:revision) for a specific revision in the family, the ARN of the task definition to access to.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "family",
                "description": "The family of this task definition",
                "args": []
            },
            {
                "name": "network_mode",
                "description": "The Docker networking mode to use for the containers in this task.",
                "args": []
            },
            {
                "name": "revision",
                "description": "The revision of this task definition",
                "args": []
            },
            {
                "name": "status",
                "description": "The status of this task definition",
                "args": []
            },
            {
                "name": "task_role_arn",
                "description": "The ARN of the IAM role that containers in this task can assume",
                "args": []
            }
        ]
    },
    {
        "name": "aws_efs_file_system",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/efs_file_system.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "file_system_id",
                "description": "(Optional) The ID that identifies the file system (e.g. fs-ccfc0d65).",
                "args": []
            },
            {
                "name": "creation_token",
                "description": "(Optional) Restricts the list to the file system with this creation token.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "performance_mode",
                "description": "The PerformanceMode of the file system.",
                "args": []
            },
            {
                "name": "tags",
                "description": "The list of tags assigned to the file system.",
                "args": []
            },
            {
                "name": "encrypted",
                "description": "Whether EFS is encrypted.",
                "args": []
            },
            {
                "name": "kms_key_id",
                "description": "The ARN for the KMS encryption key.",
                "args": []
            },
            {
                "name": "dns_name",
                "description": "The DNS name for the filesystem per documented convention.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_efs_mount_target",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/efs_mount_target.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "mount_target_id",
                "description": "(Required) ID of the mount target that you want to have described",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "file_system_id",
                "description": "ID of the file system for which the mount target is intended.",
                "args": []
            },
            {
                "name": "subnet_id",
                "description": "ID of the mount target's subnet.",
                "args": []
            },
            {
                "name": "ip_address",
                "description": "Address at which the file system may be mounted via the mount target.",
                "args": []
            },
            {
                "name": "security_groups",
                "description": "List of VPC security group IDs attached to the mount target.",
                "args": []
            },
            {
                "name": "dns_name",
                "description": "The DNS name for the given subnet/AZ per documented convention.",
                "args": []
            },
            {
                "name": "network_interface_id",
                "description": "The ID of the network interface that Amazon EFS created when it created the mount target.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_eip",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/eip.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "id",
                "description": "(Optional) The allocation id of the specific EIP to retrieve.",
                "args": []
            },
            {
                "name": "public_ip",
                "description": "(Optional) The public IP of the specific EIP to retrieve.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_elastic_beanstalk_hosted_zone",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/elastic_beanstalk_hosted_zone.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "region",
                "description": "(Optional) The region you'd like the zone for. By default, fetches the current region.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the hosted zone.",
                "args": []
            },
            {
                "name": "region",
                "description": "The region of the hosted zone.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_elastic_beanstalk_solution_stack",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/elastic_beanstalk_solution_stack.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "most_recent",
                "description": "(Optional) If more than one result is returned, use the most\nrecent solution stack.",
                "args": []
            },
            {
                "name": "name_regex",
                "description": "A regex string to apply to the solution stack list returned\nby AWS. See Elastic Beanstalk Supported Platforms from\nAWS documentation for reference solution stack names.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "name",
                "description": "The name of the solution stack.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_elasticache_cluster",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/elasticache_cluster.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "cluster_id",
                "description": "– (Required) Group identifier.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "node_type",
                "description": "– The cluster node type.",
                "args": []
            },
            {
                "name": "num_cache_nodes",
                "description": "– The number of cache nodes that the cache cluster has.",
                "args": []
            },
            {
                "name": "engine",
                "description": "– Name of the cache engine.",
                "args": []
            },
            {
                "name": "engine_version",
                "description": "– Version number of the cache engine.",
                "args": []
            },
            {
                "name": "subnet_group_name",
                "description": "– Name of the subnet group associated to the cache cluster.",
                "args": []
            },
            {
                "name": "security_group_names",
                "description": "– List of security group names associated with this cache cluster.",
                "args": []
            },
            {
                "name": "security_group_ids",
                "description": "– List VPC security groups associated with the cache cluster.",
                "args": []
            },
            {
                "name": "parameter_group_name",
                "description": "– Name of the parameter group associated with this cache cluster.",
                "args": []
            },
            {
                "name": "replication_group_id",
                "description": "The replication group to which this cache cluster belongs.",
                "args": []
            },
            {
                "name": "maintenance_window",
                "description": "– Specifies the weekly time range for when maintenance\non the cache cluster is performed.",
                "args": []
            },
            {
                "name": "snapshot_window",
                "description": "The daily time range (in UTC) during which ElastiCache will\nbegin taking a daily snapshot of the cache cluster.",
                "args": []
            },
            {
                "name": "snapshot_retention_limit",
                "description": "The number of days for which ElastiCache will\nretain automatic cache cluster snapshots before deleting them.",
                "args": []
            },
            {
                "name": "availability_zone",
                "description": "The Availability Zone for the cache cluster.",
                "args": []
            },
            {
                "name": "notification_topic_arn",
                "description": "– An Amazon Resource Name (ARN) of an\nSNS topic that ElastiCache notifications get sent to.",
                "args": []
            },
            {
                "name": "port",
                "description": "– The port number on which each of the cache nodes will\naccept connections.",
                "args": []
            },
            {
                "name": "configuration_endpoint",
                "description": "The configuration endpoint to allow host discovery.",
                "args": []
            },
            {
                "name": "cluster_address",
                "description": "The DNS name of the cache cluster without the port appended.",
                "args": []
            },
            {
                "name": "cache_nodes",
                "description": "List of node objects including id, address, port and availability_zone.\n Referenceable e.g. as ${data.aws_elasticache_cluster.bar.cache_nodes.0.address}",
                "args": []
            },
            {
                "name": "tags",
                "description": "The tags assigned to the resource",
                "args": []
            }
        ]
    },
    {
        "name": "aws_elasticache_replication_group",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/elasticache_replication_group.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "replication_group_id",
                "description": "– (Required) The identifier for the replication group.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "replication_group_id",
                "description": "The identifier for the replication group.",
                "args": []
            },
            {
                "name": "replication_group_description",
                "description": "The description of the replication group.",
                "args": []
            },
            {
                "name": "auth_token_enabled",
                "description": "A flag that enables using an AuthToken (password) when issuing Redis commands.",
                "args": []
            },
            {
                "name": "automatic_failover_enabled",
                "description": "A flag whether a read-only replica will be automatically promoted to read/write primary if the existing primary fails.",
                "args": []
            },
            {
                "name": "node_type",
                "description": "– The cluster node type.",
                "args": []
            },
            {
                "name": "number_cache_clusters",
                "description": "– The number of cache clusters that the replication group has.",
                "args": []
            },
            {
                "name": "snapshot_window",
                "description": "The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your node group (shard).",
                "args": []
            },
            {
                "name": "snapshot_retention_limit",
                "description": "The number of days for which ElastiCache retains automatic cache cluster snapshots before deleting them.",
                "args": []
            },
            {
                "name": "port",
                "description": "– The port number on which the configuration endpoint will accept connections.",
                "args": []
            },
            {
                "name": "configuration_endpoint_address",
                "description": "The configuration endpoint address to allow host discovery.",
                "args": []
            },
            {
                "name": "primary_endpoint_address",
                "description": "The endpoint of the primary node in this node group (shard).",
                "args": []
            }
        ]
    },
    {
        "name": "aws_elb",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/elb.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The unique name of the load balancer.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_elb_hosted_zone_id",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/elb_hosted_zone_id.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "region",
                "description": "(Optional) Name of the region whose AWS ELB HostedZoneId is desired.\nDefaults to the region from the AWS provider configuration.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the AWS ELB HostedZoneId in the selected region.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_elb_service_account",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/elb_service_account.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "region",
                "description": "(Optional) Name of the region whose AWS ELB account ID is desired.\nDefaults to the region from the AWS provider configuration.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the AWS ELB service account in the selected region.",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the AWS ELB service account in the selected region.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_iam_account_alias",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/iam_account_alias.html",
        "groupName": "Data Sources",
        "args": [],
        "attrs": [
            {
                "name": "account_alias",
                "description": "The alias associated with the AWS account.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_iam_group",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/iam_group.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "group_name",
                "description": "(Required) The friendly IAM group name to match.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The Amazon Resource Name (ARN) specifying the group.",
                "args": []
            },
            {
                "name": "path",
                "description": "The path to the group.",
                "args": []
            },
            {
                "name": "group_id",
                "description": "The stable and unique string identifying the group.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_iam_instance_profile",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/iam_instance_profile.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The friendly IAM instance profile name to match.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The Amazon Resource Name (ARN) specifying the instance profile.",
                "args": []
            },
            {
                "name": "create_date",
                "description": "The string representation of the date the instance profile\n was created.",
                "args": []
            },
            {
                "name": "path",
                "description": "The path to the instance profile.",
                "args": []
            },
            {
                "name": "role_id",
                "description": "The role id associated with this instance profile.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_iam_policy",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/iam_policy.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "arn",
                "description": "(Required) ARN of the IAM policy.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "name",
                "description": "The name of the IAM policy.",
                "args": []
            },
            {
                "name": "arn",
                "description": "The Amazon Resource Name (ARN) specifying the policy.",
                "args": []
            },
            {
                "name": "path",
                "description": "The path to the policy.",
                "args": []
            },
            {
                "name": "description",
                "description": "The description of the policy.",
                "args": []
            },
            {
                "name": "policy",
                "description": "The policy document of the policy.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_iam_policy_document",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/iam_policy_document.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "policy_id",
                "description": "(Optional)  An ID for the policy document.",
                "args": []
            },
            {
                "name": "source_json",
                "description": "(Optional)  An IAM policy document to import as a base for the\ncurrent policy document.  Statements with non-blank sids in the current\npolicy document will overwrite statements with the same sid in the source\njson.  Statements without an sid cannot be overwritten.",
                "args": []
            },
            {
                "name": "override_json",
                "description": "(Optional)  An IAM policy document to import and override the\ncurrent policy document.  Statements with non-blank sids in the override\ndocument will overwrite statements with the same sid in the current document.\nStatements without an sid cannot be overwritten.",
                "args": []
            },
            {
                "name": "statement",
                "description": "(Required)  A nested configuration block (described below)\nconfiguring one statement to be included in the policy document.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "json",
                "description": "The above arguments serialized as a standard JSON policy document.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_iam_role",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/iam_role.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The friendly IAM role name to match.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The friendly IAM role name to match.",
                "args": []
            },
            {
                "name": "arn",
                "description": "The Amazon Resource Name (ARN) specifying the role.",
                "args": []
            },
            {
                "name": "assume_role_policy",
                "description": "The policy document associated with the role.",
                "args": []
            },
            {
                "name": "path",
                "description": "The path to the role.",
                "args": []
            },
            {
                "name": "unique_id",
                "description": "The stable and unique string identifying the role.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_iam_server_certificate",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/iam_server_certificate.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "name_prefix",
                "description": "prefix of cert to filter by",
                "args": []
            },
            {
                "name": "name",
                "description": "exact name of the cert to lookup",
                "args": []
            },
            {
                "name": "latest",
                "description": "sort results by expiration date. returns the certificate with expiration date in furthest in the future.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "is set to the ARN of the IAM Server Certificate",
                "args": []
            },
            {
                "name": "path",
                "description": "is set to the path of the IAM Server Certificate",
                "args": []
            },
            {
                "name": "expiration_date",
                "description": "is set to the expiration date of the IAM Server Certificate",
                "args": []
            },
            {
                "name": "upload_date",
                "description": "is the date when the server certificate was uploaded",
                "args": []
            },
            {
                "name": "certificate_body",
                "description": "is the public key certificate (PEMencoded). This is useful when configuring back-end instance authentication policy for load balancer",
                "args": []
            },
            {
                "name": "certificate_chain",
                "description": "is the public key certificate chain (PEMencoded) if exists, empty otherwise",
                "args": []
            }
        ]
    },
    {
        "name": "aws_iam_user",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/iam_user.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "user_name",
                "description": "(Required) The friendly IAM user name to match.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The Amazon Resource Name (ARN) assigned by AWS for this user.",
                "args": []
            },
            {
                "name": "path",
                "description": "Path in which this user was created.",
                "args": []
            },
            {
                "name": "user_id",
                "description": "The unique ID assigned by AWS for this user.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_instance",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/instance.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "instance_id",
                "description": "(Optional) Specify the exact Instance ID with which to populate the data source.",
                "args": []
            },
            {
                "name": "instance_tags",
                "description": "(Optional) A mapping of tags, each pair of which must\nexactly match a pair on the desired Instance.",
                "args": []
            },
            {
                "name": "filter",
                "description": "(Optional) One or more name/value pairs to use as filters. There are\nseveral valid keys, for a full reference, check out\ndescribe-instances in the AWS CLI reference.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "associate_public_ip_address",
                "description": "Whether or not the Instance is associated with a public IP address or not (Boolean).",
                "args": []
            },
            {
                "name": "availability_zone",
                "description": "The availability zone of the Instance.",
                "args": []
            },
            {
                "name": "ebs_block_device",
                "description": "The EBS block device mappings of the Instance.\ndelete_on_termination - If the EBS volume will be deleted on termination.\ndevice_name - The physical name of the device.\nencrypted - If the EBS volume is encrypted.\niops - 0 If the EBS volume is not a provisioned IOPS image, otherwise the supported IOPS count.\nsnapshot_id - The ID of the snapshot.\nvolume_size - The size of the volume, in GiB.\nvolume_type - The volume type.",
                "args": []
            },
            {
                "name": "ebs_optimized",
                "description": "Whether the Instance is EBS optimized or not (Boolean).",
                "args": []
            },
            {
                "name": "ephemeral_block_device",
                "description": "The ephemeral block device mappings of the Instance.\ndevice_name - The physical name of the device.\nno_device - Whether the specified device included in the device mapping was suppressed or not (Boolean).\nvirtual_name - The virtual device name.",
                "args": []
            },
            {
                "name": "iam_instance_profile",
                "description": "The name of the instance profile associated with the Instance.",
                "args": []
            },
            {
                "name": "ipv6_addresses",
                "description": "The IPv6 addresses associated to the Instance, if applicable. NOTE: Unlike the IPv4 address, this doesn't change if you attach an EIP to the instance.",
                "args": []
            },
            {
                "name": "instance_type",
                "description": "The type of the Instance.",
                "args": []
            },
            {
                "name": "key_name",
                "description": "The key name of the Instance.",
                "args": []
            },
            {
                "name": "monitoring",
                "description": "Whether detailed monitoring is enabled or disabled for the Instance (Boolean).",
                "args": []
            },
            {
                "name": "network_interface_id",
                "description": "The ID of the network interface that was created with the Instance.",
                "args": []
            },
            {
                "name": "placement_group",
                "description": "The placement group of the Instance.",
                "args": []
            },
            {
                "name": "private_dns",
                "description": "The private DNS name assigned to the Instance. Can only be\nused inside the Amazon EC2, and only available if you've enabled DNS hostnames\nfor your VPC.",
                "args": []
            },
            {
                "name": "private_ip",
                "description": "The private IP address assigned to the Instance.",
                "args": []
            },
            {
                "name": "public_dns",
                "description": "The public DNS name assigned to the Instance. For EC2-VPC, this\nis only available if you've enabled DNS hostnames for your VPC.",
                "args": []
            },
            {
                "name": "public_ip",
                "description": "The public IP address assigned to the Instance, if applicable. NOTE: If you are using an aws_eip with your instance, you should refer to the EIP's address directly and not use public_ip, as this field will change after the EIP is attached.",
                "args": []
            },
            {
                "name": "root_block_device",
                "description": "The root block device mappings of the Instance\ndelete_on_termination - If the root block device will be deleted on termination.\niops - 0 If the volume is not a provisioned IOPS image, otherwise the supported IOPS count.\nvolume_size - The size of the volume, in GiB.\nvolume_type - The type of the volume.",
                "args": []
            },
            {
                "name": "security_groups",
                "description": "The associated security groups.",
                "args": []
            },
            {
                "name": "source_dest_check",
                "description": "Whether the network interface performs source/destination checking (Boolean).",
                "args": []
            },
            {
                "name": "subnet_id",
                "description": "The VPC subnet ID.",
                "args": []
            },
            {
                "name": "user_data",
                "description": "The User Data supplied to the Instance.",
                "args": []
            },
            {
                "name": "tags",
                "description": "A mapping of tags assigned to the Instance.",
                "args": []
            },
            {
                "name": "tenancy",
                "description": "The tenancy of the instance: dedicated, default, host.",
                "args": []
            },
            {
                "name": "vpc_security_group_ids",
                "description": "The associated security groups in a non-default VPC.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_instances",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/instances.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "instance_tags",
                "description": "(Optional) A mapping of tags, each pair of which must\nexactly match a pair on desired instances.",
                "args": []
            },
            {
                "name": "filter",
                "description": "(Optional) One or more name/value pairs to use as filters. There are\nseveral valid keys, for a full reference, check out\ndescribe-instances in the AWS CLI reference.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "ids",
                "description": "IDs of instances found through the filter",
                "args": []
            },
            {
                "name": "private_ips",
                "description": "Private IP addresses of instances found through the filter",
                "args": []
            },
            {
                "name": "public_ips",
                "description": "Public IP addresses of instances found through the filter",
                "args": []
            }
        ]
    },
    {
        "name": "aws_internet_gateway",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/internet_gateway.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "internet_gateway_id",
                "description": "(Optional) The id of the specific Internet Gateway to retrieve.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags, each pair of which must exactly match\na pair on the desired Internet Gateway.",
                "args": []
            },
            {
                "name": "filter",
                "description": "(Optional) Custom filter block as described below.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "state",
                "description": "The current state of the attachment between the gateway and the VPC. Present only if a VPC is attached",
                "args": []
            },
            {
                "name": "vpc_id",
                "description": "The ID of an attached VPC.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ip_ranges",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/ip_ranges.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "regions",
                "description": "(Optional) Filter IP ranges by regions (or include all regions, if\nomitted). Valid items are global (for cloudfront) as well as all AWS regions\n(e.g. eu-central-1)",
                "args": []
            },
            {
                "name": "services",
                "description": "(Required) Filter IP ranges by services. Valid items are amazon\n(for amazon.com), cloudfront, codebuild, ec2, route53, route53_healthchecks and S3.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "cidr_blocks",
                "description": "The lexically ordered list of CIDR blocks.",
                "args": []
            },
            {
                "name": "create_date",
                "description": "The publication time of the IP ranges (e.g. 2016-08-03-23-46-05).",
                "args": []
            },
            {
                "name": "sync_token",
                "description": "The publication time of the IP ranges, in Unix epoch time format\n(e.g. 1470267965).",
                "args": []
            }
        ]
    },
    {
        "name": "aws_kinesis_stream",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/kinesis_stream.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the Kinesis Stream.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The Amazon Resource Name (ARN) of the Kinesis Stream (same as id).",
                "args": []
            },
            {
                "name": "name",
                "description": "The name of the Kinesis Stream.",
                "args": []
            },
            {
                "name": "creation_timestamp",
                "description": "The approximate UNIX timestamp that the stream was created.",
                "args": []
            },
            {
                "name": "status",
                "description": "The current status of the stream. The stream status is one of CREATING, DELETING, ACTIVE, or UPDATING.",
                "args": []
            },
            {
                "name": "retention_period",
                "description": "Length of time (in hours) data records are accessible after they are added to the stream.",
                "args": []
            },
            {
                "name": "open_shards",
                "description": "The list of shard ids in the OPEN state. See Shard State for more.",
                "args": []
            },
            {
                "name": "closed_shards",
                "description": "The list of shard ids in the CLOSED state. See Shard State for more.",
                "args": []
            },
            {
                "name": "shard_level_metrics",
                "description": "A list of shard-level CloudWatch metrics which are enabled for the stream. See Monitoring with CloudWatch for more.",
                "args": []
            },
            {
                "name": "tags",
                "description": "A mapping of tags to assigned to the stream.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_kms_alias",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/kms_alias.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The display name of the alias. The name must start with the word \"alias\" followed by a forward slash (alias/)",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The Amazon Resource Name(ARN) of the key alias.",
                "args": []
            },
            {
                "name": "target_key_id",
                "description": "Key identifier pointed to by the alias.",
                "args": []
            },
            {
                "name": "target_key_arn",
                "description": "ARN pointed to by the alias.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_kms_ciphertext",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/kms_ciphertext.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "plaintext",
                "description": "(Required) Data to be encrypted. Note that this may show up in logs, and it will be stored in the state file.",
                "args": []
            },
            {
                "name": "key_id",
                "description": "(Required) Globally unique key ID for the customer master key.",
                "args": []
            },
            {
                "name": "context",
                "description": "(Optional) An optional mapping that makes up the encryption context.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "ciphertext_blob",
                "description": "Base64 encoded ciphertext",
                "args": []
            }
        ]
    },
    {
        "name": "aws_kms_secret",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/kms_secret.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "secret",
                "description": "(Required) One or more encrypted payload definitions from the KMS\nservice.  See the Secret Definitions below.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_nat_gateway",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/nat_gateway.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "id",
                "description": "(Optional) The id of the specific Nat Gateway to retrieve.",
                "args": []
            },
            {
                "name": "subnet_id",
                "description": "(Optional) The id of subnet that the Nat Gateway resides in.",
                "args": []
            },
            {
                "name": "vpc_id",
                "description": "(Optional) The id of the VPC that the Nat Gateway resides in.",
                "args": []
            },
            {
                "name": "state",
                "description": "(Optional) The state of the NAT gateway (pending | failed | available | deleting | deleted ).",
                "args": []
            },
            {
                "name": "filter",
                "description": "(Optional) Custom filter block as described below.\nMore complex filters can be expressed using one or more filter sub-blocks,\nwhich take the following arguments:",
                "args": []
            },
            {
                "name": "name",
                "description": "(Required) The name of the field to filter by, as defined by\nthe underlying AWS API.",
                "args": []
            },
            {
                "name": "values",
                "description": "(Required) Set of values that are accepted for the given field.\nAn Nat Gateway will be selected if any one of the given values matches.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "allocation_id",
                "description": "The Id of the EIP allocated to the selected Nat Gateway.",
                "args": []
            },
            {
                "name": "network_interface_id",
                "description": "The Id of the ENI allocated to the selected Nat Gateway.",
                "args": []
            },
            {
                "name": "private_ip",
                "description": "The private Ip address of the selected Nat Gateway.",
                "args": []
            },
            {
                "name": "public_ip",
                "description": "The public Ip (EIP) address of the selected Nat Gateway.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_network_interface",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/network_interface.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "id",
                "description": "– (Optional) The identifier for the network interface.",
                "args": []
            },
            {
                "name": "filter",
                "description": "– (Optional) One or more name/value pairs to filter off of. There are several valid keys, for a full reference, check out describenetwork-interfaces in the AWS CLI reference.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "association",
                "description": "The association information for an Elastic IP address (IPv4) associated with the network interface. See supported fields below.",
                "args": []
            },
            {
                "name": "availability_zone",
                "description": "The Availability Zone.",
                "args": []
            },
            {
                "name": "interface_type",
                "description": "The type of interface.",
                "args": []
            },
            {
                "name": "ipv6_addresses",
                "description": "List of IPv6 addresses to assign to the ENI.",
                "args": []
            },
            {
                "name": "mac_address",
                "description": "The MAC address.",
                "args": []
            },
            {
                "name": "owner_id",
                "description": "The AWS account ID of the owner of the network interface.",
                "args": []
            },
            {
                "name": "requester_id",
                "description": "The ID of the entity that launched the instance on your behalf.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_lb",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/lb.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "arn",
                "description": "(Optional) The full ARN of the load balancer.",
                "args": []
            },
            {
                "name": "name",
                "description": "(Optional) The unique name of the load balancer.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_lb_listener",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/lb_listener.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "arn",
                "description": "(Optional) The arn of the listener. Required if load_balancer_arn and port is not set.",
                "args": []
            },
            {
                "name": "load_balancer_arn",
                "description": "(Optional) The arn of the load balander. Required if arn is not set.",
                "args": []
            },
            {
                "name": "port",
                "description": "(Optional) The port of the listener. Required if arn is not set.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_lb_target_group",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/lb_target_group.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "arn",
                "description": "(Optional) The full ARN of the target group.",
                "args": []
            },
            {
                "name": "name",
                "description": "(Optional) The unique name of the target group.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_partition",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/partition.html",
        "groupName": "Data Sources",
        "args": [],
        "attrs": []
    },
    {
        "name": "aws_prefix_list",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/prefix_list.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "prefix_list_id",
                "description": "(Optional) The ID of the prefix list to select.",
                "args": []
            },
            {
                "name": "name",
                "description": "(Optional) The name of the prefix list to select.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the selected prefix list.",
                "args": []
            },
            {
                "name": "name",
                "description": "The name of the selected prefix list.",
                "args": []
            },
            {
                "name": "cidr_blocks",
                "description": "The list of CIDR blocks for the AWS service associated\nwith the prefix list.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_rds_cluster",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/rds_cluster.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "cluster_identifier",
                "description": "(Required) The cluster identifier of the RDS cluster.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_redshift_service_account",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/redshift_service_account.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "region",
                "description": "(Optional) Name of the region whose AWS Redshift account ID is desired.\nDefaults to the region from the AWS provider configuration.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the AWS Redshift service account in the selected region.",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the AWS Redshift service account in the selected region.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_region",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/region.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "name",
                "description": "(Optional) The full name of the region to select.",
                "args": []
            },
            {
                "name": "endpoint",
                "description": "(Optional) The EC2 endpoint of the region to select.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "name",
                "description": "The name of the selected region.",
                "args": []
            },
            {
                "name": "current",
                "description": "true if the selected region is the one configured on the\nprovider, or false otherwise.",
                "args": []
            },
            {
                "name": "endpoint",
                "description": "The EC2 endpoint for the selected region.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_route53_zone",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/route53_zone.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "zone_id",
                "description": "(Optional) The Hosted Zone id of the desired Hosted Zone.",
                "args": []
            },
            {
                "name": "name",
                "description": "(Optional) The Hosted Zone name of the desired Hosted Zone.",
                "args": []
            },
            {
                "name": "private_zone",
                "description": "(Optional) Used with name field to get a private Hosted Zone.",
                "args": []
            },
            {
                "name": "vpc_id",
                "description": "(Optional) Used with name field to get a private Hosted Zone associated with the vpc_id (in this case, private_zone is not mandatory).",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) Used with name field. A mapping of tags, each pair of which must exactly match\na pair on the desired Hosted Zone.Attributes Reference",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_route_table",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/route_table.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "filter",
                "description": "(Optional) Custom filter block as described below.",
                "args": []
            },
            {
                "name": "route_table_id",
                "description": "(Optional) The id of the specific Route Table to retrieve.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags, each pair of which must exactly match\na pair on the desired Route Table.",
                "args": []
            },
            {
                "name": "vpc_id",
                "description": "(Optional) The id of the VPC that the desired Route Table belongs to.",
                "args": []
            },
            {
                "name": "subnet_id",
                "description": "(Optional) The id of a Subnet which is connected to the Route Table (not be exported if not given in parameter).",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "cidr_block",
                "description": "The CIDR block of the route.",
                "args": []
            },
            {
                "name": "ipv6_cidr_block",
                "description": "The IPv6 CIDR block of the route.",
                "args": []
            },
            {
                "name": "egress_only_gateway_id",
                "description": "The ID of the Egress Only Internet Gateway.",
                "args": []
            },
            {
                "name": "gateway_id",
                "description": "The Internet Gateway ID.",
                "args": []
            },
            {
                "name": "nat_gateway_id",
                "description": "The NAT Gateway ID.",
                "args": []
            },
            {
                "name": "instance_id",
                "description": "The EC2 instance ID.",
                "args": []
            },
            {
                "name": "vpc_peering_connection_id",
                "description": "The VPC Peering ID.",
                "args": []
            },
            {
                "name": "network_interface_id",
                "description": "The ID of the elastic network interface (eni) to use.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_s3_bucket",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/s3_bucket.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "bucket",
                "description": "(Required) The name of the bucket",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_s3_bucket_object",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/s3_bucket_object.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "bucket",
                "description": "(Required) The name of the bucket to read the object from",
                "args": []
            },
            {
                "name": "key",
                "description": "(Required) The full path to the object inside the bucket",
                "args": []
            },
            {
                "name": "version_id",
                "description": "(Optional) Specific version ID of the object returned (defaults to latest version)",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "body",
                "description": "Object data (see limitations above to understand cases in which this field is actually available)",
                "args": []
            },
            {
                "name": "cache_control",
                "description": "Specifies caching behavior along the request/reply chain.",
                "args": []
            },
            {
                "name": "content_disposition",
                "description": "Specifies presentational information for the object.",
                "args": []
            },
            {
                "name": "content_encoding",
                "description": "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.",
                "args": []
            },
            {
                "name": "content_language",
                "description": "The language the content is in.",
                "args": []
            },
            {
                "name": "content_length",
                "description": "Size of the body in bytes.",
                "args": []
            },
            {
                "name": "content_type",
                "description": "A standard MIME type describing the format of the object data.",
                "args": []
            },
            {
                "name": "etag",
                "description": "ETag generated for the object (an MD5 sum of the object content in case it's not encrypted)",
                "args": []
            },
            {
                "name": "expiration",
                "description": "If the object expiration is configured (see object lifecycle management), the field includes this header. It includes the expiry-date and rule-id key value pairs providing object expiration information. The value of the rule-id is URL encoded.",
                "args": []
            },
            {
                "name": "expires",
                "description": "The date and time at which the object is no longer cacheable.",
                "args": []
            },
            {
                "name": "last_modified",
                "description": "Last modified date of the object in RFC1123 format (e.g. Mon, 02 Jan 2006 15:04:05 MST)",
                "args": []
            },
            {
                "name": "metadata",
                "description": "A map of metadata stored with the object in S3",
                "args": []
            },
            {
                "name": "server_side_encryption",
                "description": "If the object is stored using server-side encryption (KMS or Amazon S3-managed encryption key), this field includes the chosen encryption and algorithm used.",
                "args": []
            },
            {
                "name": "sse_kms_key_id",
                "description": "If present, specifies the ID of the Key Management Service (KMS) master encryption key that was used for the object.",
                "args": []
            },
            {
                "name": "storage_class",
                "description": "Storage class information of the object. Available for all objects except for Standard storage class objects.",
                "args": []
            },
            {
                "name": "version_id",
                "description": "The latest version ID of the object returned.",
                "args": []
            },
            {
                "name": "website_redirect_location",
                "description": "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.",
                "args": []
            },
            {
                "name": "tags",
                "description": "A mapping of tags assigned to the object.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_security_group",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/security_group.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "filter",
                "description": "(Optional) Custom filter block as described below.",
                "args": []
            },
            {
                "name": "id",
                "description": "(Optional) The id of the specific security group to retrieve.",
                "args": []
            },
            {
                "name": "name",
                "description": "(Optional) The name that the desired security group must have.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags, each pair of which must exactly match\na pair on the desired security group.",
                "args": []
            },
            {
                "name": "vpc_id",
                "description": "(Optional) The id of the VPC that the desired security group belongs to.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "description",
                "description": "The description of the security group.",
                "args": []
            },
            {
                "name": "arn",
                "description": "The computed ARN of the security group.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_sns_topic",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/sns_topic.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The friendly name of the topic to match.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "Set to the ARN of the found topic, suitable for referencing in other resources that support SNS topics.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ssm_parameter",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/ssm_parameter.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the parameter.",
                "args": []
            },
            {
                "name": "with_decryption",
                "description": "(Optional) Whether to return decrypted SecureString value. Defaults to true.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_subnet",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/subnet.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "availability_zone",
                "description": "(Optional) The availability zone where the\nsubnet must reside.",
                "args": []
            },
            {
                "name": "cidr_block",
                "description": "(Optional) The cidr block of the desired subnet.",
                "args": []
            },
            {
                "name": "ipv6_cidr_block",
                "description": "(Optional) The Ipv6 cidr block of the desired subnet",
                "args": []
            },
            {
                "name": "default_for_az",
                "description": "(Optional) Boolean constraint for whether the desired\nsubnet must be the default subnet for its associated availability zone.",
                "args": []
            },
            {
                "name": "filter",
                "description": "(Optional) Custom filter block as described below.",
                "args": []
            },
            {
                "name": "id",
                "description": "(Optional) The id of the specific subnet to retrieve.",
                "args": []
            },
            {
                "name": "state",
                "description": "(Optional) The state that the desired subnet must have.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags, each pair of which must exactly match\na pair on the desired subnet.",
                "args": []
            },
            {
                "name": "vpc_id",
                "description": "(Optional) The id of the VPC that the desired subnet belongs to.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_subnet_ids",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/subnet_ids.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "vpc_id",
                "description": "(Required) The VPC ID that you want to filter from.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags, each pair of which must exactly match\na pair on the desired subnets.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "ids",
                "description": "A list of all the subnet ids found. This data source will fail if none are found.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_vpc",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/vpc.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "cidr_block",
                "description": "(Optional) The cidr block of the desired VPC.",
                "args": []
            },
            {
                "name": "dhcp_options_id",
                "description": "(Optional) The DHCP options id of the desired VPC.",
                "args": []
            },
            {
                "name": "default",
                "description": "(Optional) Boolean constraint on whether the desired VPC is\nthe default VPC for the region.",
                "args": []
            },
            {
                "name": "filter",
                "description": "(Optional) Custom filter block as described below.",
                "args": []
            },
            {
                "name": "id",
                "description": "(Optional) The id of the specific VPC to retrieve.",
                "args": []
            },
            {
                "name": "state",
                "description": "(Optional) The current state of the desired VPC.\nCan be either \"pending\" or \"available\".",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags, each pair of which must exactly match\na pair on the desired VPC.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "instance_tenancy",
                "description": "The allowed tenancy of instances launched into the\nselected VPC. May be any of \"default\", \"dedicated\", or \"host\".",
                "args": []
            },
            {
                "name": "ipv6_association_id",
                "description": "The association ID for the IPv6 CIDR block.",
                "args": []
            },
            {
                "name": "ipv6_cidr_block",
                "description": "The IPv6 CIDR block.",
                "args": []
            },
            {
                "name": "enable_dns_support",
                "description": "Whether or not the VPC has DNS support",
                "args": []
            },
            {
                "name": "enable_dns_hostnames",
                "description": "Whether or not the VPC has DNS hostname support",
                "args": []
            }
        ]
    },
    {
        "name": "aws_vpc_endpoint",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/vpc_endpoint.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "id",
                "description": "(Optional) The ID of the specific VPC Endpoint to retrieve.",
                "args": []
            },
            {
                "name": "state",
                "description": "(Optional) The state of the specific VPC Endpoint to retrieve.",
                "args": []
            },
            {
                "name": "vpc_id",
                "description": "(Optional) The ID of the VPC in which the specific VPC Endpoint is used.",
                "args": []
            },
            {
                "name": "service_name",
                "description": "(Optional) The AWS service name of the specific VPC Endpoint to retrieve.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "vpc_endpoint_type",
                "description": "The VPC Endpoint type, Gateway or Interface.",
                "args": []
            },
            {
                "name": "policy",
                "description": "The policy document associated with the VPC Endpoint. Applicable for endpoints of type Gateway.",
                "args": []
            },
            {
                "name": "route_table_ids",
                "description": "One or more route tables associated with the VPC Endpoint. Applicable for endpoints of type Gateway.",
                "args": []
            },
            {
                "name": "prefix_list_id",
                "description": "The prefix list ID of the exposed AWS service. Applicable for endpoints of type Gateway.",
                "args": []
            },
            {
                "name": "cidr_blocks",
                "description": "The list of CIDR blocks for the exposed AWS service. Applicable for endpoints of type Gateway.",
                "args": []
            },
            {
                "name": "subnet_ids",
                "description": "One or more subnets in which the VPC Endpoint is located. Applicable for endpoints of type Interface.",
                "args": []
            },
            {
                "name": "network_interface_ids",
                "description": "One or more network interfaces for the VPC Endpoint. Applicable for endpoints of type Interface.",
                "args": []
            },
            {
                "name": "security_group_ids",
                "description": "One or more security groups associated with the network interfaces. Applicable for endpoints of type Interface.",
                "args": []
            },
            {
                "name": "private_dns_enabled",
                "description": "Whether or not the VPC is associated with a private hosted zone - true or false. Applicable for endpoints of type Gateway.",
                "args": []
            },
            {
                "name": "dns_entry",
                "description": "The DNS entries for the VPC Endpoint. Applicable for endpoints of type Interface. DNS blocks are documented below.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_vpc_endpoint_service",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/vpc_endpoint_service.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "service",
                "description": "(Optional) The common name of an AWS service (e.g. s3).",
                "args": []
            },
            {
                "name": "service_name",
                "description": "(Optional) The service name that can be specified when creating a VPC endpoint.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "service_type",
                "description": "The service type, Gateway or Interface.",
                "args": []
            },
            {
                "name": "owner",
                "description": "The AWS account ID of the service owner or amazon.",
                "args": []
            },
            {
                "name": "vpc_endpoint_policy_supported",
                "description": "Whether or not the service supports endpoint policies - true or false.",
                "args": []
            },
            {
                "name": "acceptance_required",
                "description": "Whether or not VPC endpoint connection requests to the service must be accepted by the service owner - true or false.",
                "args": []
            },
            {
                "name": "availability_zones",
                "description": "The Availability Zones in which the service is available.",
                "args": []
            },
            {
                "name": "private_dns_name",
                "description": "The private DNS name for the service.",
                "args": []
            },
            {
                "name": "base_endpoint_dns_names",
                "description": "The DNS names for the service.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_vpc_peering_connection",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/vpc_peering_connection.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "id",
                "description": "(Optional) The ID of the specific VPC Peering Connection to retrieve.",
                "args": []
            },
            {
                "name": "status",
                "description": "(Optional) The status of the specific VPC Peering Connection to retrieve.",
                "args": []
            },
            {
                "name": "vpc_id",
                "description": "(Optional) The ID of the requester VPC of the specific VPC Peering Connection to retrieve.",
                "args": []
            },
            {
                "name": "owner_id",
                "description": "(Optional) The AWS account ID of the owner of the requester VPC of the specific VPC Peering Connection to retrieve.",
                "args": []
            },
            {
                "name": "cidr_block",
                "description": "(Optional) The CIDR block of the requester VPC of the specific VPC Peering Connection to retrieve.",
                "args": []
            },
            {
                "name": "region",
                "description": "(Optional) The region of the requester VPC of the specific VPC Peering Connection to retrieve.",
                "args": []
            },
            {
                "name": "peer_vpc_id",
                "description": "(Optional) The ID of the accepter VPC of the specific VPC Peering Connection to retrieve.",
                "args": []
            },
            {
                "name": "peer_owner_id",
                "description": "(Optional) The AWS account ID of the owner of the accepter VPC of the specific VPC Peering Connection to retrieve.",
                "args": []
            },
            {
                "name": "peer_cidr_block",
                "description": "(Optional) The CIDR block of the accepter VPC of the specific VPC Peering Connection to retrieve.",
                "args": []
            },
            {
                "name": "peer_region",
                "description": "(Optional) The region of the accepter VPC of the specific VPC Peering Connection to retrieve.",
                "args": []
            },
            {
                "name": "filter",
                "description": "(Optional) Custom filter block as described below.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags, each pair of which must exactly match\na pair on the desired VPC Peering Connection.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "accepter",
                "description": "A configuration block that describes [VPC Peering Connection]\n(http://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide) options set for the accepter VPC.",
                "args": []
            },
            {
                "name": "requester",
                "description": "A configuration block that describes [VPC Peering Connection]\n(http://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide) options set for the requester VPC.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_vpn_gateway",
        "type": "data_source",
        "url": "https://www.terraform.io/docs/providers/aws/d/vpn_gateway.html",
        "groupName": "Data Sources",
        "args": [
            {
                "name": "id",
                "description": "(Optional) The ID of the specific VPN Gateway to retrieve.",
                "args": []
            },
            {
                "name": "state",
                "description": "(Optional) The state of the specific VPN Gateway to retrieve.",
                "args": []
            },
            {
                "name": "availability_zone",
                "description": "(Optional) The Availability Zone of the specific VPN Gateway to retrieve.",
                "args": []
            },
            {
                "name": "attached_vpc_id",
                "description": "(Optional) The ID of a VPC attached to the specific VPN Gateway to retrieve.",
                "args": []
            },
            {
                "name": "filter",
                "description": "(Optional) Custom filter block as described below.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags, each pair of which must exactly match\na pair on the desired VPN Gateway.",
                "args": []
            },
            {
                "name": "amazon_side_asn",
                "description": "(Optional) The Autonomous System Number (ASN) for the Amazon side of the specific VPN Gateway to retrieve.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_acm_certificate",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/acm_certificate.html",
        "groupName": "ACM Resources",
        "args": [
            {
                "name": "domain_name",
                "description": "(Required) A domain name for which the certificate should be issued",
                "args": []
            },
            {
                "name": "subject_alternative_names",
                "description": "(Optional) A list of domains that should be SANs in the issued certificate",
                "args": []
            },
            {
                "name": "validation_method",
                "description": "(Required) Which method to use for validation. DNS or EMAIL are valid, NONE can be used for certificates that were imported into ACM and then into Terraform.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ARN of the certificate",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the certificate",
                "args": []
            },
            {
                "name": "domain_validation_options",
                "description": "A list of attributes to feed into other resources to complete certificate validation. Can have more than one element, e.g. if SANs are defined. Only set if DNS-validation was used.",
                "args": []
            },
            {
                "name": "validation_emails",
                "description": "A list of addresses that received a validation E-Mail. Only set if EMAIL-validation was used.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_acm_certificate_validation",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/acm_certificate_validation.html",
        "groupName": "ACM Resources",
        "args": [
            {
                "name": "certificate_arn",
                "description": "(Required) The ARN of the certificate that is being validated.",
                "args": []
            },
            {
                "name": "validation_record_fqdns",
                "description": "(Optional) List of FQDNs that implement the validation. If this is set, the resource can implement additional sanity checks and has an explicit dependency on the resource that is implementing the validation",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_api_gateway_account",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/api_gateway_account.html",
        "groupName": "API Gateway Resources",
        "args": [
            {
                "name": "cloudwatch_role_arn",
                "description": "(Optional) The ARN of an IAM role for CloudWatch (to allow logging & monitoring).\n  See more in AWS Docs.\n  Logging & monitoring can be enabled/disabled and otherwise tuned on the API Gateway Stage level.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_api_gateway_api_key",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/api_gateway_api_key.html",
        "groupName": "API Gateway Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the API key",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) The API key description. Defaults to \"Managed by Terraform\".",
                "args": []
            },
            {
                "name": "enabled",
                "description": "(Optional) Specifies whether the API key can be used by callers. Defaults to true.",
                "args": []
            },
            {
                "name": "value",
                "description": "(Optional) The value of the API key. If not specified, it will be automatically generated by AWS on creation.",
                "args": []
            },
            {
                "name": "stage_key",
                "description": "(Optional) A list of stage keys associated with the API key - see below",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_api_gateway_authorizer",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/api_gateway_authorizer.html",
        "groupName": "API Gateway Resources",
        "args": [
            {
                "name": "authorizer_uri",
                "description": "(Required) The authorizer's Uniform Resource Identifier (URI).\n  For TOKEN type, this must be a well-formed Lambda function URI in the form of\n  arn:aws:apigateway:{region}:lambda:path/{service_api}. e.g. arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:012345678912:function:my-function/invocations",
                "args": []
            },
            {
                "name": "name",
                "description": "(Required) The name of the authorizer",
                "args": []
            },
            {
                "name": "rest_api_id",
                "description": "(Required) The ID of the associated REST API",
                "args": []
            },
            {
                "name": "identity_source",
                "description": "(Optional) The source of the identity in an incoming request.\n  Defaults to method.request.header.Authorization. For REQUEST type, this may be a comma-separated list of values, including headers, query string parameters and stage variables - e.g. \"method.request.header.SomeHeaderName,method.request.querystring.SomeQueryStringName,stageVariables.SomeStageVariableName\"",
                "args": []
            },
            {
                "name": "type",
                "description": "(Optional) The type of the authorizer. Possible values are TOKEN and REQUEST.\n  Defaults to TOKEN.",
                "args": []
            },
            {
                "name": "authorizer_credentials",
                "description": "(Optional) The credentials required for the authorizer.\n  To specify an IAM Role for API Gateway to assume, use the IAM Role ARN.",
                "args": []
            },
            {
                "name": "authorizer_result_ttl_in_seconds",
                "description": "(Optional) The TTL of cached authorizer results in seconds.\n  Defaults to 300.",
                "args": []
            },
            {
                "name": "identity_validation_expression",
                "description": "(Optional) A validation expression for the incoming identity.\n  For TOKEN type, this value should be a regular expression. The incoming token from the client is matched\n  against this expression, and will proceed if the token matches. If the token doesn't match,\n  the client receives a 401 Unauthorized response.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_api_gateway_base_path_mapping",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/api_gateway_base_path_mapping.html",
        "groupName": "API Gateway Resources",
        "args": [
            {
                "name": "domain_name",
                "description": "(Required) The already-registered domain name to connect the API to.",
                "args": []
            },
            {
                "name": "api_id",
                "description": "(Required) The id of the API to connect.",
                "args": []
            },
            {
                "name": "stage_name",
                "description": "(Optional) The name of a specific deployment stage to expose at the given path. If omitted, callers may select any stage by including its name as a path element after the base path.",
                "args": []
            },
            {
                "name": "base_path",
                "description": "(Optional) Path segment that must be prepended to the path when accessing the API via this mapping. If omitted, the API is exposed at the root of the given domain.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_api_gateway_client_certificate",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/api_gateway_client_certificate.html",
        "groupName": "API Gateway Resources",
        "args": [
            {
                "name": "description",
                "description": "(Optional) The description of the client certificate.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_api_gateway_deployment",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/api_gateway_deployment.html",
        "groupName": "API Gateway Resources",
        "args": [
            {
                "name": "rest_api_id",
                "description": "(Required) The ID of the associated REST API",
                "args": []
            },
            {
                "name": "stage_name",
                "description": "(Required) The name of the stage",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) The description of the deployment",
                "args": []
            },
            {
                "name": "stage_description",
                "description": "(Optional) The description of the stage",
                "args": []
            },
            {
                "name": "variables",
                "description": "(Optional) A map that defines variables for the stage",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_api_gateway_documentation_part",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/api_gateway_documentation_part.html",
        "groupName": "API Gateway Resources",
        "args": [
            {
                "name": "location",
                "description": "(Required) The location of the targeted API entity of the to-be-created documentation part. See below.",
                "args": []
            },
            {
                "name": "properties",
                "description": "(Required) A content map of API-specific key-value pairs describing the targeted API entity. The map must be encoded as a JSON string, e.g., \"{ \\\"description\\\": \\\"The API does ...\\\" }\". Only Swagger-compliant key-value pairs can be exported and, hence, published.",
                "args": []
            },
            {
                "name": "rest_api_id",
                "description": "(Required) The ID of the associated Rest API",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_api_gateway_documentation_version",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/api_gateway_documentation_version.html",
        "groupName": "API Gateway Resources",
        "args": [
            {
                "name": "version",
                "description": "(Required) The version identifier of the API documentation snapshot.",
                "args": []
            },
            {
                "name": "rest_api_id",
                "description": "(Required) The ID of the associated Rest API",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) The description of the API documentation version.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_api_gateway_domain_name",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/api_gateway_domain_name.html",
        "groupName": "API Gateway Resources",
        "args": [
            {
                "name": "domain_name",
                "description": "(Required) The fully-qualified domain name to register",
                "args": []
            },
            {
                "name": "certificate_name",
                "description": "(Optional) The unique name to use when registering this\ncert as an IAM server certificate. Conflicts with certificate_arn. Required if certificate_arn is not set.",
                "args": []
            },
            {
                "name": "certificate_body",
                "description": "(Optional) The certificate issued for the domain name\nbeing registered, in PEM format. Conflicts with certificate_arn.",
                "args": []
            },
            {
                "name": "certificate_chain",
                "description": "(Optional) The certificate for the CA that issued the\ncertificate, along with any intermediate CA certificates required to\ncreate an unbroken chain to a certificate trusted by the intended API clients. Conflicts with certificate_arn.",
                "args": []
            },
            {
                "name": "certificate_private_key",
                "description": "(Optional) The private key associated with the\ndomain certificate given in certificate_body. Conflicts with certificate_arn.",
                "args": []
            },
            {
                "name": "certificate_arn",
                "description": "(Optional) The ARN for an AWS-managed certificate. Conflicts with certificate_name, certificate_body, certificate_chain and certificate_private_key.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The internal id assigned to this domain name by API Gateway.",
                "args": []
            },
            {
                "name": "certificate_upload_date",
                "description": "The upload date associated with the domain certificate.",
                "args": []
            },
            {
                "name": "cloudfront_domain_name",
                "description": "The hostname created by Cloudfront to represent\nthe distribution that implements this domain name mapping.",
                "args": []
            },
            {
                "name": "cloudfront_zone_id",
                "description": "For convenience, the hosted zone id (Z2FDTNDATAQYW2)\nthat can be used to create a Route53 alias record for the distribution.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_api_gateway_gateway_response",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/api_gateway_gateway_response.html",
        "groupName": "API Gateway Resources",
        "args": [
            {
                "name": "rest_api_id",
                "description": "(Required) The string identifier of the associated REST API.",
                "args": []
            },
            {
                "name": "response_type",
                "description": "(Required) The response type of the associated GatewayResponse.",
                "args": []
            },
            {
                "name": "status_code",
                "description": "(Optional) The HTTP status code of the Gateway Response.",
                "args": []
            },
            {
                "name": "response_parameters",
                "description": "(Optional) A map specifying the templates used to transform the response body.",
                "args": []
            },
            {
                "name": "response_templates",
                "description": "(Optional) A map specifying the parameters (paths, query strings and headers) of the Gateway Response.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_api_gateway_integration",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/api_gateway_integration.html",
        "groupName": "API Gateway Resources",
        "args": [
            {
                "name": "rest_api_id",
                "description": "(Required) The ID of the associated REST API.",
                "args": []
            },
            {
                "name": "resource_id",
                "description": "(Required) The API resource ID.",
                "args": []
            },
            {
                "name": "http_method",
                "description": "(Required) The HTTP method (GET, POST, PUT, DELETE, HEAD, OPTION, ANY)\nwhen calling the associated resource.",
                "args": []
            },
            {
                "name": "integration_http_method",
                "description": "(Optional) The integration HTTP method\n(GET, POST, PUT, DELETE, HEAD, OPTION) specifying how API Gateway will interact with the back end.\nRequired if type is AWS, AWS_PROXY, HTTP or HTTP_PROXY.\nNot all methods are compatible with all AWS integrations.\ne.g. Lambda function can only be invoked via POST.",
                "args": []
            },
            {
                "name": "type",
                "description": "(Required) The integration input's type. Valid values are HTTP (for HTTP backends), MOCK (not calling any real backend), AWS (for AWS services), AWS_PROXY (for Lambda proxy integration) and HTTP_PROXY (for HTTP proxy integration).",
                "args": []
            },
            {
                "name": "uri",
                "description": "(Optional) The input's URI (HTTP, AWS). Required if type is HTTP or AWS.\nFor HTTP integrations, the URI must be a fully formed, encoded HTTP(S) URL according to the RFC-3986 specification . For AWS integrations, the URI should be of the form arn:aws:apigateway:{region}:{subdomain.service|service}:{path|action}/{service_api}. region, subdomain and service are used to determine the right endpoint.\ne.g. arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:012345678901:function:my-func/invocations",
                "args": []
            },
            {
                "name": "credentials",
                "description": "(Optional) The credentials required for the integration. For AWS integrations, 2 options are available. To specify an IAM Role for Amazon API Gateway to assume, use the role's ARN. To require that the caller's identity be passed through from the request, specify the string arn:aws:iam::\\*:user/\\*.",
                "args": []
            },
            {
                "name": "request_templates",
                "description": "(Optional) A map of the integration's request templates.",
                "args": []
            },
            {
                "name": "request_parameters",
                "description": "(Optional) A map of request query string parameters and headers that should be passed to the backend responder.\nFor example: request_parameters = { \"integration.request.header.X-Some-Other-Header\" = \"method.request.header.X-Some-Header\" }",
                "args": []
            },
            {
                "name": "passthrough_behavior",
                "description": "(Optional) The integration passthrough behavior (WHEN_NO_MATCH, WHEN_NO_TEMPLATES, NEVER).  Required if request_templates is used.",
                "args": []
            },
            {
                "name": "cache_key_parameters",
                "description": "(Optional) A list of cache key parameters for the integration.",
                "args": []
            },
            {
                "name": "cache_key_namespace",
                "description": "(Optional) The integration's cache namespace.",
                "args": []
            },
            {
                "name": "request_parameters_in_json",
                "description": "Deprecated, use request_parameters instead.",
                "args": []
            },
            {
                "name": "content_handling",
                "description": "(Optional) Specifies how to handle request payload content type conversions. Supported values are CONVERT_TO_BINARY and CONVERT_TO_TEXT. If this property is not defined, the request payload will be passed through from the method request to integration request without modification, provided that the passthroughBehaviors is configured to support payload pass-through.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_api_gateway_integration_response",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/api_gateway_integration_response.html",
        "groupName": "API Gateway Resources",
        "args": [
            {
                "name": "rest_api_id",
                "description": "(Required) The ID of the associated REST API",
                "args": []
            },
            {
                "name": "resource_id",
                "description": "(Required) The API resource ID",
                "args": []
            },
            {
                "name": "http_method",
                "description": "(Required) The HTTP method (GET, POST, PUT, DELETE, HEAD, OPTIONS, ANY)",
                "args": []
            },
            {
                "name": "status_code",
                "description": "(Required) The HTTP status code",
                "args": []
            },
            {
                "name": "selection_pattern",
                "description": "(Optional) Specifies the regular expression pattern used to choose\nan integration response based on the response from the backend. Setting this to - makes the integration the default one.\nIf the backend is an AWS Lambda function, the AWS Lambda function error header is matched.\nFor all other HTTP and AWS backends, the HTTP status code is matched.",
                "args": []
            },
            {
                "name": "response_templates",
                "description": "(Optional) A map specifying the templates used to transform the integration response body",
                "args": []
            },
            {
                "name": "response_parameters",
                "description": "(Optional) A map of response parameters that can be read from the backend response.\nFor example: response_parameters = { \"method.response.header.X-Some-Header\" = \"integration.response.header.X-Some-Other-Header\" },",
                "args": []
            },
            {
                "name": "response_parameters_in_json",
                "description": "Deprecated, use response_parameters instead.",
                "args": []
            },
            {
                "name": "content_handling",
                "description": "(Optional) Specifies how to handle request payload content type conversions. Supported values are CONVERT_TO_BINARY and CONVERT_TO_TEXT. If this property is not defined, the response payload will be passed through from the integration response to the method response without modification.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_api_gateway_method",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/api_gateway_method.html",
        "groupName": "API Gateway Resources",
        "args": [
            {
                "name": "rest_api_id",
                "description": "(Required) The ID of the associated REST API",
                "args": []
            },
            {
                "name": "resource_id",
                "description": "(Required) The API resource ID",
                "args": []
            },
            {
                "name": "http_method",
                "description": "(Required) The HTTP Method (GET, POST, PUT, DELETE, HEAD, OPTIONS, ANY)",
                "args": []
            },
            {
                "name": "authorization",
                "description": "(Required) The type of authorization used for the method (NONE, CUSTOM, AWS_IAM)",
                "args": []
            },
            {
                "name": "authorizer_id",
                "description": "(Optional) The authorizer id to be used when the authorization is CUSTOM",
                "args": []
            },
            {
                "name": "api_key_required",
                "description": "(Optional) Specify if the method requires an API key",
                "args": []
            },
            {
                "name": "request_models",
                "description": "(Optional) A map of the API models used for the request's content type\nwhere key is the content type (e.g. application/json)\nand value is either Error, Empty (built-in models) or aws_api_gateway_model's name.",
                "args": []
            },
            {
                "name": "request_validator_id",
                "description": "(Optional) The ID of a aws_api_gateway_request_validator",
                "args": []
            },
            {
                "name": "request_parameters",
                "description": "(Optional) A map of request query string parameters and headers that should be passed to the integration.\nFor example: request_parameters = { \n\"method.request.header.X-Some-Header\" = true,\n\"method.request.querystring.some-query-param\"  = true,\n}\n\nwould define that the header X-Some-Header and the query string some-query-param must be provided on the request, or",
                "args": []
            },
            {
                "name": "request_parameters_in_json",
                "description": "Deprecated, use request_parameters instead.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_api_gateway_method_response",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/api_gateway_method_response.html",
        "groupName": "API Gateway Resources",
        "args": [
            {
                "name": "rest_api_id",
                "description": "(Required) The ID of the associated REST API",
                "args": []
            },
            {
                "name": "resource_id",
                "description": "(Required) The API resource ID",
                "args": []
            },
            {
                "name": "http_method",
                "description": "(Required) The HTTP Method (GET, POST, PUT, DELETE, HEAD, OPTIONS, ANY)",
                "args": []
            },
            {
                "name": "status_code",
                "description": "(Required) The HTTP status code",
                "args": []
            },
            {
                "name": "response_models",
                "description": "(Optional) A map of the API models used for the response's content type",
                "args": []
            },
            {
                "name": "response_parameters",
                "description": "(Optional) A map of response parameters that can be sent to the caller.\n For example: response_parameters = { \"method.response.header.X-Some-Header\" = true }\n would define that the header X-Some-Header can be provided on the response.",
                "args": []
            },
            {
                "name": "response_parameters_in_json",
                "description": "Deprecated, use response_parameters instead.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_api_gateway_method_settings",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/api_gateway_method_settings.html",
        "groupName": "API Gateway Resources",
        "args": [
            {
                "name": "rest_api_id",
                "description": "(Required) The ID of the REST API",
                "args": []
            },
            {
                "name": "stage_name",
                "description": "(Required) The name of the stage",
                "args": []
            },
            {
                "name": "method_path",
                "description": "(Required) Method path defined as {resource_path}/{http_method} for an individual method override, or */* for overriding all methods in the stage.",
                "args": []
            },
            {
                "name": "settings",
                "description": "(Required) The settings block, see below.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_api_gateway_model",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/api_gateway_model.html",
        "groupName": "API Gateway Resources",
        "args": [
            {
                "name": "rest_api_id",
                "description": "(Required) The ID of the associated REST API",
                "args": []
            },
            {
                "name": "name",
                "description": "(Required) The name of the model",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) The description of the model",
                "args": []
            },
            {
                "name": "content_type",
                "description": "(Required) The content type of the model",
                "args": []
            },
            {
                "name": "schema",
                "description": "(Required) The schema of the model in a JSON form",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the model",
                "args": []
            }
        ]
    },
    {
        "name": "aws_api_gateway_resource",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/api_gateway_resource.html",
        "groupName": "API Gateway Resources",
        "args": [
            {
                "name": "rest_api_id",
                "description": "(Required) The ID of the associated REST API",
                "args": []
            },
            {
                "name": "parent_id",
                "description": "(Required) The ID of the parent API resource",
                "args": []
            },
            {
                "name": "path_part",
                "description": "(Required) The last path segment of this API resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The resource's identifier.",
                "args": []
            },
            {
                "name": "path",
                "description": "The complete path for this API resource, including all parent paths.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_api_gateway_rest_api",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/api_gateway_rest_api.html",
        "groupName": "API Gateway Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the REST API",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) The description of the REST API",
                "args": []
            },
            {
                "name": "binary_media_types",
                "description": "(Optional) The list of binary media types supported by the RestApi. By default, the RestApi supports only UTF-8-encoded text payloads.",
                "args": []
            },
            {
                "name": "body",
                "description": "(Optional) An OpenAPI specification that defines the set of routes and integrations to create as part of the REST API.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the REST API",
                "args": []
            },
            {
                "name": "root_resource_id",
                "description": "The resource ID of the REST API's root",
                "args": []
            },
            {
                "name": "created_date",
                "description": "The creation date of the REST API",
                "args": []
            }
        ]
    },
    {
        "name": "aws_api_gateway_stage",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/api_gateway_stage.html",
        "groupName": "API Gateway Resources",
        "args": [
            {
                "name": "rest_api_id",
                "description": "(Required) The ID of the associated REST API",
                "args": []
            },
            {
                "name": "stage_name",
                "description": "(Required) The name of the stage",
                "args": []
            },
            {
                "name": "deployment_id",
                "description": "(Required) The ID of the deployment that the stage points to",
                "args": []
            },
            {
                "name": "cache_cluster_enabled",
                "description": "(Optional) Specifies whether a cache cluster is enabled for the stage",
                "args": []
            },
            {
                "name": "cache_cluster_size",
                "description": "(Optional) The size of the cache cluster for the stage, if enabled.\n  Allowed values include 0.5, 1.6, 6.1, 13.5, 28.4, 58.2, 118 and 237.",
                "args": []
            },
            {
                "name": "client_certificate_id",
                "description": "(Optional) The identifier of a client certificate for the stage.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) The description of the stage",
                "args": []
            },
            {
                "name": "documentation_version",
                "description": "(Optional) The version of the associated API documentation",
                "args": []
            },
            {
                "name": "variables",
                "description": "(Optional) A map that defines the stage variables",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_api_gateway_usage_plan",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/api_gateway_usage_plan.html",
        "groupName": "API Gateway Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the usage plan.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Required) The description of a usage plan.",
                "args": []
            },
            {
                "name": "api_stages",
                "description": "(Optional) The associated API stages of the usage plan.",
                "args": []
            },
            {
                "name": "quota_settings",
                "description": "(Optional) The quota settings of the usage plan.",
                "args": []
            },
            {
                "name": "throttle_settings",
                "description": "(Optional) The throttling limits of the usage plan.",
                "args": []
            },
            {
                "name": "product_code",
                "description": "(Optional) The AWS Markeplace product identifier to associate with the usage plan as a SaaS product on AWS Marketplace.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the API resource",
                "args": []
            },
            {
                "name": "name",
                "description": "The name of the usage plan.",
                "args": []
            },
            {
                "name": "description",
                "description": "The description of a usage plan.",
                "args": []
            },
            {
                "name": "api_stages",
                "description": "The associated API stages of the usage plan.",
                "args": []
            },
            {
                "name": "quota_settings",
                "description": "The quota of the usage plan.",
                "args": []
            },
            {
                "name": "throttle_settings",
                "description": "The throttling limits of the usage plan.",
                "args": []
            },
            {
                "name": "product_code",
                "description": "The AWS Markeplace product identifier to associate with the usage plan as a SaaS product on AWS Marketplace.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_api_gateway_usage_plan_key",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/api_gateway_usage_plan_key.html",
        "groupName": "API Gateway Resources",
        "args": [
            {
                "name": "key_id",
                "description": "(Required) The identifier of the API key resource.",
                "args": []
            },
            {
                "name": "key_type",
                "description": "(Required) The type of the API key resource. Currently, the valid key type is API_KEY.",
                "args": []
            },
            {
                "name": "usage_plan_id",
                "description": "(Required) The Id of the usage plan resource representing to associate the key to.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The Id of a usage plan key.",
                "args": []
            },
            {
                "name": "key_id",
                "description": "The identifier of the API gateway key resource.",
                "args": []
            },
            {
                "name": "key_type",
                "description": "The type of a usage plan key. Currently, the valid key type is API_KEY.",
                "args": []
            },
            {
                "name": "usage_plan_id",
                "description": "The ID of the API resource",
                "args": []
            },
            {
                "name": "name",
                "description": "The name of a usage plan key.",
                "args": []
            },
            {
                "name": "value",
                "description": "The value of a usage plan key.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_appautoscaling_policy",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/appautoscaling_policy.html",
        "groupName": "App Autoscaling Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the policy.",
                "args": []
            },
            {
                "name": "policy_type",
                "description": "(Optional) For DynamoDB, only TargetTrackingScaling is supported. For any other service, only StepScaling is supported. Defaults to StepScaling.",
                "args": []
            },
            {
                "name": "resource_id",
                "description": "(Required) The resource type and unique identifier string for the resource associated with the scaling policy. Documentation can be found in the ResourceId parameter at: AWS Application Auto Scaling API Reference",
                "args": []
            },
            {
                "name": "scalable_dimension",
                "description": "(Required) The scalable dimension of the scalable target. Documentation can be found in the ScalableDimension parameter at: AWS Application Auto Scaling API Reference",
                "args": []
            },
            {
                "name": "service_namespace",
                "description": "(Required) The AWS service namespace of the scalable target. Documentation can be found in the ServiceNamespace parameter at: AWS Application Auto Scaling API Reference",
                "args": []
            },
            {
                "name": "step_scaling_policy_configuration",
                "description": "(Optional) Step scaling policy configuration, requires policy_type = \"StepScaling\" (default). See supported fields below.",
                "args": []
            },
            {
                "name": "target_tracking_scaling_policy_configuration",
                "description": "(Optional) A target tracking policy, requires policy_type = \"TargetTrackingScaling\". See supported fields below.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_appautoscaling_scheduled_action",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/appautoscaling_scheduled_action.html",
        "groupName": "App Autoscaling Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the scheduled action.",
                "args": []
            },
            {
                "name": "service_namespace",
                "description": "(Required) The namespace of the AWS service. Documentation can be found in the parameter at: AWS Application Auto Scaling API Reference Example: ecs",
                "args": []
            },
            {
                "name": "resource_id",
                "description": "(Required) The identifier of the resource associated with the scheduled action. Documentation can be found in the parameter at: AWS Application Auto Scaling API Reference",
                "args": []
            },
            {
                "name": "scalable_dimension",
                "description": "(Optional) The scalable dimension. Documentation can be found in the parameter at: AWS Application Auto Scaling API Reference Example: ecs:service:DesiredCount",
                "args": []
            },
            {
                "name": "scalable_target_action",
                "description": "(Optional) The new minimum and maximum capacity. You can set both values or just one. See below",
                "args": []
            },
            {
                "name": "schedule",
                "description": "(Optional) The schedule for this action. The following formats are supported: At expressions - at(yyyy-mm-ddThh:mm:ss), Rate expressions - rate(valueunit), Cron expressions - cron(fields). In UTC. Documentation can be found in the parameter at: AWS Application Auto Scaling API Reference",
                "args": []
            },
            {
                "name": "start_time",
                "description": "(Optional) The date and time for the scheduled action to start. Specify the following format: 2006-01-02T15:04:05Z",
                "args": []
            },
            {
                "name": "end_time",
                "description": "(Optional) The date and time for the scheduled action to end. Specify the following format: 2006-01-02T15:04:05Z",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The Amazon Resource Name (ARN) of the scheduled action.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_appautoscaling_target",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/appautoscaling_target.html",
        "groupName": "App Autoscaling Resources",
        "args": [
            {
                "name": "max_capacity",
                "description": "(Required) The max capacity of the scalable target.",
                "args": []
            },
            {
                "name": "min_capacity",
                "description": "(Required) The min capacity of the scalable target.",
                "args": []
            },
            {
                "name": "resource_id",
                "description": "(Required) The resource type and unique identifier string for the resource associated with the scaling policy. Documentation can be found in the ResourceId parameter at: AWS Application Auto Scaling API Reference",
                "args": []
            },
            {
                "name": "role_arn",
                "description": "(Optional) The ARN of the IAM role that allows Application\nAutoScaling to modify your scalable target on your behalf.",
                "args": []
            },
            {
                "name": "scalable_dimension",
                "description": "(Required) The scalable dimension of the scalable target. Documentation can be found in the ScalableDimension parameter at: AWS Application Auto Scaling API Reference",
                "args": []
            },
            {
                "name": "service_namespace",
                "description": "(Required) The AWS service namespace of the scalable target. Documentation can be found in the ServiceNamespace parameter at: AWS Application Auto Scaling API Reference",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_athena_database",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/athena_database.html",
        "groupName": "Athena Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) Name of the database to create.",
                "args": []
            },
            {
                "name": "bucket",
                "description": "(Required) Name of s3 bucket to save the results of the query execution.",
                "args": []
            },
            {
                "name": "force_destroy",
                "description": "(Optional, Default: false) A boolean that indicates all tables should be deleted from the database so that the database can be destroyed without error. The tables are not recoverable.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The database name",
                "args": []
            }
        ]
    },
    {
        "name": "aws_athena_named_query",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/athena_named_query.html",
        "groupName": "Athena Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The plain language name for the query. Maximum length of 128.",
                "args": []
            },
            {
                "name": "database",
                "description": "(Required) The database to which the query belongs.",
                "args": []
            },
            {
                "name": "query",
                "description": "(Required) The text of the query itself. In other words, all query statements. Maximum length of 262144.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) A brief explanation of the query. Maximum length of 1024.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The unique ID of the query.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_batch_compute_environment",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/batch_compute_environment.html",
        "groupName": "Batch Resources",
        "args": [
            {
                "name": "compute_environment_name",
                "description": "(Required) The name for your compute environment. Up to 128 letters (uppercase and lowercase), numbers, and underscores are allowed.",
                "args": []
            },
            {
                "name": "compute_resources",
                "description": "(Optional) Details of the compute resources managed by the compute environment. This parameter is required for managed compute environments. See details below.",
                "args": []
            },
            {
                "name": "service_role",
                "description": "(Required) The full Amazon Resource Name (ARN) of the IAM role that allows AWS Batch to make calls to other AWS services on your behalf.",
                "args": []
            },
            {
                "name": "state",
                "description": "(Optional) The state of the compute environment. If the state is ENABLED, then the compute environment accepts jobs from a queue and can scale out automatically based on queues. Valid items are ENABLED or DISABLED. Defaults to ENABLED.",
                "args": []
            },
            {
                "name": "type",
                "description": "(Required) The type of the compute environment. Valid items are MANAGED or UNMANAGED.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The Amazon Resource Name (ARN) of the compute environment.",
                "args": []
            },
            {
                "name": "ecs_cluster_arn",
                "description": "The Amazon Resource Name (ARN) of the underlying Amazon ECS cluster used by the compute environment.",
                "args": []
            },
            {
                "name": "status",
                "description": "The current status of the compute environment (for example, CREATING or VALID).",
                "args": []
            },
            {
                "name": "status_reason",
                "description": "A short, human-readable string to provide additional details about the current status of the compute environment.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_batch_job_definition",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/batch_job_definition.html",
        "groupName": "Batch Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) Specifies the name of the job definition.",
                "args": []
            },
            {
                "name": "container_properties",
                "description": "(Optional) A valid container properties\n  provided as a single valid JSON document. This parameter is required if the type parameter is container.",
                "args": []
            },
            {
                "name": "parameters",
                "description": "(Optional) Specifies the parameter substitution placeholders to set in the job definition.",
                "args": []
            },
            {
                "name": "retry_strategy",
                "description": "(Optional) Specifies the retry strategy to use for failed jobs that are submitted with this job definition.\n  Maximum number of retry_strategy is 1.  Defined below.",
                "args": []
            },
            {
                "name": "type",
                "description": "(Required) The type of job definition.  Must be container",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_batch_job_queue",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/batch_job_queue.html",
        "groupName": "Batch Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) Specifies the name of the job queue.",
                "args": []
            },
            {
                "name": "compute_environments",
                "description": "(Required) Specifies the set of compute environments\n  mapped to a job queue and their order.  The position of the compute environments\n  in the list will dictate the order. You can associate up to 3 compute environments\n  with a job queue.",
                "args": []
            },
            {
                "name": "priority",
                "description": "(Required) The priority of the job queue. Job queues with a higher priority\n  are evaluated first when associated with same compute environment.",
                "args": []
            },
            {
                "name": "state",
                "description": "(Required) The state of the job queue. Must be one of: ENABLED or DISABLED",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_cloud9_environment_ec2",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/cloud9_environment_ec2.html",
        "groupName": "Cloud9 Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the environment.",
                "args": []
            },
            {
                "name": "instance_type",
                "description": "(Required) The type of instance to connect to the environment, e.g. t2.micro.",
                "args": []
            },
            {
                "name": "automatic_stop_time_minutes",
                "description": "(Optional) The number of minutes until the running instance is shut down after the environment has last been used.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) The description of the environment.",
                "args": []
            },
            {
                "name": "owner_arn",
                "description": "(Optional) The ARN of the environment owner. This can be ARN of any AWS IAM principal. Defaults to the environment's creator.",
                "args": []
            },
            {
                "name": "subnet_id",
                "description": "(Optional) The ID of the subnet in Amazon VPC that AWS Cloud9 will use to communicate with the Amazon EC2 instance.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the environment.",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the environment.",
                "args": []
            },
            {
                "name": "type",
                "description": "The type of the environment (e.g. ssh or ec2)",
                "args": []
            }
        ]
    },
    {
        "name": "aws_cloudformation_stack",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/cloudformation_stack.html",
        "groupName": "CloudFormation Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) Stack name.",
                "args": []
            },
            {
                "name": "template_body",
                "description": "(Optional) Structure containing the template body (max size: 51,200 bytes).",
                "args": []
            },
            {
                "name": "template_url",
                "description": "(Optional) Location of a file containing the template body (max size: 460,800 bytes).",
                "args": []
            },
            {
                "name": "capabilities",
                "description": "(Optional) A list of capabilities.\nValid values: CAPABILITY_IAM or CAPABILITY_NAMED_IAM",
                "args": []
            },
            {
                "name": "disable_rollback",
                "description": "(Optional) Set to true to disable rollback of the stack if stack creation failed.\nConflicts with on_failure.",
                "args": []
            },
            {
                "name": "notification_arns",
                "description": "(Optional) A list of SNS topic ARNs to publish stack related events.",
                "args": []
            },
            {
                "name": "on_failure",
                "description": "(Optional) Action to be taken if stack creation fails. This must be\none of: DO_NOTHING, ROLLBACK, or DELETE. Conflicts with disable_rollback.",
                "args": []
            },
            {
                "name": "parameters",
                "description": "(Optional) A list of Parameter structures that specify input parameters for the stack.",
                "args": []
            },
            {
                "name": "policy_body",
                "description": "(Optional) Structure containing the stack policy body.\nConflicts w/ policy_url.",
                "args": []
            },
            {
                "name": "policy_url",
                "description": "(Optional) Location of a file containing the stack policy.\nConflicts w/ policy_body.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A list of tags to associate with this stack.",
                "args": []
            },
            {
                "name": "iam_role_arn",
                "description": "(Optional) The ARN of an IAM role that AWS CloudFormation assumes to create the stack. If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.",
                "args": []
            },
            {
                "name": "timeout_in_minutes",
                "description": "(Optional) The amount of time that can pass before the stack status becomes CREATE_FAILED.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "A unique identifier of the stack.",
                "args": []
            },
            {
                "name": "outputs",
                "description": "A map of outputs from the stack.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_cloudfront_distribution",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/cloudfront_distribution.html",
        "groupName": "CloudFront Resources",
        "args": [
            {
                "name": "aliases",
                "description": "(Optional)  Extra CNAMEs (alternate domain names), if any, for\nthis distribution.",
                "args": []
            },
            {
                "name": "cache_behavior",
                "description": "(Optional)  A cache behavior\nresource for this distribution (multiples allowed).",
                "args": []
            },
            {
                "name": "comment",
                "description": "(Optional)  Any comments you want to include about the\ndistribution.",
                "args": []
            },
            {
                "name": "custom_error_response",
                "description": "(Optional)  One or more custom error response elements (multiples allowed).",
                "args": []
            },
            {
                "name": "default_cache_behavior",
                "description": "(Required)  The default cache behavior for this distribution (maximum\none).",
                "args": []
            },
            {
                "name": "default_root_object",
                "description": "(Optional)  The object that you want CloudFront to\nreturn (for example, index.html) when an end user requests the root URL.",
                "args": []
            },
            {
                "name": "enabled",
                "description": "(Required)  Whether the distribution is enabled to accept end\nuser requests for content.",
                "args": []
            },
            {
                "name": "is_ipv6_enabled",
                "description": "(Optional)  Whether the IPv6 is enabled for the distribution.",
                "args": []
            },
            {
                "name": "http_version",
                "description": "(Optional)  The maximum HTTP version to support on the\ndistribution. Allowed values are http1.1 and http2. The default is\nhttp2.",
                "args": []
            },
            {
                "name": "logging_config",
                "description": "(Optional)  The logging\nconfiguration that controls how logs are written\nto your distribution (maximum one).",
                "args": []
            },
            {
                "name": "origin",
                "description": "(Required)  One or more origins for this\ndistribution (multiples allowed).",
                "args": []
            },
            {
                "name": "price_class",
                "description": "(Optional)  The price class for this distribution. One of\nPriceClass_All, PriceClass_200, PriceClass_100",
                "args": []
            },
            {
                "name": "restrictions",
                "description": "(Required)  The restriction\nconfiguration for this distribution (maximum one).",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            },
            {
                "name": "viewer_certificate",
                "description": "(Required)  The SSL\nconfiguration for this distribution (maximum\none).",
                "args": []
            },
            {
                "name": "web_acl_id",
                "description": "(Optional)  If you're using AWS WAF to filter CloudFront\nrequests, the Id of the AWS WAF web ACL that is associated with the\ndistribution.",
                "args": []
            },
            {
                "name": "retain_on_delete",
                "description": "(Optional)  Disables the distribution instead of\ndeleting it when destroying the resource through Terraform. If this is set,\nthe distribution needs to be deleted manually afterwards. Default: false.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_cloudfront_origin_access_identity",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/cloudfront_origin_access_identity.html",
        "groupName": "CloudFront Resources",
        "args": [
            {
                "name": "comment",
                "description": "(Optional)  An optional comment for the origin access identity.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_cloudtrail",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/cloudtrail.html",
        "groupName": "CloudTrail Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) Specifies the name of the trail.",
                "args": []
            },
            {
                "name": "s3_bucket_name",
                "description": "(Required) Specifies the name of the S3 bucket designated for publishing log files.",
                "args": []
            },
            {
                "name": "s3_key_prefix",
                "description": "(Optional) Specifies the S3 key prefix that precedes\n  the name of the bucket you have designated for log file delivery.",
                "args": []
            },
            {
                "name": "cloud_watch_logs_role_arn",
                "description": "(Optional) Specifies the role for the CloudWatch Logs\n  endpoint to assume to write to a user’s log group.",
                "args": []
            },
            {
                "name": "cloud_watch_logs_group_arn",
                "description": "(Optional) Specifies a log group name using an Amazon Resource Name (ARN),\n  that represents the log group to which CloudTrail logs will be delivered.",
                "args": []
            },
            {
                "name": "enable_logging",
                "description": "(Optional) Enables logging for the trail. Defaults to true.\n  Setting this to false will pause logging.",
                "args": []
            },
            {
                "name": "include_global_service_events",
                "description": "(Optional) Specifies whether the trail is publishing events\n  from global services such as IAM to the log files. Defaults to true.",
                "args": []
            },
            {
                "name": "is_multi_region_trail",
                "description": "(Optional) Specifies whether the trail is created in the current\n  region or in all regions. Defaults to false.",
                "args": []
            },
            {
                "name": "sns_topic_name",
                "description": "(Optional) Specifies the name of the Amazon SNS topic\n  defined for notification of log file delivery.",
                "args": []
            },
            {
                "name": "enable_log_file_validation",
                "description": "(Optional) Specifies whether log file integrity validation is enabled.\n  Defaults to false.",
                "args": []
            },
            {
                "name": "kms_key_id",
                "description": "(Optional) Specifies the KMS key ARN to use to encrypt the logs delivered by CloudTrail.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the trail",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_cloudwatch_dashboard",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/cloudwatch_dashboard.html",
        "groupName": "CloudWatch Resources",
        "args": [
            {
                "name": "dashboard_name",
                "description": "(Required) The name of the dashboard.",
                "args": []
            },
            {
                "name": "dashboard_body",
                "description": "(Required) The detailed information about the dashboard, including what widgets are included and their location on the dashboard. You can read more about the body structure in the documentation.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_cloudwatch_event_permission",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/cloudwatch_event_permission.html",
        "groupName": "CloudWatch Resources",
        "args": [
            {
                "name": "principal",
                "description": "(Required) The 12-digit AWS account ID that you are permitting to put events to your default event bus. Specify * to permit any account to put events to your default event bus.",
                "args": []
            },
            {
                "name": "statement_id",
                "description": "(Required) An identifier string for the external account that you are granting permissions to.",
                "args": []
            },
            {
                "name": "action",
                "description": "(Optional) The action that you are enabling the other account to perform. Defaults to events:PutEvents.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The statement ID of the CloudWatch Events permission.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_cloudwatch_event_rule",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/cloudwatch_event_rule.html",
        "groupName": "CloudWatch Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The rule's name.",
                "args": []
            },
            {
                "name": "schedule_expression",
                "description": "(Required, if event_pattern isn't specified) The scheduling expression.\n  For example, cron(0 20 * * ? *) or rate(5 minutes).",
                "args": []
            },
            {
                "name": "event_pattern",
                "description": "(Required, if schedule_expression isn't specified) Event pattern\n  described a JSON object.\n  See full documentation of CloudWatch Events and Event Patterns for details.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) The description of the rule.",
                "args": []
            },
            {
                "name": "role_arn",
                "description": "(Optional) The Amazon Resource Name (ARN) associated with the role that is used for target invocation.",
                "args": []
            },
            {
                "name": "is_enabled",
                "description": "(Optional) Whether the rule should be enabled (defaults to true).",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The Amazon Resource Name (ARN) of the rule.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_cloudwatch_event_target",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/cloudwatch_event_target.html",
        "groupName": "CloudWatch Resources",
        "args": [
            {
                "name": "rule",
                "description": "(Required) The name of the rule you want to add targets to.",
                "args": []
            },
            {
                "name": "target_id",
                "description": "(Optional) The unique target assignment ID.  If missing, will generate a random, unique id.",
                "args": []
            },
            {
                "name": "arn",
                "description": "(Required) The Amazon Resource Name (ARN) associated of the target.",
                "args": []
            },
            {
                "name": "input",
                "description": "(Optional) Valid JSON text passed to the target.",
                "args": []
            },
            {
                "name": "input_path",
                "description": "(Optional) The value of the JSONPath\n  that is used for extracting part of the matched event when passing it to the target.",
                "args": []
            },
            {
                "name": "role_arn",
                "description": "(Optional) The Amazon Resource Name (ARN) of the IAM role to be used for this target when the rule is triggered. Required if ecs_target is used.",
                "args": []
            },
            {
                "name": "run_command_targets",
                "description": "(Optional) Parameters used when you are using the rule to invoke Amazon EC2 Run Command. Documented below. A maximum of 5 are allowed.",
                "args": []
            },
            {
                "name": "ecs_target",
                "description": "(Optional) Parameters used when you are using the rule to invoke Amazon ECS Task. Documented below. A maximum of 1 are allowed.",
                "args": []
            },
            {
                "name": "input_transformer",
                "description": "(Optional) Parameters used when you are providing a custom input to a target based on certain event data.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_cloudwatch_log_destination",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/cloudwatch_log_destination.html",
        "groupName": "CloudWatch Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) A name for the log destination",
                "args": []
            },
            {
                "name": "role_arn",
                "description": "(Required) The ARN of an IAM role that grants Amazon CloudWatch Logs permissions to put data into the target",
                "args": []
            },
            {
                "name": "target_arn",
                "description": "(Required) The ARN of the target Amazon Kinesis stream or Amazon Lambda resource for the destination",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The Amazon Resource Name (ARN) specifying the log destination.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_cloudwatch_log_destination_policy",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/cloudwatch_log_destination_policy.html",
        "groupName": "CloudWatch Resources",
        "args": [
            {
                "name": "destination_name",
                "description": "(Required) A name for the subscription filter",
                "args": []
            },
            {
                "name": "access_policy",
                "description": "(Required) The policy document. This is a JSON formatted string.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_cloudwatch_log_group",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/cloudwatch_log_group.html",
        "groupName": "CloudWatch Resources",
        "args": [
            {
                "name": "name",
                "description": "(Optional, Forces new resource) The name of the log group. If omitted, Terraform will assign a random, unique name.",
                "args": []
            },
            {
                "name": "name_prefix",
                "description": "(Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name.",
                "args": []
            },
            {
                "name": "retention_in_days",
                "description": "(Optional) Specifies the number of days\nyou want to retain log events in the specified log group.",
                "args": []
            },
            {
                "name": "kms_key_id",
                "description": "(Optional) The ARN of the KMS Key to use when encrypting log data. Please note, after the AWS KMS CMK is disassociated from the log group,\nAWS CloudWatch Logs stops encrypting newly ingested data for the log group. All previously ingested data remains encrypted, and AWS CloudWatch Logs requires\npermissions for the CMK whenever the encrypted data is requested.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The Amazon Resource Name (ARN) specifying the log group.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_cloudwatch_log_metric_filter",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/cloudwatch_log_metric_filter.html",
        "groupName": "CloudWatch Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) A name for the metric filter.",
                "args": []
            },
            {
                "name": "pattern",
                "description": "(Required) A valid CloudWatch Logs filter pattern\nfor extracting metric data out of ingested log events.",
                "args": []
            },
            {
                "name": "log_group_name",
                "description": "(Required) The name of the log group to associate the metric filter with.",
                "args": []
            },
            {
                "name": "metric_transformation",
                "description": "(Required) A block defining collection of information\n  needed to define how metric data gets emitted. See below.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The name of the metric filter.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_cloudwatch_log_resource_policy",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/cloudwatch_log_resource_policy.html",
        "groupName": "CloudWatch Resources",
        "args": [
            {
                "name": "policy_document",
                "description": "(Required) Details of the resource policy, including the identity of the principal that is enabled to put logs to this account. This is formatted as a JSON string. Maximum length of 5120 characters.",
                "args": []
            },
            {
                "name": "policy_name",
                "description": "(Required) Name of the resource policy.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The name of the CloudWatch log resource policy",
                "args": []
            }
        ]
    },
    {
        "name": "aws_cloudwatch_log_stream",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/cloudwatch_log_stream.html",
        "groupName": "CloudWatch Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the log stream. Must not be longer than 512 characters and must not contain :",
                "args": []
            },
            {
                "name": "log_group_name",
                "description": "(Required) The name of the log group under which the log stream is to be created.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The Amazon Resource Name (ARN) specifying the log stream.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_cloudwatch_log_subscription_filter",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/cloudwatch_log_subscription_filter.html",
        "groupName": "CloudWatch Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) A name for the subscription filter",
                "args": []
            },
            {
                "name": "destination_arn",
                "description": "(Required) The ARN of the destination to deliver matching log events to. Kinesis stream or Lambda function ARN.",
                "args": []
            },
            {
                "name": "filter_pattern",
                "description": "(Required) A valid CloudWatch Logs filter pattern for subscribing to a filtered stream of log events.",
                "args": []
            },
            {
                "name": "log_group_name",
                "description": "(Required) The name of the log group to associate the subscription filter with",
                "args": []
            },
            {
                "name": "role_arn",
                "description": "(Optional) The ARN of an IAM role that grants Amazon CloudWatch Logs permissions to deliver ingested log events to the destination. If you use Lambda as a destination, you should skip this argument and use aws_lambda_permission resource for granting access from CloudWatch logs to the destination Lambda function.",
                "args": []
            },
            {
                "name": "distribution",
                "description": "(Optional) The method used to distribute log data to the destination. By default log data is grouped by log stream, but the grouping can be set to random for a more even distribution. This property is only applicable when the destination is an Amazon Kinesis stream. Valid values are \"Random\" and \"ByLogStream\".",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_cloudwatch_metric_alarm",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/cloudwatch_metric_alarm.html",
        "groupName": "CloudWatch Resources",
        "args": [
            {
                "name": "alarm_name",
                "description": "(Required) The descriptive name for the alarm. This name must be unique within the user's AWS account",
                "args": []
            },
            {
                "name": "comparison_operator",
                "description": "(Required) The arithmetic operation to use when comparing the specified Statistic and Threshold. The specified Statistic value is used as the first operand. Either of the following is supported: GreaterThanOrEqualToThreshold, GreaterThanThreshold, LessThanThreshold, LessThanOrEqualToThreshold.",
                "args": []
            },
            {
                "name": "evaluation_periods",
                "description": "(Required) The number of periods over which data is compared to the specified threshold.",
                "args": []
            },
            {
                "name": "metric_name",
                "description": "(Required) The name for the alarm's associated metric.\nSee docs for supported metrics.",
                "args": []
            },
            {
                "name": "namespace",
                "description": "(Required) The namespace for the alarm's associated metric. See docs for the list of namespaces.\nSee docs for supported metrics.",
                "args": []
            },
            {
                "name": "period",
                "description": "(Required) The period in seconds over which the specified statistic is applied.",
                "args": []
            },
            {
                "name": "statistic",
                "description": "(Optional) The statistic to apply to the alarm's associated metric.\n Either of the following is supported: SampleCount, Average, Sum, Minimum, Maximum",
                "args": []
            },
            {
                "name": "threshold",
                "description": "(Required) The value against which the specified statistic is compared.",
                "args": []
            },
            {
                "name": "actions_enabled",
                "description": "(Optional) Indicates whether or not actions should be executed during any changes to the alarm's state. Defaults to true.",
                "args": []
            },
            {
                "name": "alarm_actions",
                "description": "(Optional) The list of actions to execute when this alarm transitions into an ALARM state from any other state. Each action is specified as an Amazon Resource Number (ARN).",
                "args": []
            },
            {
                "name": "alarm_description",
                "description": "(Optional) The description for the alarm.",
                "args": []
            },
            {
                "name": "datapoints_to_alarm",
                "description": "(Optional) The number of datapoints that must be breaching to trigger the alarm.",
                "args": []
            },
            {
                "name": "dimensions",
                "description": "(Optional) The dimensions for the alarm's associated metric.  For the list of available dimensions see the AWS documentation here.",
                "args": []
            },
            {
                "name": "insufficient_data_actions",
                "description": "(Optional) The list of actions to execute when this alarm transitions into an INSUFFICIENT_DATA state from any other state. Each action is specified as an Amazon Resource Number (ARN).",
                "args": []
            },
            {
                "name": "ok_actions",
                "description": "(Optional) The list of actions to execute when this alarm transitions into an OK state from any other state. Each action is specified as an Amazon Resource Number (ARN).",
                "args": []
            },
            {
                "name": "unit",
                "description": "(Optional) The unit for the alarm's associated metric.",
                "args": []
            },
            {
                "name": "extended_statistic",
                "description": "(Optional) The percentile statistic for the metric associated with the alarm. Specify a value between p0.0 and p100.",
                "args": []
            },
            {
                "name": "treat_missing_data",
                "description": "(Optional) Sets how this alarm is to handle missing data points. The following values are supported: missing, ignore, breaching and notBreaching. Defaults to missing.",
                "args": []
            },
            {
                "name": "evaluate_low_sample_count_percentiles",
                "description": "(Optional) Used only for alarms\nbased on percentiles. If you specify ignore, the alarm state will not\nchange during periods with too few data points to be statistically significant.\nIf you specify evaluate or omit this parameter, the alarm will always be\nevaluated and possibly change state no matter how many data points are available.\nThe following values are supported: ignore, and evaluate.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the health check",
                "args": []
            }
        ]
    },
    {
        "name": "aws_codebuild_project",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/codebuild_project.html",
        "groupName": "CodeBuild Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The projects name.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) A short description of the project.",
                "args": []
            },
            {
                "name": "encryption_key",
                "description": "(Optional) The AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting the build project's build output artifacts.",
                "args": []
            },
            {
                "name": "service_role",
                "description": "(Optional) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that enables AWS CodeBuild to interact with dependent AWS services on behalf of the AWS account.",
                "args": []
            },
            {
                "name": "build_timeout",
                "description": "(Optional) How long in minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait until timing out any related build that does not get marked as completed. The default is 60 minutes.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            },
            {
                "name": "artifacts",
                "description": "(Required) Information about the project's build output artifacts. Artifact blocks are documented below.",
                "args": []
            },
            {
                "name": "environment",
                "description": "(Required) Information about the project's build environment. Environment blocks are documented below.",
                "args": []
            },
            {
                "name": "source",
                "description": "(Required) Information about the project's input source code. Source blocks are documented below.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ARN of the CodeBuild project.",
                "args": []
            },
            {
                "name": "description",
                "description": "A short description of the project.",
                "args": []
            },
            {
                "name": "encryption_key",
                "description": "The AWS Key Management Service (AWS KMS) customer master key (CMK) that was used for encrypting the build project's build output artifacts.",
                "args": []
            },
            {
                "name": "name",
                "description": "The projects name.",
                "args": []
            },
            {
                "name": "service_role",
                "description": "The ARN of the IAM service role.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_codecommit_repository",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/code_commit_repository.html",
        "groupName": "CodeCommit Resources",
        "args": [
            {
                "name": "repository_name",
                "description": "(Required) The name for the repository. This needs to be less than 100 characters.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) The description of the repository. This needs to be less than 1000 characters",
                "args": []
            },
            {
                "name": "default_branch",
                "description": "(Optional) The default branch of the repository. The branch specified here needs to exist.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "repository_id",
                "description": "The ID of the repository",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the repository",
                "args": []
            },
            {
                "name": "clone_url_http",
                "description": "The URL to use for cloning the repository over HTTPS.",
                "args": []
            },
            {
                "name": "clone_url_ssh",
                "description": "The URL to use for cloning the repository over SSH.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_codecommit_trigger",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/code_commit_trigger.html",
        "groupName": "CodeCommit Resources",
        "args": [
            {
                "name": "repository_name",
                "description": "(Required) The name for the repository. This needs to be less than 100 characters.",
                "args": []
            },
            {
                "name": "name",
                "description": "(Required) The name of the trigger.",
                "args": []
            },
            {
                "name": "destination_arn",
                "description": "(Required) The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).",
                "args": []
            },
            {
                "name": "custom_data",
                "description": "(Optional) Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.",
                "args": []
            },
            {
                "name": "branches",
                "description": "(Optional) The branches that will be included in the trigger configuration. If no branches are specified, the trigger will apply to all branches.",
                "args": []
            },
            {
                "name": "events",
                "description": "(Required) The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). If no events are specified, the trigger will run for all repository events. Event types include: all, updateReference, createReference, deleteReference.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_codedeploy_app",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/codedeploy_app.html",
        "groupName": "CodeDeploy Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the application.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_codedeploy_deployment_config",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/codedeploy_deployment_config.html",
        "groupName": "CodeDeploy Resources",
        "args": [
            {
                "name": "deployment_config_name",
                "description": "(Required) The name of the deployment config.",
                "args": []
            },
            {
                "name": "minimum_healthy_hosts",
                "description": "(Optional) A minimum_healthy_hosts block. Minimum Healthy Hosts are documented below.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The deployment group's config name.",
                "args": []
            },
            {
                "name": "deployment_config_id",
                "description": "The AWS Assigned deployment config id",
                "args": []
            }
        ]
    },
    {
        "name": "aws_codedeploy_deployment_group",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/codedeploy_deployment_group.html",
        "groupName": "CodeDeploy Resources",
        "args": [
            {
                "name": "app_name",
                "description": "(Required) The name of the application.",
                "args": []
            },
            {
                "name": "deployment_group_name",
                "description": "(Required) The name of the deployment group.",
                "args": []
            },
            {
                "name": "service_role_arn",
                "description": "(Required) The service role ARN that allows deployments.",
                "args": []
            },
            {
                "name": "autoscaling_groups",
                "description": "(Optional) Autoscaling groups associated with the deployment group.",
                "args": []
            },
            {
                "name": "deployment_config_name",
                "description": "(Optional) The name of the group's deployment config. The default is \"CodeDeployDefault.OneAtATime\".",
                "args": []
            },
            {
                "name": "ec2_tag_filter",
                "description": "(Optional) Tag filters associated with the group. See the AWS docs for details.",
                "args": []
            },
            {
                "name": "on_premises_instance_tag_filter",
                "description": "(Optional) On premise tag filters associated with the group. See the AWS docs for details.",
                "args": []
            },
            {
                "name": "trigger_configuration",
                "description": "(Optional) Trigger Configurations for the deployment group (documented below).",
                "args": []
            },
            {
                "name": "auto_rollback_configuration",
                "description": "(Optional) The automatic rollback configuration associated with the deployment group (documented below).",
                "args": []
            },
            {
                "name": "alarm_configuration",
                "description": "(Optional) Information about alarms associated with the deployment group (documented below).",
                "args": []
            },
            {
                "name": "deployment_style",
                "description": "(Optional) Information about the type of deployment, either in-place or blue/green, you want to run and whether to route deployment traffic behind a load balancer (documented below).",
                "args": []
            },
            {
                "name": "load_balancer_info",
                "description": "(Optional) Information about the load balancer to use in a blue/green deployment (documented below).",
                "args": []
            },
            {
                "name": "blue_green_deployment_config",
                "description": "(Optional) Information about blue/green deployment options for a deployment group (documented below).",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The deployment group's ID.",
                "args": []
            },
            {
                "name": "app_name",
                "description": "The group's assigned application.",
                "args": []
            },
            {
                "name": "deployment_group_name",
                "description": "The group's name.",
                "args": []
            },
            {
                "name": "service_role_arn",
                "description": "The group's service role ARN.",
                "args": []
            },
            {
                "name": "autoscaling_groups",
                "description": "The autoscaling groups associated with the deployment group.",
                "args": []
            },
            {
                "name": "deployment_config_name",
                "description": "The name of the group's deployment config.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_codepipeline",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/codepipeline.html",
        "groupName": "CodePipeline Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the pipeline.",
                "args": []
            },
            {
                "name": "role_arn",
                "description": "(Required) A service role Amazon Resource Name (ARN) that grants AWS CodePipeline permission to make calls to AWS services on your behalf.",
                "args": []
            },
            {
                "name": "artifact_store",
                "description": "(Required) An artifact_store block. Artifact stores are documented below.",
                "args": []
            },
            {
                "name": "stage",
                "description": "(Required) A stage block. Stages are documented below.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The codepipeline ID.",
                "args": []
            },
            {
                "name": "arn",
                "description": "The codepipeline ARN.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_cognito_identity_pool",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/cognito_identity_pool.html",
        "groupName": "Cognito Resources",
        "args": [
            {
                "name": "identity_pool_name",
                "description": "(Required)  The Cognito Identity Pool name.",
                "args": []
            },
            {
                "name": "allow_unauthenticated_identities",
                "description": "(Required)  Whether the identity pool supports unauthenticated logins or not.",
                "args": []
            },
            {
                "name": "developer_provider_name",
                "description": "(Optional)  The \"domain\" by which Cognito will refer to your users. This name acts as a placeholder that allows your\nbackend and the Cognito service to communicate about the developer provider.",
                "args": []
            },
            {
                "name": "cognito_identity_providers",
                "description": "(Optional)  An array of Amazon Cognito Identity user pools and their client IDs.",
                "args": []
            },
            {
                "name": "openid_connect_provider_arns",
                "description": "(Optional)  A list of OpendID Connect provider ARNs.",
                "args": []
            },
            {
                "name": "saml_provider_arns",
                "description": "(Optional)  An array of Amazon Resource Names (ARNs) of the SAML provider for your identity.",
                "args": []
            },
            {
                "name": "supported_login_providers",
                "description": "(Optional)  Key-Value pairs mapping provider names to provider app IDs.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "An identity pool ID in the format REGION:GUID.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_cognito_identity_pool_roles_attachment",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/cognito_identity_pool_roles_attachment.html",
        "groupName": "Cognito Resources",
        "args": [
            {
                "name": "identity_pool_id",
                "description": "(Required)  An identity pool ID in the format REGION:GUID.",
                "args": []
            },
            {
                "name": "role_mapping",
                "description": "(Optional)  A List of Role Mapping.",
                "args": []
            },
            {
                "name": "roles",
                "description": "(Required)  The map of roles associated with this pool. For a given role, the key will be either \"authenticated\" or \"unauthenticated\" and the value will be the Role ARN.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The identity pool ID.",
                "args": []
            },
            {
                "name": "identity_pool_id",
                "description": "(Required)  An identity pool ID in the format REGION:GUID.",
                "args": []
            },
            {
                "name": "role_mapping",
                "description": "(Optional)  The List of Role Mapping.",
                "args": []
            },
            {
                "name": "roles",
                "description": "(Required)  The map of roles associated with this pool. For a given role, the key will be either \"authenticated\" or \"unauthenticated\" and the value will be the Role ARN.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_cognito_user_group",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/cognito_user_group.html",
        "groupName": "Cognito Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the user group.",
                "args": []
            },
            {
                "name": "user_pool_id",
                "description": "(Required) The user pool ID.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) The description of the user group.",
                "args": []
            },
            {
                "name": "precedence",
                "description": "(Optional) The precedence of the user group.",
                "args": []
            },
            {
                "name": "role_arn",
                "description": "(Optional) The ARN of the IAM role to be associated with the user group.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_cognito_user_pool",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/cognito_user_pool.html",
        "groupName": "Cognito Resources",
        "args": [
            {
                "name": "admin_create_user_config",
                "description": "(Optional)  The configuration for AdminCreateUser requests.",
                "args": []
            },
            {
                "name": "alias_attributes",
                "description": "(Optional) Attributes supported as an alias for this user pool. Possible values: phone_number, email, or preferred_username. Conflicts with username_attributes.",
                "args": []
            },
            {
                "name": "auto_verified_attributes",
                "description": "(Optional) The attributes to be auto-verified. Possible values: email, phone_number.",
                "args": []
            },
            {
                "name": "device_configuration",
                "description": "(Optional)  The configuration for the user pool's device tracking.",
                "args": []
            },
            {
                "name": "email_configuration",
                "description": "(Optional)  The Email Configuration.",
                "args": []
            },
            {
                "name": "name",
                "description": "(Required) The name of the user pool.",
                "args": []
            },
            {
                "name": "email_verification_subject",
                "description": "(Optional) A string representing the email verification subject. NOTE: - If email_verification_subject and verification_message_template.email_subject are specified and the values are different, either one is prioritized and updated.",
                "args": []
            },
            {
                "name": "email_verification_message",
                "description": "(Optional) A string representing the email verification message. Must contain the {####} placeholder. NOTE: - If email_verification_message and verification_message_template.email_message are specified and the values are different, either one is prioritized and updated.",
                "args": []
            },
            {
                "name": "lambda_config",
                "description": "(Optional)  A container for the AWS Lambda triggers associated with the user pool.",
                "args": []
            },
            {
                "name": "mfa_configuration",
                "description": "(Optional, Default: OFF) Set to enable multi-factor authentication. Must be one of the following values (ON, OFF, OPTIONAL)",
                "args": []
            },
            {
                "name": "password_policy",
                "description": "(Optional)  A container for information about the user pool password policy.",
                "args": []
            },
            {
                "name": "schema",
                "description": "(Optional)  A container with the schema attributes of a user pool. Maximum of 50 attributes.",
                "args": []
            },
            {
                "name": "sms_authentication_message",
                "description": "(Optional) A string representing the SMS authentication message.",
                "args": []
            },
            {
                "name": "sms_configuration",
                "description": "(Optional)  The SMS Configuration.",
                "args": []
            },
            {
                "name": "sms_verification_message",
                "description": "(Optional) A string representing the SMS verification message.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the User Pool.",
                "args": []
            },
            {
                "name": "username_attributes",
                "description": "(Optional) Specifies whether email addresses or phone numbers can be specified as usernames when a user signs up. Conflicts with alias_attributes.",
                "args": []
            },
            {
                "name": "verification_message_template",
                "description": "(Optional)  The verification message templates configuration.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_cognito_user_pool_client",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/cognito_user_pool_client.html",
        "groupName": "Cognito Resources",
        "args": [
            {
                "name": "allowed_oauth_flows",
                "description": "(Optional) List of allowed OAuth flows (code, implicit, client_credentials).",
                "args": []
            },
            {
                "name": "allowed_oauth_flows_user_pool_client",
                "description": "(Optional) Whether the client is allowed to follow the OAuth protocol when interacting with Cognito user pools.",
                "args": []
            },
            {
                "name": "allowed_oauth_scopes",
                "description": "(Optional) List of allowed OAuth scopes (phone, email, openid, Cognito).",
                "args": []
            },
            {
                "name": "callback_urls",
                "description": "(Optional) List of allowed callback URLs for the identity providers.",
                "args": []
            },
            {
                "name": "default_redirect_uri",
                "description": "(Optional) The default redirect URI. Must be in the list of callback URLs.",
                "args": []
            },
            {
                "name": "explicit_auth_flows",
                "description": "(Optional) List of authentication flows (ADMIN_NO_SRP_AUTH, CUSTOM_AUTH_FLOW_ONLY).",
                "args": []
            },
            {
                "name": "generate_secret",
                "description": "(Optional) Should an application secret be generated. AWS JavaScript SDK requires this to be false.",
                "args": []
            },
            {
                "name": "logout_urls",
                "description": "(Optional) List of allowed logout URLs for the identity providers.",
                "args": []
            },
            {
                "name": "name",
                "description": "(Required) The name of the application client.",
                "args": []
            },
            {
                "name": "read_attributes",
                "description": "(Optional) List of user pool attributes the application client can read from.",
                "args": []
            },
            {
                "name": "refresh_token_validity",
                "description": "(Optional) The time limit in days refresh tokens are valid for.",
                "args": []
            },
            {
                "name": "supported_identity_providers",
                "description": "(Optional) List of provider names for the identity providers that are supported on this client.",
                "args": []
            },
            {
                "name": "user_pool_id",
                "description": "(Required) The user pool the client belongs to.",
                "args": []
            },
            {
                "name": "write_attributes",
                "description": "(Optional) List of user pool attributes the application client can write to.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_cognito_user_pool_domain",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/cognito_user_pool_domain.html",
        "groupName": "Cognito Resources",
        "args": [
            {
                "name": "domain",
                "description": "(Required) The domain string.",
                "args": []
            },
            {
                "name": "user_pool_id",
                "description": "(Required) The user pool ID.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_config_config_rule",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/config_config_rule.html",
        "groupName": "Config Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the rule",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) Description of the rule",
                "args": []
            },
            {
                "name": "input_parameters",
                "description": "(Optional) A string in JSON format that is passed to the AWS Config rule Lambda function.",
                "args": []
            },
            {
                "name": "maximum_execution_frequency",
                "description": "(Optional) The maximum frequency with which AWS Config runs evaluations for a rule.",
                "args": []
            },
            {
                "name": "scope",
                "description": "(Optional) Scope defines which resources can trigger an evaluation for the rule as documented below.",
                "args": []
            },
            {
                "name": "source",
                "description": "(Required) Source specifies the rule owner, the rule identifier, and the notifications that cause\n  the function to evaluate your AWS resources as documented below.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The ARN of the config rule",
                "args": []
            },
            {
                "name": "rule_id",
                "description": "The ID of the config rule",
                "args": []
            }
        ]
    },
    {
        "name": "aws_config_configuration_recorder",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/config_configuration_recorder.html",
        "groupName": "Config Resources",
        "args": [
            {
                "name": "name",
                "description": "(Optional) The name of the recorder. Defaults to default. Changing it recreates the resource.",
                "args": []
            },
            {
                "name": "role_arn",
                "description": "(Required) Amazon Resource Name (ARN) of the IAM role.\n  used to make read or write requests to the delivery channel and to describe the AWS resources associated with the account.\n  See AWS Docs for more details.",
                "args": []
            },
            {
                "name": "recording_group",
                "description": "(Optional) Recording group - see below.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "Name of the recorder",
                "args": []
            }
        ]
    },
    {
        "name": "aws_config_configuration_recorder_status",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/config_configuration_recorder_status.html",
        "groupName": "Config Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the recorder",
                "args": []
            },
            {
                "name": "is_enabled",
                "description": "(Required) Whether the configuration recorder should be enabled or disabled.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_config_delivery_channel",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/config_delivery_channel.html",
        "groupName": "Config Resources",
        "args": [
            {
                "name": "name",
                "description": "(Optional) The name of the delivery channel. Defaults to default. Changing it recreates the resource.",
                "args": []
            },
            {
                "name": "s3_bucket_name",
                "description": "(Required) The name of the S3 bucket used to store the configuration history.",
                "args": []
            },
            {
                "name": "s3_key_prefix",
                "description": "(Optional) The prefix for the specified S3 bucket.",
                "args": []
            },
            {
                "name": "sns_topic_arn",
                "description": "(Optional) The ARN of the SNS topic that AWS Config delivers notifications to.",
                "args": []
            },
            {
                "name": "snapshot_delivery_properties",
                "description": "(Optional) Options for how AWS Config delivers configuration snapshots. See below",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The name of the delivery channel.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_dms_certificate",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/dms_certificate.html",
        "groupName": "Database Migration Service",
        "args": [
            {
                "name": "certificate_id",
                "description": "(Required) The certificate identifier.\n\nMust contain from 1 to 255 alphanumeric characters and hyphens.",
                "args": []
            },
            {
                "name": "certificate_pem",
                "description": "(Optional) The contents of the .pem X.509 certificate file for the certificate. Either certificate_pem or certificate_wallet must be set.",
                "args": []
            },
            {
                "name": "certificate_wallet",
                "description": "(Optional) The contents of the Oracle Wallet certificate for use with SSL. Either certificate_pem or certificate_wallet must be set.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "certificate_arn",
                "description": "The Amazon Resource Name (ARN) for the certificate.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_dms_endpoint",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/dms_endpoint.html",
        "groupName": "Database Migration Service",
        "args": [
            {
                "name": "certificate_arn",
                "description": "(Optional, Default: empty string) The Amazon Resource Name (ARN) for the certificate.",
                "args": []
            },
            {
                "name": "database_name",
                "description": "(Optional) The name of the endpoint database.",
                "args": []
            },
            {
                "name": "endpoint_id",
                "description": "(Required) The database endpoint identifier.\n\nMust contain from 1 to 255 alphanumeric characters or hyphens.\nMust begin with a letter\nMust contain only ASCII letters, digits, and hyphens\nMust not end with a hyphen\nMust not contain two consecutive hyphens",
                "args": []
            },
            {
                "name": "endpoint_type",
                "description": "(Required) The type of endpoint. Can be one of source | target.",
                "args": []
            },
            {
                "name": "engine_name",
                "description": "(Required) The type of engine for the endpoint. Can be one of mysql | oracle | postgres | mariadb | aurora | redshift | sybase | sqlserver | dynamodb.",
                "args": []
            },
            {
                "name": "extra_connection_attributes",
                "description": "(Optional) Additional attributes associated with the connection. For available attributes see Using Extra Connection Attributes with AWS Database Migration Service.",
                "args": []
            },
            {
                "name": "kms_key_arn",
                "description": "(Optional) The Amazon Resource Name (ARN) for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for kms_key_arn, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.",
                "args": []
            },
            {
                "name": "password",
                "description": "(Optional) The password to be used to login to the endpoint database.",
                "args": []
            },
            {
                "name": "port",
                "description": "(Optional) The port used by the endpoint database.",
                "args": []
            },
            {
                "name": "server_name",
                "description": "(Optional) The host name of the server.",
                "args": []
            },
            {
                "name": "ssl_mode",
                "description": "(Optional, Default: none) The SSL mode to use for the connection. Can be one of none | require | verify-ca | verify-full",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            },
            {
                "name": "username",
                "description": "(Optional) The user name to be used to login to the endpoint database.",
                "args": []
            },
            {
                "name": "service_access_role",
                "description": "(Optional) The Amazon Resource Name (ARN) used by the service access IAM role for dynamodb endpoints.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "endpoint_arn",
                "description": "The Amazon Resource Name (ARN) for the endpoint.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_dms_replication_instance",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/dms_replication_instance.html",
        "groupName": "Database Migration Service",
        "args": [
            {
                "name": "allocated_storage",
                "description": "(Optional, Default: 50, Min: 5, Max: 6144) The amount of storage (in gigabytes) to be initially allocated for the replication instance.",
                "args": []
            },
            {
                "name": "apply_immediately",
                "description": "(Optional, Default: false) Indicates whether the changes should be applied immediately or during the next maintenance window. Only used when updating an existing resource.",
                "args": []
            },
            {
                "name": "auto_minor_version_upgrade",
                "description": "(Optional, Default: false) Indicates that minor engine upgrades will be applied automatically to the replication instance during the maintenance window.",
                "args": []
            },
            {
                "name": "availability_zone",
                "description": "(Optional) The EC2 Availability Zone that the replication instance will be created in.",
                "args": []
            },
            {
                "name": "engine_version",
                "description": "(Optional) The engine version number of the replication instance.",
                "args": []
            },
            {
                "name": "kms_key_arn",
                "description": "(Optional) The Amazon Resource Name (ARN) for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for kms_key_arn, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.",
                "args": []
            },
            {
                "name": "multi_az",
                "description": "(Optional) Specifies if the replication instance is a multi-az deployment. You cannot set the availability_zone parameter if the multi_az parameter is set to true.",
                "args": []
            },
            {
                "name": "preferred_maintenance_window",
                "description": "(Optional) The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).\n\nDefault: A 30-minute window selected at random from an 8-hour block of time per region, occurring on a random day of the week.\nFormat: ddd:hh24:mi-ddd:hh24:mi\nValid Days: mon, tue, wed, thu, fri, sat, sun\nConstraints: Minimum 30-minute window.",
                "args": []
            },
            {
                "name": "publicly_accessible",
                "description": "(Optional, Default: false) Specifies the accessibility options for the replication instance. A value of true represents an instance with a public IP address. A value of false represents an instance with a private IP address.",
                "args": []
            },
            {
                "name": "replication_instance_class",
                "description": "(Required) The compute and memory capacity of the replication instance as specified by the replication instance class. Can be one of dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge",
                "args": []
            },
            {
                "name": "replication_instance_id",
                "description": "(Required) The replication instance identifier. This parameter is stored as a lowercase string.\n\nMust contain from 1 to 63 alphanumeric characters or hyphens.\nFirst character must be a letter.\nCannot end with a hyphen\nCannot contain two consecutive hyphens.",
                "args": []
            },
            {
                "name": "replication_subnet_group_id",
                "description": "(Optional) A subnet group to associate with the replication instance.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            },
            {
                "name": "vpc_security_group_ids",
                "description": "(Optional) A list of VPC security group IDs to be used with the replication instance. The VPC security groups must work with the VPC containing the replication instance.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "replication_instance_arn",
                "description": "The Amazon Resource Name (ARN) of the replication instance.",
                "args": []
            },
            {
                "name": "replication_instance_private_ips",
                "description": "A list of the private IP addresses of the replication instance.",
                "args": []
            },
            {
                "name": "replication_instance_public_ips",
                "description": "A list of the public IP addresses of the replication instance.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_dms_replication_subnet_group",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/dms_replication_subnet_group.html",
        "groupName": "Database Migration Service",
        "args": [
            {
                "name": "replication_subnet_group_description",
                "description": "(Required) The description for the subnet group.",
                "args": []
            },
            {
                "name": "replication_subnet_group_id",
                "description": "(Required) The name for the replication subnet group. This value is stored as a lowercase string.\n\nMust contain no more than 255 alphanumeric characters, periods, spaces, underscores, or hyphens.\nMust not be \"default\".",
                "args": []
            },
            {
                "name": "subnet_ids",
                "description": "(Required) A list of the EC2 subnet IDs for the subnet group.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "vpc_id",
                "description": "The ID of the VPC the subnet group is in.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_dms_replication_task",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/dms_replication_task.html",
        "groupName": "Database Migration Service",
        "args": [
            {
                "name": "cdc_start_time",
                "description": "(Optional) The Unix timestamp integer for the start of the Change Data Capture (CDC) operation.",
                "args": []
            },
            {
                "name": "migration_type",
                "description": "(Required) The migration type. Can be one of full-load | cdc | full-load-and-cdc.",
                "args": []
            },
            {
                "name": "replication_instance_arn",
                "description": "(Required) The Amazon Resource Name (ARN) of the replication instance.",
                "args": []
            },
            {
                "name": "replication_task_id",
                "description": "(Required) The replication task identifier.\n\nMust contain from 1 to 255 alphanumeric characters or hyphens.\nFirst character must be a letter.\nCannot end with a hyphen.\nCannot contain two consecutive hyphens.",
                "args": []
            },
            {
                "name": "replication_task_settings",
                "description": "(Optional) An escaped JSON string that contains the task settings. For a complete list of task settings, see Task Settings for AWS Database Migration Service Tasks.",
                "args": []
            },
            {
                "name": "source_endpoint_arn",
                "description": "(Required) The Amazon Resource Name (ARN) string that uniquely identifies the source endpoint.",
                "args": []
            },
            {
                "name": "table_mappings",
                "description": "(Required) An escaped JSON string that contains the table mappings. For information on table mapping see Using Table Mapping with an AWS Database Migration Service Task to Select and Filter Data",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            },
            {
                "name": "target_endpoint_arn",
                "description": "(Required) The Amazon Resource Name (ARN) string that uniquely identifies the target endpoint.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "replication_task_arn",
                "description": "The Amazon Resource Name (ARN) for the replication task.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_devicefarm_project",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/devicefarm_project.html",
        "groupName": "Device Farm Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the project",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The Amazon Resource Name of this project",
                "args": []
            }
        ]
    },
    {
        "name": "aws_directory_service_directory",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/directory_service_directory.html",
        "groupName": "Directory Service Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The fully qualified name for the directory, such as corp.example.com",
                "args": []
            },
            {
                "name": "password",
                "description": "(Required) The password for the directory administrator or connector user.",
                "args": []
            },
            {
                "name": "size",
                "description": "(Required for SimpleAD and ADConnector) The size of the directory (Small or Large are accepted values).",
                "args": []
            },
            {
                "name": "vpc_settings",
                "description": "(Required for SimpleAD and MicrosoftAD) VPC related information about the directory. Fields documented below.",
                "args": []
            },
            {
                "name": "connect_settings",
                "description": "(Required for ADConnector) Connector related information about the directory. Fields documented below.",
                "args": []
            },
            {
                "name": "alias",
                "description": "(Optional) The alias for the directory (must be unique amongst all aliases in AWS). Required for enable_sso.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) A textual description for the directory.",
                "args": []
            },
            {
                "name": "short_name",
                "description": "(Optional) The short name of the directory, such as CORP.",
                "args": []
            },
            {
                "name": "enable_sso",
                "description": "(Optional) Whether to enable single-sign on for the directory. Requires alias. Defaults to false.",
                "args": []
            },
            {
                "name": "type",
                "description": "(Optional)  The directory type (SimpleAD or MicrosoftAD are accepted values). Defaults to SimpleAD.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The directory identifier.",
                "args": []
            },
            {
                "name": "access_url",
                "description": "The access URL for the directory, such as http://alias.awsapps.com.",
                "args": []
            },
            {
                "name": "dns_ip_addresses",
                "description": "A list of IP addresses of the DNS servers for the directory or connector.",
                "args": []
            },
            {
                "name": "security_group_id",
                "description": "The ID of the security group created by the directory (SimpleAD or MicrosoftAD only).",
                "args": []
            }
        ]
    },
    {
        "name": "aws_dx_connection",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/dx_connection.html",
        "groupName": "Direct Connect Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the connection.",
                "args": []
            },
            {
                "name": "bandwidth",
                "description": "(Required) The bandwidth of the connection. Available values: 1Gbps, 10Gbps. Case sensitive.",
                "args": []
            },
            {
                "name": "location",
                "description": "(Required) The AWS Direct Connect location where the connection is located. See DescribeLocations for the list of AWS Direct Connect locations. Use locationCode.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the connection.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_dx_connection_association",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/dx_connection_association.html",
        "groupName": "Direct Connect Resources",
        "args": [
            {
                "name": "connection_id",
                "description": "(Required) The ID of the connection.",
                "args": []
            },
            {
                "name": "lag_id",
                "description": "(Required) The ID of the LAG with which to associate the connection.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_dx_lag",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/dx_lag.html",
        "groupName": "Direct Connect Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the LAG.",
                "args": []
            },
            {
                "name": "connections_bandwidth",
                "description": "(Required) The bandwidth of the individual physical connections bundled by the LAG. Available values: 1Gbps, 10Gbps. Case sensitive.",
                "args": []
            },
            {
                "name": "location",
                "description": "(Required) The AWS Direct Connect location in which the LAG should be allocated. See DescribeLocations for the list of AWS Direct Connect locations. Use locationCode.",
                "args": []
            },
            {
                "name": "number_of_connections",
                "description": "(Required) The number of physical connections initially provisioned and bundled by the LAG.",
                "args": []
            },
            {
                "name": "force_destroy",
                "description": "(Optional, Default:false) A boolean that indicates all connections associated with the LAG should be deleted so that the LAG can be destroyed without error. These objects are not recoverable.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the LAG.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_dynamodb_global_table",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/dynamodb_global_table.html",
        "groupName": "DynamoDB Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the global table. Must match underlying DynamoDB Table names in all regions.",
                "args": []
            },
            {
                "name": "replica",
                "description": "(Required) Underlying DynamoDB Table. At least 1 replica must be defined. See below.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The name of the DynamoDB Global Table",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the DynamoDB Global Table",
                "args": []
            }
        ]
    },
    {
        "name": "aws_dynamodb_table",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/dynamodb_table.html",
        "groupName": "DynamoDB Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the table, this needs to be unique\nwithin a region.",
                "args": []
            },
            {
                "name": "hash_key",
                "description": "(Required, Forces new resource) The attribute to use as the hash key (the\nattribute must also be defined as an attribute record",
                "args": []
            },
            {
                "name": "range_key",
                "description": "(Optional, Forces new resource) The attribute to use as the range key (must\nalso be defined)",
                "args": []
            },
            {
                "name": "write_capacity",
                "description": "(Required) The number of write units for this table",
                "args": []
            },
            {
                "name": "read_capacity",
                "description": "(Required) The number of read units for this table",
                "args": []
            },
            {
                "name": "attribute",
                "description": "(Required) Define an attribute, has two properties:\nname - The name of the attribute\ntype - One of: S, N, or B for (S)tring, (N)umber or (B)inary data",
                "args": []
            },
            {
                "name": "ttl",
                "description": "(Optional) Defines ttl, has two properties, and can only be specified once:\nenabled - (Required) Indicates whether ttl is enabled (true) or disabled (false).\nattribute_name - (Required) The name of the table attribute to store the TTL timestamp in.",
                "args": []
            },
            {
                "name": "local_secondary_index",
                "description": "(Optional, Forces new resource) Describe an LSI on the table;\nthese can only be allocated at creation so you cannot change this\ndefinition after you have created the resource.",
                "args": []
            },
            {
                "name": "global_secondary_index",
                "description": "(Optional) Describe a GSO for the table;\nsubject to the normal limits on the number of GSIs, projected\nattributes, etc.",
                "args": []
            },
            {
                "name": "stream_enabled",
                "description": "(Optional) Indicates whether Streams are to be enabled (true) or disabled (false).",
                "args": []
            },
            {
                "name": "stream_view_type",
                "description": "(Optional) When an item in the table is modified, StreamViewType determines what information is written to the table's stream. Valid values are KEYS_ONLY, NEW_IMAGE, OLD_IMAGE, NEW_AND_OLD_IMAGES.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A map of tags to populate on the created table.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The arn of the table",
                "args": []
            },
            {
                "name": "id",
                "description": "The name of the table",
                "args": []
            },
            {
                "name": "stream_arn",
                "description": "The ARN of the Table Stream. Only available when stream_enabled = true",
                "args": []
            },
            {
                "name": "stream_label",
                "description": "A timestamp, in ISO 8601 format, for this stream. Note that this timestamp is not\na unique identifier for the stream on its own. However, the combination of AWS customer ID,\ntable name and this field is guaranteed to be unique.\nIt can be used for creating CloudWatch Alarms. Only available when stream_enabled = true",
                "args": []
            }
        ]
    },
    {
        "name": "aws_dynamodb_table_item",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/dynamodb_table_item.html",
        "groupName": "DynamoDB Resources",
        "args": [
            {
                "name": "table_name",
                "description": "(Required) The name of the table to contain the item.",
                "args": []
            },
            {
                "name": "hash_key",
                "description": "(Required) Hash key to use for lookups and identification of the item",
                "args": []
            },
            {
                "name": "range_key",
                "description": "(Optional) Range key to use for lookups and identification of the item. Required if there is range key defined in the table.",
                "args": []
            },
            {
                "name": "item",
                "description": "(Required) JSON representation of a map of attribute name/value pairs, one for each attribute.\nOnly the primary key attributes are required; you can optionally provide other attribute name-value pairs for the item.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_alb",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/lb.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "name",
                "description": "(Optional) The name of the LB. This name must be unique within your AWS account, can have a maximum of 32 characters,\nmust contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen. If not specified,\nTerraform will autogenerate a name beginning with tf-lb.",
                "args": []
            },
            {
                "name": "name_prefix",
                "description": "(Optional) Creates a unique name beginning with the specified prefix. Conflicts with name.",
                "args": []
            },
            {
                "name": "internal",
                "description": "(Optional) If true, the LB will be internal.",
                "args": []
            },
            {
                "name": "load_balancer_type",
                "description": "(Optional) The type of load balancer to create. Possible values are application or network. The default value is application.",
                "args": []
            },
            {
                "name": "security_groups",
                "description": "(Optional) A list of security group IDs to assign to the LB. Only valid for Load Balancers of type application.",
                "args": []
            },
            {
                "name": "access_logs",
                "description": "(Optional) An Access Logs block. Access Logs documented below.",
                "args": []
            },
            {
                "name": "subnets",
                "description": "(Optional) A list of subnet IDs to attach to the LB. Subnets\ncannot be updated for Load Balancers of type network. Changing this value\nwill for load balancers of type network will force a recreation of the resource.",
                "args": []
            },
            {
                "name": "subnet_mapping",
                "description": "(Optional) A subnet mapping block as documented below.",
                "args": []
            },
            {
                "name": "idle_timeout",
                "description": "(Optional) The time in seconds that the connection is allowed to be idle. Default: 60.",
                "args": []
            },
            {
                "name": "enable_deletion_protection",
                "description": "(Optional) If true, deletion of the load balancer will be disabled via\n the AWS API. This will prevent Terraform from deleting the load balancer. Defaults to false.",
                "args": []
            },
            {
                "name": "ip_address_type",
                "description": "(Optional) The type of IP addresses used by the subnets for your load balancer. The possible values are ipv4 and dualstack",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ARN of the load balancer (matches arn).",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the load balancer (matches id).",
                "args": []
            },
            {
                "name": "arn_suffix",
                "description": "The ARN suffix for use with CloudWatch Metrics.",
                "args": []
            },
            {
                "name": "dns_name",
                "description": "The DNS name of the load balancer.",
                "args": []
            },
            {
                "name": "canonical_hosted_zone_id",
                "description": "The canonical hosted zone ID of the load balancer.",
                "args": []
            },
            {
                "name": "zone_id",
                "description": "The canonical hosted zone ID of the load balancer (to be used in a Route 53 Alias record).",
                "args": []
            }
        ]
    },
    {
        "name": "aws_alb_listener",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/lb_listener.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "load_balancer_arn",
                "description": "(Required, Forces New Resource) The ARN of the load balancer.",
                "args": []
            },
            {
                "name": "port",
                "description": "(Required) The port on which the load balancer is listening.",
                "args": []
            },
            {
                "name": "protocol",
                "description": "(Optional) The protocol for connections from clients to the load balancer. Valid values are TCP, HTTP and HTTPS. Defaults to HTTP.",
                "args": []
            },
            {
                "name": "ssl_policy",
                "description": "(Optional) The name of the SSL Policy for the listener. Required if protocol is HTTPS.",
                "args": []
            },
            {
                "name": "certificate_arn",
                "description": "(Optional) The ARN of the SSL server certificate. Exactly one certificate is required if the protocol is HTTPS.",
                "args": []
            },
            {
                "name": "default_action",
                "description": "(Required) An Action block. Action blocks are documented below.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ARN of the listener (matches arn)",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the listener (matches id)",
                "args": []
            }
        ]
    },
    {
        "name": "aws_alb_listener_rule",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/lb_listener_rule.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "listener_arn",
                "description": "(Required, Forces New Resource) The ARN of the listener to which to attach the rule.",
                "args": []
            },
            {
                "name": "priority",
                "description": "(Required) The priority for the rule. A listener can't have multiple rules with the same priority.",
                "args": []
            },
            {
                "name": "action",
                "description": "(Required) An Action block. Action blocks are documented below.",
                "args": []
            },
            {
                "name": "condition",
                "description": "(Required) A Condition block. Condition blocks are documented below.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ARN of the rule (matches arn)",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the rule (matches id)",
                "args": []
            }
        ]
    },
    {
        "name": "aws_alb_target_group",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/lb_target_group.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "name",
                "description": "(Optional, Forces new resource) The name of the target group. If omitted, Terraform will assign a random, unique name.",
                "args": []
            },
            {
                "name": "name_prefix",
                "description": "(Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name. Cannot be longer than 6 characters.",
                "args": []
            },
            {
                "name": "port",
                "description": "(Required) The port on which targets receive traffic, unless overridden when registering a specific target.",
                "args": []
            },
            {
                "name": "protocol",
                "description": "(Required) The protocol to use for routing traffic to the targets.",
                "args": []
            },
            {
                "name": "vpc_id",
                "description": "(Required) The identifier of the VPC in which to create the target group.",
                "args": []
            },
            {
                "name": "deregistration_delay",
                "description": "(Optional) The amount time for Elastic Load Balancing to wait before changing the state of a deregistering target from draining to unused. The range is 0-3600 seconds. The default value is 300 seconds.",
                "args": []
            },
            {
                "name": "stickiness",
                "description": "(Optional) A Stickiness block. Stickiness blocks are documented below. stickiness is only valid if used with Load Balancers of type Application",
                "args": []
            },
            {
                "name": "health_check",
                "description": "(Optional) A Health Check block. Health Check blocks are documented below.",
                "args": []
            },
            {
                "name": "target_type",
                "description": "(Optional) The type of target that you must specify when registering targets with this target group.\nThe possible values are instance (targets are specified by instance ID) or ip (targets are specified by IP address).\nThe default is instance. Note that you can't specify targets for a target group using both instance IDs and IP addresses.\nIf the target type is ip, specify IP addresses from the subnets of the virtual private cloud (VPC) for the target group,\nthe RFC 1918 range (10.0.0.0/8, 172.16.0.0/12, and 192.168.0.0/16), and the RFC 6598 range (100.64.0.0/10).\nYou can't specify publicly routable IP addresses.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ARN of the Target Group (matches arn)",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the Target Group (matches id)",
                "args": []
            },
            {
                "name": "arn_suffix",
                "description": "The ARN suffix for use with CloudWatch Metrics.",
                "args": []
            },
            {
                "name": "name",
                "description": "The name of the Target Group",
                "args": []
            }
        ]
    },
    {
        "name": "aws_alb_target_group_attachment",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/lb_target_group_attachment.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "target_group_arn",
                "description": "(Required) The ARN of the target group with which to register targets",
                "args": []
            },
            {
                "name": "target_id",
                "description": "(Required) The ID of the target. This is the Instance ID for an instance, or the container ID for an ECS container. If the target type is ip, specify an IP address.",
                "args": []
            },
            {
                "name": "port",
                "description": "(Optional) The port on which targets receive traffic.",
                "args": []
            },
            {
                "name": "availability_zone",
                "description": "(Optional) The Availability Zone where the IP address of the target is to be registered.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "A unique identifier for the attachment",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ami",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/ami.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) A region-unique name for the AMI.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) A longer, human-readable description for the AMI.",
                "args": []
            },
            {
                "name": "root_device_name",
                "description": "(Optional) The name of the root device (for example, /dev/sda1, or /dev/xvda).",
                "args": []
            },
            {
                "name": "virtualization_type",
                "description": "(Optional) Keyword to choose what virtualization mode created instances\nwill use. Can be either \"paravirtual\" (the default) or \"hvm\". The choice of virtualization type\nchanges the set of further arguments that are required, as described below.",
                "args": []
            },
            {
                "name": "architecture",
                "description": "(Optional) Machine architecture for created instances. Defaults to \"x86_64\".",
                "args": []
            },
            {
                "name": "ebs_block_device",
                "description": "(Optional) Nested block describing an EBS block device that should be\nattached to created instances. The structure of this block is described below.",
                "args": []
            },
            {
                "name": "ephemeral_block_device",
                "description": "(Optional) Nested block describing an ephemeral block device that\nshould be attached to created instances. The structure of this block is described below.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the created AMI.",
                "args": []
            },
            {
                "name": "root_snapshot_id",
                "description": "The Snapshot ID for the root volume (for EBS-backed AMIs)",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ami_copy",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/ami_copy.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) A region-unique name for the AMI.",
                "args": []
            },
            {
                "name": "source_ami_id",
                "description": "(Required) The id of the AMI to copy. This id must be valid in the region\ngiven by source_ami_region.",
                "args": []
            },
            {
                "name": "source_ami_region",
                "description": "(Required) The region from which the AMI will be copied. This may be the\nsame as the AWS provider region in order to create a copy within the same region.",
                "args": []
            },
            {
                "name": "encrypted",
                "description": "(Optional) Specifies whether the destination snapshots of the copied image should be encrypted. Defaults to false",
                "args": []
            },
            {
                "name": "kms_key_id",
                "description": "(Optional) The full ARN of the KMS Key to use when encrypting the snapshots of an image during a copy operation. If not specified, then the default AWS KMS Key will be used",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the created AMI.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ami_from_instance",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/ami_from_instance.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) A region-unique name for the AMI.",
                "args": []
            },
            {
                "name": "source_instance_id",
                "description": "(Required) The id of the instance to use as the basis of the AMI.",
                "args": []
            },
            {
                "name": "snapshot_without_reboot",
                "description": "(Optional) Boolean that overrides the behavior of stopping\nthe instance before snapshotting. This is risky since it may cause a snapshot of an\ninconsistent filesystem state, but can be used to avoid downtime if the user otherwise\nguarantees that no filesystem writes will be underway at the time of snapshot.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the created AMI.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ami_launch_permission",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/ami_launch_permission.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "image_id",
                "description": "(required) A region-unique name for the AMI.",
                "args": []
            },
            {
                "name": "account_id",
                "description": "(required) An AWS Account ID to add launch permissions.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "A combination of \"image_id-account_id\".",
                "args": []
            }
        ]
    },
    {
        "name": "aws_app_cookie_stickiness_policy",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/app_cookie_stickiness_policy.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the stickiness policy.",
                "args": []
            },
            {
                "name": "load_balancer",
                "description": "(Required) The name of load balancer to which the policy\nshould be attached.",
                "args": []
            },
            {
                "name": "lb_port",
                "description": "(Required) The load balancer port to which the policy\nshould be applied. This must be an active listener on the load\nbalancer.",
                "args": []
            },
            {
                "name": "cookie_name",
                "description": "(Required) The application cookie whose lifetime the ELB's cookie should follow.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the policy.",
                "args": []
            },
            {
                "name": "name",
                "description": "The name of the stickiness policy.",
                "args": []
            },
            {
                "name": "load_balancer",
                "description": "The name of load balancer to which the policy is attached.",
                "args": []
            },
            {
                "name": "lb_port",
                "description": "The load balancer port to which the policy is applied.",
                "args": []
            },
            {
                "name": "cookie_name",
                "description": "The application cookie whose lifetime the ELB's cookie should follow.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_autoscaling_attachment",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/autoscaling_attachment.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "autoscaling_group_name",
                "description": "(Required) Name of ASG to associate with the ELB.",
                "args": []
            },
            {
                "name": "elb",
                "description": "(Optional) The name of the ELB.",
                "args": []
            },
            {
                "name": "alb_target_group_arn",
                "description": "(Optional) The ARN of an ALB Target Group.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_autoscaling_group",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/autoscaling_group.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "name",
                "description": "(Optional) The name of the auto scaling group. By default generated by Terraform.",
                "args": []
            },
            {
                "name": "name_prefix",
                "description": "(Optional) Creates a unique name beginning with the specified\nprefix. Conflicts with name.",
                "args": []
            },
            {
                "name": "max_size",
                "description": "(Required) The maximum size of the auto scale group.",
                "args": []
            },
            {
                "name": "min_size",
                "description": "(Required) The minimum size of the auto scale group.\n  (See also Waiting for Capacity below.)",
                "args": []
            },
            {
                "name": "availability_zones",
                "description": "(Optional) A list of AZs to launch resources in.\n Required only if you do not specify any vpc_zone_identifier",
                "args": []
            },
            {
                "name": "default_cooldown",
                "description": "(Optional) The amount of time, in seconds, after a scaling activity completes before another scaling activity can start.",
                "args": []
            },
            {
                "name": "launch_configuration",
                "description": "(Required) The name of the launch configuration to use.",
                "args": []
            },
            {
                "name": "initial_lifecycle_hook",
                "description": "(Optional) One or more\nLifecycle Hooks\nto attach to the autoscaling group before instances are launched. The\nsyntax is exactly the same as the separate\naws_autoscaling_lifecycle_hook\nresource, without the autoscaling_group_name attribute. Please note that this will only work when creating\na new autoscaling group. For all other use-cases, please use aws_autoscaling_lifecycle_hook resource.",
                "args": []
            },
            {
                "name": "health_check_grace_period",
                "description": "(Optional, Default: 300) Time (in seconds) after instance comes into service before checking health.",
                "args": []
            },
            {
                "name": "health_check_type",
                "description": "(Optional) \"EC2\" or \"ELB\". Controls how health checking is done.",
                "args": []
            },
            {
                "name": "desired_capacity",
                "description": "(Optional) The number of Amazon EC2 instances that\n  should be running in the group. (See also Waiting for\n  Capacity below.)",
                "args": []
            },
            {
                "name": "force_delete",
                "description": "(Optional) Allows deleting the autoscaling group without waiting\n for all instances in the pool to terminate.  You can force an autoscaling group to delete\n even if it's in the process of scaling a resource. Normally, Terraform\n drains all the instances before deleting the group.  This bypasses that\n behavior and potentially leaves resources dangling.",
                "args": []
            },
            {
                "name": "load_balancers",
                "description": "(Optional) A list of elastic load balancer names to add to the autoscaling\n group names.",
                "args": []
            },
            {
                "name": "vpc_zone_identifier",
                "description": "(Optional) A list of subnet IDs to launch resources in.",
                "args": []
            },
            {
                "name": "target_group_arns",
                "description": "(Optional) A list of aws_alb_target_group ARNs, for use with\nApplication Load Balancing",
                "args": []
            },
            {
                "name": "termination_policies",
                "description": "(Optional) A list of policies to decide how the instances in the auto scale group should be terminated. The allowed values are OldestInstance, NewestInstance, OldestLaunchConfiguration, ClosestToNextInstanceHour, Default.",
                "args": []
            },
            {
                "name": "suspended_processes",
                "description": "(Optional) A list of processes to suspend for the AutoScaling Group. The allowed values are Launch, Terminate, HealthCheck, ReplaceUnhealthy, AZRebalance, AlarmNotification, ScheduledActions, AddToLoadBalancer.\nNote that if you suspend either the Launch or Terminate process types, it can prevent your autoscaling group from functioning properly.",
                "args": []
            },
            {
                "name": "tag",
                "description": "(Optional) A list of tag blocks. Tags documented below.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A list of tag blocks (maps). Tags documented below.",
                "args": []
            },
            {
                "name": "placement_group",
                "description": "(Optional) The name of the placement group into which you'll launch your instances, if any.",
                "args": []
            },
            {
                "name": "metrics_granularity",
                "description": "(Optional) The granularity to associate with the metrics to collect. The only valid value is 1Minute. Default is 1Minute.",
                "args": []
            },
            {
                "name": "enabled_metrics",
                "description": "(Optional) A list of metrics to collect. The allowed values are GroupMinSize, GroupMaxSize, GroupDesiredCapacity, GroupInServiceInstances, GroupPendingInstances, GroupStandbyInstances, GroupTerminatingInstances, GroupTotalInstances.",
                "args": []
            },
            {
                "name": "wait_for_capacity_timeout",
                "description": "(Default: \"10m\") A maximum\nduration that Terraform should\nwait for ASG instances to be healthy before timing out.  (See also Waiting\nfor Capacity below.) Setting this to \"0\" causes\nTerraform to skip all Capacity Waiting behavior.",
                "args": []
            },
            {
                "name": "min_elb_capacity",
                "description": "(Optional) Setting this causes Terraform to wait for\nthis number of instances to show up healthy in the ELB only on creation.\nUpdates will not wait on ELB instance number changes.\n(See also Waiting for Capacity below.)",
                "args": []
            },
            {
                "name": "wait_for_elb_capacity",
                "description": "(Optional) Setting this will cause Terraform to wait\nfor exactly this number of healthy instances in all attached load balancers\non both create and update operations. (Takes precedence over\nmin_elb_capacity behavior.)\n(See also Waiting for Capacity below.)",
                "args": []
            },
            {
                "name": "protect_from_scale_in",
                "description": "(Optional) Allows setting instance protection. The\n autoscaling group will not select instances with this setting for terminination\n during scale in events.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The autoscaling group id.",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN for this AutoScaling Group",
                "args": []
            },
            {
                "name": "availability_zones",
                "description": "The availability zones of the autoscale group.",
                "args": []
            },
            {
                "name": "min_size",
                "description": "The minimum size of the autoscale group",
                "args": []
            },
            {
                "name": "max_size",
                "description": "The maximum size of the autoscale group",
                "args": []
            },
            {
                "name": "default_cooldown",
                "description": "Time between a scaling activity and the succeeding scaling activity.",
                "args": []
            },
            {
                "name": "name",
                "description": "The name of the autoscale group",
                "args": []
            },
            {
                "name": "health_check_grace_period",
                "description": "Time after instance comes into service before checking health.",
                "args": []
            },
            {
                "name": "health_check_type",
                "description": "\"EC2\" or \"ELB\". Controls how health checking is done.",
                "args": []
            },
            {
                "name": "desired_capacity",
                "description": "The number of Amazon EC2 instances that should be running in the group.",
                "args": []
            },
            {
                "name": "launch_configuration",
                "description": "The launch configuration of the autoscale group",
                "args": []
            },
            {
                "name": "vpc_zone_identifier",
                "description": "(Optional)  The VPC zone identifier",
                "args": []
            },
            {
                "name": "load_balancers",
                "description": "(Optional) The load balancer names associated with the\n autoscaling group.",
                "args": []
            },
            {
                "name": "target_group_arns",
                "description": "(Optional) list of Target Group ARNs that apply to this\nAutoScaling Group",
                "args": []
            }
        ]
    },
    {
        "name": "aws_autoscaling_lifecycle_hook",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/autoscaling_lifecycle_hooks.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the lifecycle hook.",
                "args": []
            },
            {
                "name": "autoscaling_group_name",
                "description": "(Required) The name of the Auto Scaling group to which you want to assign the lifecycle hook",
                "args": []
            },
            {
                "name": "default_result",
                "description": "(Optional) Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses or if an unexpected failure occurs. The value for this parameter can be either CONTINUE or ABANDON. The default value for this parameter is ABANDON.",
                "args": []
            },
            {
                "name": "heartbeat_timeout",
                "description": "(Optional) Defines the amount of time, in seconds, that can elapse before the lifecycle hook times out. When the lifecycle hook times out, Auto Scaling performs the action defined in the DefaultResult parameter",
                "args": []
            },
            {
                "name": "lifecycle_transition",
                "description": "(Required) The instance state to which you want to attach the lifecycle hook. For a list of lifecycle hook types, see describe-lifecycle-hook-types",
                "args": []
            },
            {
                "name": "notification_metadata",
                "description": "(Optional) Contains additional information that you want to include any time Auto Scaling sends a message to the notification target.",
                "args": []
            },
            {
                "name": "notification_target_arn",
                "description": "(Optional) The ARN of the notification target that Auto Scaling will use to notify you when an instance is in the transition state for the lifecycle hook. This ARN target can be either an SQS queue or an SNS topic.",
                "args": []
            },
            {
                "name": "role_arn",
                "description": "(Optional) The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_autoscaling_notification",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/autoscaling_notification.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "group_names",
                "description": "(Required) A list of AutoScaling Group Names",
                "args": []
            },
            {
                "name": "notifications",
                "description": "(Required) A list of Notification Types that trigger\nnotifications. Acceptable values are documented in the AWS documentation here",
                "args": []
            },
            {
                "name": "topic_arn",
                "description": "(Required) The Topic ARN for notifications to be sent through",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "group_names",
                "description": "",
                "args": []
            },
            {
                "name": "notifications",
                "description": "",
                "args": []
            },
            {
                "name": "topic_arn",
                "description": "",
                "args": []
            }
        ]
    },
    {
        "name": "aws_autoscaling_policy",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/autoscaling_policy.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the policy.",
                "args": []
            },
            {
                "name": "autoscaling_group_name",
                "description": "(Required) The name of the autoscaling group.",
                "args": []
            },
            {
                "name": "adjustment_type",
                "description": "(Optional) Specifies whether the adjustment is an absolute number or a percentage of the current capacity. Valid values are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity.",
                "args": []
            },
            {
                "name": "policy_type",
                "description": "(Optional) The policy type, either \"SimpleScaling\", \"StepScaling\" or \"TargetTrackingScaling\". If this value isn't provided, AWS will default to \"SimpleScaling.\"",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_autoscaling_schedule",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/autoscaling_schedule.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "autoscaling_group_name",
                "description": "(Required) The name or Amazon Resource Name (ARN) of the Auto Scaling group.",
                "args": []
            },
            {
                "name": "scheduled_action_name",
                "description": "(Required) The name of this scaling action.",
                "args": []
            },
            {
                "name": "start_time",
                "description": "(Optional) The time for this action to start, in \"YYYY-MM-DDThh:mm:ssZ\" format in UTC/GMT only (for example, 2014-06-01T00:00:00Z ).                      If you try to schedule your action in the past, Auto Scaling returns an error message.",
                "args": []
            },
            {
                "name": "end_time",
                "description": "(Optional) The time for this action to end, in \"YYYY-MM-DDThh:mm:ssZ\" format in UTC/GMT only (for example, 2014-06-01T00:00:00Z ).                    If you try to schedule your action in the past, Auto Scaling returns an error message.",
                "args": []
            },
            {
                "name": "recurrence",
                "description": "(Optional) The time when recurring future actions will start. Start time is specified by the user following the Unix cron syntax format.",
                "args": []
            },
            {
                "name": "min_size",
                "description": "(Optional) The minimum size for the Auto Scaling group. Default",
                "args": []
            },
            {
                "name": "",
                "description": "Set to 1 if you don't want to change the minimum size at the scheduled time.",
                "args": []
            },
            {
                "name": "max_size",
                "description": "(Optional) The maximum size for the Auto Scaling group. Default",
                "args": []
            },
            {
                "name": "",
                "description": "Set to 1 if you don't want to change the maximum size at the scheduled time.",
                "args": []
            },
            {
                "name": "desired_capacity",
                "description": "(Optional) The number of EC2 instances that should be running in the group. Default 0.  Set to -1 if you don't want to change the desired capacity at the scheduled time.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_snapshot_create_volume_permission",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/snapshot_create_volume_permission.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "snapshot_id",
                "description": "(required) A snapshot ID",
                "args": []
            },
            {
                "name": "account_id",
                "description": "(required) An AWS Account ID to add create volume permissions",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "A combination of \"snapshot_id-account_id\".",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ebs_snapshot",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/ebs_snapshot.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "volume_id",
                "description": "(Required) The Volume ID of which to make a snapshot.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) A description of what the snapshot is.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the snapshot",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The snapshot ID (e.g. snap-59fcb34e).",
                "args": []
            },
            {
                "name": "owner_id",
                "description": "The AWS account ID of the EBS snapshot owner.",
                "args": []
            },
            {
                "name": "owner_alias",
                "description": "Value from an Amazon-maintained list (amazon, aws-marketplace, microsoft) of snapshot owners.",
                "args": []
            },
            {
                "name": "encrypted",
                "description": "Whether the snapshot is encrypted.",
                "args": []
            },
            {
                "name": "volume_size",
                "description": "The size of the drive in GiBs.",
                "args": []
            },
            {
                "name": "kms_key_id",
                "description": "The ARN for the KMS encryption key.",
                "args": []
            },
            {
                "name": "data_encryption_key_id",
                "description": "The data encryption key identifier for the snapshot.",
                "args": []
            },
            {
                "name": "tags",
                "description": "A mapping of tags for the snapshot.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ebs_volume",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/ebs_volume.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "availability_zone",
                "description": "(Required) The AZ where the EBS volume will exist.",
                "args": []
            },
            {
                "name": "encrypted",
                "description": "(Optional) If true, the disk will be encrypted.",
                "args": []
            },
            {
                "name": "iops",
                "description": "(Optional) The amount of IOPS to provision for the disk.",
                "args": []
            },
            {
                "name": "size",
                "description": "(Optional) The size of the drive in GiBs.",
                "args": []
            },
            {
                "name": "snapshot_id",
                "description": "(Optional) A snapshot to base the EBS volume off of.",
                "args": []
            },
            {
                "name": "type",
                "description": "(Optional) The type of EBS volume. Can be \"standard\", \"gp2\", \"io1\", \"sc1\" or \"st1\" (Default: \"standard\").",
                "args": []
            },
            {
                "name": "kms_key_id",
                "description": "(Optional) The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The volume ID (e.g. vol-59fcb34e).",
                "args": []
            },
            {
                "name": "arn",
                "description": "The volume ARN (e.g. arn:aws:ec2:us-east-1:0123456789012:volume/vol-59fcb34e).",
                "args": []
            }
        ]
    },
    {
        "name": "aws_eip",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/eip.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "vpc",
                "description": "(Optional) Boolean if the EIP is in a VPC or not.",
                "args": []
            },
            {
                "name": "instance",
                "description": "(Optional) EC2 instance ID.",
                "args": []
            },
            {
                "name": "network_interface",
                "description": "(Optional) Network interface ID to associate with.",
                "args": []
            },
            {
                "name": "associate_with_private_ip",
                "description": "(Optional) A user specified primary or secondary private IP address to\nassociate with the Elastic IP address. If no private IP address is specified,\nthe Elastic IP address is associated with the primary private IP address.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "Contains the EIP allocation ID.",
                "args": []
            },
            {
                "name": "private_ip",
                "description": "Contains the private IP address (if in VPC).",
                "args": []
            },
            {
                "name": "associate_with_private_ip",
                "description": "Contains the user specified private IP address\n(if in VPC).",
                "args": []
            },
            {
                "name": "public_ip",
                "description": "Contains the public IP address.",
                "args": []
            },
            {
                "name": "instance",
                "description": "Contains the ID of the attached instance.",
                "args": []
            },
            {
                "name": "network_interface",
                "description": "Contains the ID of the attached network interface.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_eip_association",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/eip_association.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "allocation_id",
                "description": "(Optional) The allocation ID. This is required for EC2-VPC.",
                "args": []
            },
            {
                "name": "allow_reassociation",
                "description": "(Optional, Boolean) Whether to allow an Elastic IP to\nbe re-associated. Defaults to true in VPC.",
                "args": []
            },
            {
                "name": "instance_id",
                "description": "(Optional) The ID of the instance. This is required for\nEC2-Classic. For EC2-VPC, you can specify either the instance ID or the\nnetwork interface ID, but not both. The operation fails if you specify an\ninstance ID unless exactly one network interface is attached.",
                "args": []
            },
            {
                "name": "network_interface_id",
                "description": "(Optional) The ID of the network interface. If the\ninstance has more than one network interface, you must specify a network\ninterface ID.",
                "args": []
            },
            {
                "name": "private_ip_address",
                "description": "(Optional) The primary or secondary private IP address\nto associate with the Elastic IP address. If no private IP address is\nspecified, the Elastic IP address is associated with the primary private IP\naddress.",
                "args": []
            },
            {
                "name": "public_ip",
                "description": "(Optional) The Elastic IP address. This is required for EC2-Classic.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "association_id",
                "description": "The ID that represents the association of the Elastic IP\naddress with an instance.",
                "args": []
            },
            {
                "name": "allocation_id",
                "description": "As above",
                "args": []
            },
            {
                "name": "instance_id",
                "description": "As above",
                "args": []
            },
            {
                "name": "network_interface_id",
                "description": "As above",
                "args": []
            },
            {
                "name": "private_ip_address",
                "description": "As above",
                "args": []
            },
            {
                "name": "public_ip",
                "description": "As above",
                "args": []
            }
        ]
    },
    {
        "name": "aws_elb",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/elb.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "name",
                "description": "(Optional) The name of the ELB. By default generated by Terraform.",
                "args": []
            },
            {
                "name": "name_prefix",
                "description": "(Optional, Forces new resource) Creates a unique name beginning with the specified\nprefix. Conflicts with name.",
                "args": []
            },
            {
                "name": "access_logs",
                "description": "(Optional) An Access Logs block. Access Logs documented below.",
                "args": []
            },
            {
                "name": "availability_zones",
                "description": "(Required for an EC2-classic ELB) The AZ's to serve traffic in.",
                "args": []
            },
            {
                "name": "security_groups",
                "description": "(Optional) A list of security group IDs to assign to the ELB.\nOnly valid if creating an ELB within a VPC",
                "args": []
            },
            {
                "name": "subnets",
                "description": "(Required for a VPC ELB) A list of subnet IDs to attach to the ELB.",
                "args": []
            },
            {
                "name": "instances",
                "description": "(Optional) A list of instance ids to place in the ELB pool.",
                "args": []
            },
            {
                "name": "internal",
                "description": "(Optional) If true, ELB will be an internal ELB.",
                "args": []
            },
            {
                "name": "listener",
                "description": "(Required) A list of listener blocks. Listeners documented below.",
                "args": []
            },
            {
                "name": "health_check",
                "description": "(Optional) A health_check block. Health Check documented below.",
                "args": []
            },
            {
                "name": "cross_zone_load_balancing",
                "description": "(Optional) Enable cross-zone load balancing. Default: true",
                "args": []
            },
            {
                "name": "idle_timeout",
                "description": "(Optional) The time in seconds that the connection is allowed to be idle. Default: 60",
                "args": []
            },
            {
                "name": "connection_draining",
                "description": "(Optional) Boolean to enable connection draining. Default: false",
                "args": []
            },
            {
                "name": "connection_draining_timeout",
                "description": "(Optional) The time in seconds to allow for connections to drain. Default: 300",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The name of the ELB",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the ELB",
                "args": []
            },
            {
                "name": "name",
                "description": "The name of the ELB",
                "args": []
            },
            {
                "name": "dns_name",
                "description": "The DNS name of the ELB",
                "args": []
            },
            {
                "name": "instances",
                "description": "The list of instances in the ELB",
                "args": []
            },
            {
                "name": "source_security_group",
                "description": "The name of the security group that you can use as\npart of your inbound rules for your load balancer's back-end application\ninstances. Use this for Classic or Default VPC only.",
                "args": []
            },
            {
                "name": "source_security_group_id",
                "description": "The ID of the security group that you can use as\npart of your inbound rules for your load balancer's back-end application\ninstances. Only available on ELBs launched in a VPC.",
                "args": []
            },
            {
                "name": "zone_id",
                "description": "The canonical hosted zone ID of the ELB (to be used in a Route 53 Alias record)",
                "args": []
            }
        ]
    },
    {
        "name": "aws_elb_attachment",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/elb_attachment.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "elb",
                "description": "(Required) The name of the ELB.",
                "args": []
            },
            {
                "name": "instance",
                "description": "(Required) Instance ID to place in the ELB pool.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_instance",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/instance.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "ami",
                "description": "(Required) The AMI to use for the instance.",
                "args": []
            },
            {
                "name": "availability_zone",
                "description": "(Optional) The AZ to start the instance in.",
                "args": []
            },
            {
                "name": "placement_group",
                "description": "(Optional) The Placement Group to start the instance in.",
                "args": []
            },
            {
                "name": "tenancy",
                "description": "(Optional) The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for the import-instance command.",
                "args": []
            },
            {
                "name": "ebs_optimized",
                "description": "(Optional) If true, the launched EC2 instance will be\n   EBS-optimized.",
                "args": []
            },
            {
                "name": "disable_api_termination",
                "description": "(Optional) If true, enables EC2 Instance\n   Termination Protection",
                "args": []
            },
            {
                "name": "instance_initiated_shutdown_behavior",
                "description": "(Optional) Shutdown behavior for the\ninstance. Amazon defaults this to stop for EBS-backed instances and\nterminate for instance-store instances. Cannot be set on instance-store\ninstances. See Shutdown Behavior for more information.",
                "args": []
            },
            {
                "name": "instance_type",
                "description": "(Required) The type of instance to start. Updates to this field will trigger a stop/start of the EC2 instance.",
                "args": []
            },
            {
                "name": "key_name",
                "description": "(Optional) The key name to use for the instance.",
                "args": []
            },
            {
                "name": "monitoring",
                "description": "(Optional) If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)",
                "args": []
            },
            {
                "name": "security_groups",
                "description": "(Optional) A list of security group names to associate with.\n If you are creating Instances in a VPC, use vpc_security_group_ids instead.",
                "args": []
            },
            {
                "name": "vpc_security_group_ids",
                "description": "(Optional) A list of security group IDs to associate with.",
                "args": []
            },
            {
                "name": "subnet_id",
                "description": "(Optional) The VPC Subnet ID to launch in.",
                "args": []
            },
            {
                "name": "associate_public_ip_address",
                "description": "(Optional) Associate a public ip address with an instance in a VPC.  Boolean value.",
                "args": []
            },
            {
                "name": "private_ip",
                "description": "(Optional) Private IP address to associate with the\n   instance in a VPC.",
                "args": []
            },
            {
                "name": "source_dest_check",
                "description": "(Optional) Controls if traffic is routed to the instance when\nthe destination address does not match the instance. Used for NAT or VPNs. Defaults true.",
                "args": []
            },
            {
                "name": "user_data",
                "description": "(Optional) The user data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see user_data_base64 instead.",
                "args": []
            },
            {
                "name": "user_data_base64",
                "description": "(Optional) Can be used instead of user_data to pass base64-encoded binary data directly. Use this instead of user_data whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption.",
                "args": []
            },
            {
                "name": "iam_instance_profile",
                "description": "(Optional) The IAM Instance Profile to\nlaunch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the EC2 documentation, notably iam:PassRole.",
                "args": []
            },
            {
                "name": "ipv6_address_count",
                "description": "(Optional) A number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.",
                "args": []
            },
            {
                "name": "ipv6_addresses",
                "description": "(Optional) Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            },
            {
                "name": "volume_tags",
                "description": "(Optional) A mapping of tags to assign to the devices created by the instance at launch time.",
                "args": []
            },
            {
                "name": "root_block_device",
                "description": "(Optional) Customize details about the root block\ndevice of the instance. See Block Devices below for details.",
                "args": []
            },
            {
                "name": "ebs_block_device",
                "description": "(Optional) Additional EBS block devices to attach to the\ninstance.  See Block Devices below for details.",
                "args": []
            },
            {
                "name": "ephemeral_block_device",
                "description": "(Optional) Customize Ephemeral (also known as\n\"Instance Store\") volumes on the instance. See Block Devices below for details.",
                "args": []
            },
            {
                "name": "network_interface",
                "description": "(Optional) Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The instance ID.",
                "args": []
            },
            {
                "name": "availability_zone",
                "description": "The availability zone of the instance.",
                "args": []
            },
            {
                "name": "placement_group",
                "description": "The placement group of the instance.",
                "args": []
            },
            {
                "name": "key_name",
                "description": "The key name of the instance",
                "args": []
            },
            {
                "name": "public_dns",
                "description": "The public DNS name assigned to the instance. For EC2-VPC, this\nis only available if you've enabled DNS hostnames for your VPC",
                "args": []
            },
            {
                "name": "public_ip",
                "description": "The public IP address assigned to the instance, if applicable. NOTE: If you are using an aws_eip with your instance, you should refer to the EIP's address directly and not use public_ip, as this field will change after the EIP is attached.",
                "args": []
            },
            {
                "name": "ipv6_addresses",
                "description": "A list of assigned IPv6 addresses, if any",
                "args": []
            },
            {
                "name": "network_interface_id",
                "description": "The ID of the network interface that was created with the instance.",
                "args": []
            },
            {
                "name": "primary_network_interface_id",
                "description": "The ID of the instance's primary network interface.",
                "args": []
            },
            {
                "name": "private_dns",
                "description": "The private DNS name assigned to the instance. Can only be\nused inside the Amazon EC2, and only available if you've enabled DNS hostnames\nfor your VPC",
                "args": []
            },
            {
                "name": "private_ip",
                "description": "The private IP address assigned to the instance",
                "args": []
            },
            {
                "name": "security_groups",
                "description": "The associated security groups.",
                "args": []
            },
            {
                "name": "vpc_security_group_ids",
                "description": "The associated security groups in non-default VPC",
                "args": []
            },
            {
                "name": "subnet_id",
                "description": "The VPC subnet ID.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_key_pair",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/key_pair.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "key_name",
                "description": "(Optional) The name for the key pair.",
                "args": []
            },
            {
                "name": "key_name_prefix",
                "description": "(Optional) Creates a unique name beginning with the specified prefix. Conflicts with key_name.",
                "args": []
            },
            {
                "name": "public_key",
                "description": "(Required) The public key material.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "key_name",
                "description": "The key pair name.",
                "args": []
            },
            {
                "name": "fingerprint",
                "description": "The MD5 public key fingerprint as specified in section 4 of RFC 4716.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_launch_configuration",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/launch_configuration.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "name",
                "description": "(Optional) The name of the launch configuration. If you leave\nthis blank, Terraform will auto-generate a unique name.",
                "args": []
            },
            {
                "name": "name_prefix",
                "description": "(Optional) Creates a unique name beginning with the specified\nprefix. Conflicts with name.",
                "args": []
            },
            {
                "name": "image_id",
                "description": "(Required) The EC2 image ID to launch.",
                "args": []
            },
            {
                "name": "instance_type",
                "description": "(Required) The size of instance to launch.",
                "args": []
            },
            {
                "name": "iam_instance_profile",
                "description": "(Optional) The IAM instance profile to associate\n   with launched instances.",
                "args": []
            },
            {
                "name": "key_name",
                "description": "(Optional) The key name that should be used for the instance.",
                "args": []
            },
            {
                "name": "security_groups",
                "description": "(Optional) A list of associated security group IDS.",
                "args": []
            },
            {
                "name": "associate_public_ip_address",
                "description": "(Optional) Associate a public ip address with an instance in a VPC.",
                "args": []
            },
            {
                "name": "vpc_classic_link_id",
                "description": "(Optional) The ID of a ClassicLink-enabled VPC. Only applies to EC2-Classic instances. (eg. vpc-2730681a)",
                "args": []
            },
            {
                "name": "vpc_classic_link_security_groups",
                "description": "(Optional) The IDs of one or more security groups for the specified ClassicLink-enabled VPC (eg. sg-46ae3d11).",
                "args": []
            },
            {
                "name": "user_data",
                "description": "(Optional) The user data to provide when launching the instance.",
                "args": []
            },
            {
                "name": "enable_monitoring",
                "description": "(Optional) Enables/disables detailed monitoring. This is enabled by default.",
                "args": []
            },
            {
                "name": "ebs_optimized",
                "description": "(Optional) If true, the launched EC2 instance will be EBS-optimized.",
                "args": []
            },
            {
                "name": "root_block_device",
                "description": "(Optional) Customize details about the root block\ndevice of the instance. See Block Devices below for details.",
                "args": []
            },
            {
                "name": "ebs_block_device",
                "description": "(Optional) Additional EBS block devices to attach to the\ninstance.  See Block Devices below for details.",
                "args": []
            },
            {
                "name": "ephemeral_block_device",
                "description": "(Optional) Customize Ephemeral (also known as\n\"Instance Store\") volumes on the instance. See Block Devices below for details.",
                "args": []
            },
            {
                "name": "spot_price",
                "description": "(Optional) The price to use for reserving spot instances.",
                "args": []
            },
            {
                "name": "placement_tenancy",
                "description": "(Optional) The tenancy of the instance. Valid values are\n\"default\" or \"dedicated\", see AWS's Create Launch Configuration\nfor more details",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the launch configuration.",
                "args": []
            },
            {
                "name": "name",
                "description": "The name of the launch configuration.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_lb_cookie_stickiness_policy",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/lb_cookie_stickiness_policy.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the stickiness policy.",
                "args": []
            },
            {
                "name": "load_balancer",
                "description": "(Required) The load balancer to which the policy\nshould be attached.",
                "args": []
            },
            {
                "name": "lb_port",
                "description": "(Required) The load balancer port to which the policy\nshould be applied. This must be an active listener on the load\nbalancer.",
                "args": []
            },
            {
                "name": "cookie_expiration_period",
                "description": "(Optional) The time period after which\nthe session cookie should be considered stale, expressed in seconds.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the policy.",
                "args": []
            },
            {
                "name": "name",
                "description": "The name of the stickiness policy.",
                "args": []
            },
            {
                "name": "load_balancer",
                "description": "The load balancer to which the policy is attached.",
                "args": []
            },
            {
                "name": "lb_port",
                "description": "The load balancer port to which the policy is applied.",
                "args": []
            },
            {
                "name": "cookie_expiration_period",
                "description": "The time period after which the session cookie is considered stale, expressed in seconds.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_lb_ssl_negotiation_policy",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/lb_ssl_negotiation_policy.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the SSL negotiation policy.",
                "args": []
            },
            {
                "name": "load_balancer",
                "description": "(Required) The load balancer to which the policy\nshould be attached.",
                "args": []
            },
            {
                "name": "lb_port",
                "description": "(Required) The load balancer port to which the policy\nshould be applied. This must be an active listener on the load\nbalancer.",
                "args": []
            },
            {
                "name": "attribute",
                "description": "(Optional) An SSL Negotiation policy attribute. Each has two properties:\nname - The name of the attribute\nvalue - The value of the attribute",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the policy.",
                "args": []
            },
            {
                "name": "name",
                "description": "The name of the stickiness policy.",
                "args": []
            },
            {
                "name": "load_balancer",
                "description": "The load balancer to which the policy is attached.",
                "args": []
            },
            {
                "name": "lb_port",
                "description": "The load balancer port to which the policy is applied.",
                "args": []
            },
            {
                "name": "attribute",
                "description": "The SSL Negotiation policy attributes.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_load_balancer_backend_server_policy",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/load_balancer_backend_server_policy.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "load_balancer_name",
                "description": "(Required) The load balancer to attach the policy to.",
                "args": []
            },
            {
                "name": "policy_names",
                "description": "(Required) List of Policy Names to apply to the backend server.",
                "args": []
            },
            {
                "name": "instance_port",
                "description": "(Required) The instance port to apply the policy to.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the policy.",
                "args": []
            },
            {
                "name": "load_balancer_name",
                "description": "The load balancer on which the policy is defined.",
                "args": []
            },
            {
                "name": "instance_port",
                "description": "The backend port the policies are applied to",
                "args": []
            }
        ]
    },
    {
        "name": "aws_load_balancer_listener_policy",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/load_balancer_listener_policy.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "load_balancer_name",
                "description": "(Required) The load balancer to attach the policy to.",
                "args": []
            },
            {
                "name": "load_balancer_port",
                "description": "(Required) The load balancer listener port to apply the policy to.",
                "args": []
            },
            {
                "name": "policy_names",
                "description": "(Required) List of Policy Names to apply to the backend server.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the policy.",
                "args": []
            },
            {
                "name": "load_balancer_name",
                "description": "The load balancer on which the policy is defined.",
                "args": []
            },
            {
                "name": "load_balancer_port",
                "description": "The load balancer listener port the policies are applied to",
                "args": []
            }
        ]
    },
    {
        "name": "aws_load_balancer_policy",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/load_balancer_policy.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "load_balancer_name",
                "description": "(Required) The load balancer on which the policy is defined.",
                "args": []
            },
            {
                "name": "policy_name",
                "description": "(Required) The name of the load balancer policy.",
                "args": []
            },
            {
                "name": "policy_type_name",
                "description": "(Required) The policy type.",
                "args": []
            },
            {
                "name": "policy_attribute",
                "description": "(Optional) Policy attribute to apply to the policy.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the policy.",
                "args": []
            },
            {
                "name": "policy_name",
                "description": "The name of the stickiness policy.",
                "args": []
            },
            {
                "name": "policy_type_name",
                "description": "The policy type of the policy.",
                "args": []
            },
            {
                "name": "load_balancer_name",
                "description": "The load balancer on which the policy is defined.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_placement_group",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/placement_group.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the placement group.",
                "args": []
            },
            {
                "name": "strategy",
                "description": "(Required) The placement strategy.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The name of the placement group.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_proxy_protocol_policy",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/proxy_protocol_policy.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "load_balancer",
                "description": "(Required) The load balancer to which the policy\nshould be attached.",
                "args": []
            },
            {
                "name": "instance_ports",
                "description": "(Required) List of instance ports to which the policy\nshould be applied. This can be specified if the protocol is SSL or TCP.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the policy.",
                "args": []
            },
            {
                "name": "load_balancer",
                "description": "The load balancer to which the policy is attached.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_spot_datafeed_subscription",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/spot_datafeed_subscription.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "bucket",
                "description": "(Required) The Amazon S3 bucket in which to store the Spot instance data feed.",
                "args": []
            },
            {
                "name": "prefix",
                "description": "(Optional) Path of folder inside bucket to place spot pricing data.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_spot_fleet_request",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/spot_fleet_request.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "iam_fleet_role",
                "description": "(Required) Grants the Spot fleet permission to terminate\nSpot instances on your behalf when you cancel its Spot fleet request using\nCancelSpotFleetRequests or when the Spot fleet request expires, if you set\nterminateInstancesWithExpiration.",
                "args": []
            },
            {
                "name": "replace_unhealthy_instances",
                "description": "(Optional) Indicates whether Spot fleet should replace unhealthy instances. Default false.",
                "args": []
            },
            {
                "name": "launch_specification",
                "description": "Used to define the launch configuration of the\nspot-fleet request. Can be specified multiple times to define different bids\nacross different markets and instance types.\n  Note: This takes in similar but not\n  identical inputs as aws_instance.  There are limitations on\n  what you can specify. See the list of officially supported inputs in the\n  reference documentation. Any normal aws_instance parameter that corresponds to those inputs may be used.",
                "args": []
            },
            {
                "name": "spot_price",
                "description": "(Required) The bid price per unit hour.",
                "args": []
            },
            {
                "name": "wait_for_fulfillment",
                "description": "(Optional; Default: false) If set, Terraform will\nwait for the Spot Request to be fulfilled, and will throw an error if the\ntimeout of 10m is reached.",
                "args": []
            },
            {
                "name": "target_capacity",
                "description": "The number of units to request. You can choose to set the\ntarget capacity in terms of instances or a performance characteristic that is\nimportant to your application workload, such as vCPUs, memory, or I/O.",
                "args": []
            },
            {
                "name": "allocation_strategy",
                "description": "Indicates how to allocate the target capacity across\nthe Spot pools specified by the Spot fleet request. The default is\nlowestPrice.",
                "args": []
            },
            {
                "name": "excess_capacity_termination_policy",
                "description": "Indicates whether running Spot\ninstances should be terminated if the target capacity of the Spot fleet\nrequest is decreased below the current size of the Spot fleet.",
                "args": []
            },
            {
                "name": "terminate_instances_with_expiration",
                "description": "Indicates whether running Spot\ninstances should be terminated when the Spot fleet request expires.",
                "args": []
            },
            {
                "name": "instance_interruption_behavior",
                "description": "(Optional) Indicates whether a Spot\ninstance stops or terminates when it is interrupted. Default is\nterminate.",
                "args": []
            },
            {
                "name": "valid_until",
                "description": "The end date and time of the request, in UTC ISO8601 format\n(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance\nrequests are placed or enabled to fulfill the request. Defaults to 24 hours.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The Spot fleet request ID",
                "args": []
            },
            {
                "name": "spot_request_state",
                "description": "The state of the Spot fleet request.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_spot_instance_request",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/spot_instance_request.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "spot_price",
                "description": "(Required) The price to request on the spot market.",
                "args": []
            },
            {
                "name": "wait_for_fulfillment",
                "description": "(Optional; Default: false) If set, Terraform will\nwait for the Spot Request to be fulfilled, and will throw an error if the\ntimeout of 10m is reached.",
                "args": []
            },
            {
                "name": "spot_type",
                "description": "(Optional; Default: \"persistent\") If set to \"one-time\", after\nthe instance is terminated, the spot request will be closed. Also, Terraform\ncan't manage one-time spot requests, just launch them.",
                "args": []
            },
            {
                "name": "launch_group",
                "description": "(Optional) A launch group is a group of spot instances that launch together and terminate together.\nIf left empty instances are launched and terminated individually.",
                "args": []
            },
            {
                "name": "block_duration_minutes",
                "description": "(Optional) The required duration for the Spot instances, in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).\nThe duration period starts as soon as your Spot instance receives its instance ID. At the end of the duration period, Amazon EC2 marks the Spot instance for termination and provides a Spot instance termination notice, which gives the instance a two-minute warning before it terminates.\nNote that you can't specify an Availability Zone group or a launch group if you specify a duration.",
                "args": []
            },
            {
                "name": "instance_interruption_behavior",
                "description": "(Optional) Indicates whether a Spot instance stops or terminates when it is interrupted. Default is terminate as this is the current AWS behaviour.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The Spot Instance Request ID.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_volume_attachment",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/volume_attachment.html",
        "groupName": "EC2 Resources",
        "args": [
            {
                "name": "device_name",
                "description": "(Required) The device name to expose to the instance (for\nexample, /dev/sdh or xvdh)",
                "args": []
            },
            {
                "name": "instance_id",
                "description": "(Required) ID of the Instance to attach to",
                "args": []
            },
            {
                "name": "volume_id",
                "description": "(Required) ID of the Volume to be attached",
                "args": []
            },
            {
                "name": "force_detach",
                "description": "(Optional, Boolean) Set to true if you want to force the\nvolume to detach. Useful if previous attempts failed, but use this option only\nas a last resort, as this can result in data loss. See\nDetaching an Amazon EBS Volume from an Instance for more information.",
                "args": []
            },
            {
                "name": "skip_destroy",
                "description": "(Optional, Boolean) Set this to true if you do not wish\nto detach the volume from the instance to which it is attached at destroy\ntime, and instead just remove the attachment from Terraform state. This is\nuseful when destroying an instance which has volumes created by some other\nmeans attached.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "device_name",
                "description": "The device name exposed to the instance",
                "args": []
            },
            {
                "name": "instance_id",
                "description": "ID of the Instance",
                "args": []
            },
            {
                "name": "volume_id",
                "description": "ID of the Volume",
                "args": []
            }
        ]
    },
    {
        "name": "aws_lb",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/lb.html",
        "groupName": "Load Balancing Resources",
        "args": [
            {
                "name": "name",
                "description": "(Optional) The name of the LB. This name must be unique within your AWS account, can have a maximum of 32 characters,\nmust contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen. If not specified,\nTerraform will autogenerate a name beginning with tf-lb.",
                "args": []
            },
            {
                "name": "name_prefix",
                "description": "(Optional) Creates a unique name beginning with the specified prefix. Conflicts with name.",
                "args": []
            },
            {
                "name": "internal",
                "description": "(Optional) If true, the LB will be internal.",
                "args": []
            },
            {
                "name": "load_balancer_type",
                "description": "(Optional) The type of load balancer to create. Possible values are application or network. The default value is application.",
                "args": []
            },
            {
                "name": "security_groups",
                "description": "(Optional) A list of security group IDs to assign to the LB. Only valid for Load Balancers of type application.",
                "args": []
            },
            {
                "name": "access_logs",
                "description": "(Optional) An Access Logs block. Access Logs documented below.",
                "args": []
            },
            {
                "name": "subnets",
                "description": "(Optional) A list of subnet IDs to attach to the LB. Subnets\ncannot be updated for Load Balancers of type network. Changing this value\nwill for load balancers of type network will force a recreation of the resource.",
                "args": []
            },
            {
                "name": "subnet_mapping",
                "description": "(Optional) A subnet mapping block as documented below.",
                "args": []
            },
            {
                "name": "idle_timeout",
                "description": "(Optional) The time in seconds that the connection is allowed to be idle. Default: 60.",
                "args": []
            },
            {
                "name": "enable_deletion_protection",
                "description": "(Optional) If true, deletion of the load balancer will be disabled via\n the AWS API. This will prevent Terraform from deleting the load balancer. Defaults to false.",
                "args": []
            },
            {
                "name": "ip_address_type",
                "description": "(Optional) The type of IP addresses used by the subnets for your load balancer. The possible values are ipv4 and dualstack",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ARN of the load balancer (matches arn).",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the load balancer (matches id).",
                "args": []
            },
            {
                "name": "arn_suffix",
                "description": "The ARN suffix for use with CloudWatch Metrics.",
                "args": []
            },
            {
                "name": "dns_name",
                "description": "The DNS name of the load balancer.",
                "args": []
            },
            {
                "name": "canonical_hosted_zone_id",
                "description": "The canonical hosted zone ID of the load balancer.",
                "args": []
            },
            {
                "name": "zone_id",
                "description": "The canonical hosted zone ID of the load balancer (to be used in a Route 53 Alias record).",
                "args": []
            }
        ]
    },
    {
        "name": "aws_lb_listener",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/lb_listener.html",
        "groupName": "Load Balancing Resources",
        "args": [
            {
                "name": "load_balancer_arn",
                "description": "(Required, Forces New Resource) The ARN of the load balancer.",
                "args": []
            },
            {
                "name": "port",
                "description": "(Required) The port on which the load balancer is listening.",
                "args": []
            },
            {
                "name": "protocol",
                "description": "(Optional) The protocol for connections from clients to the load balancer. Valid values are TCP, HTTP and HTTPS. Defaults to HTTP.",
                "args": []
            },
            {
                "name": "ssl_policy",
                "description": "(Optional) The name of the SSL Policy for the listener. Required if protocol is HTTPS.",
                "args": []
            },
            {
                "name": "certificate_arn",
                "description": "(Optional) The ARN of the SSL server certificate. Exactly one certificate is required if the protocol is HTTPS.",
                "args": []
            },
            {
                "name": "default_action",
                "description": "(Required) An Action block. Action blocks are documented below.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ARN of the listener (matches arn)",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the listener (matches id)",
                "args": []
            }
        ]
    },
    {
        "name": "aws_lb_listener_rule",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/lb_listener_rule.html",
        "groupName": "Load Balancing Resources",
        "args": [
            {
                "name": "listener_arn",
                "description": "(Required, Forces New Resource) The ARN of the listener to which to attach the rule.",
                "args": []
            },
            {
                "name": "priority",
                "description": "(Required) The priority for the rule. A listener can't have multiple rules with the same priority.",
                "args": []
            },
            {
                "name": "action",
                "description": "(Required) An Action block. Action blocks are documented below.",
                "args": []
            },
            {
                "name": "condition",
                "description": "(Required) A Condition block. Condition blocks are documented below.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ARN of the rule (matches arn)",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the rule (matches id)",
                "args": []
            }
        ]
    },
    {
        "name": "aws_lb_target_group",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/lb_target_group.html",
        "groupName": "Load Balancing Resources",
        "args": [
            {
                "name": "name",
                "description": "(Optional, Forces new resource) The name of the target group. If omitted, Terraform will assign a random, unique name.",
                "args": []
            },
            {
                "name": "name_prefix",
                "description": "(Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name. Cannot be longer than 6 characters.",
                "args": []
            },
            {
                "name": "port",
                "description": "(Required) The port on which targets receive traffic, unless overridden when registering a specific target.",
                "args": []
            },
            {
                "name": "protocol",
                "description": "(Required) The protocol to use for routing traffic to the targets.",
                "args": []
            },
            {
                "name": "vpc_id",
                "description": "(Required) The identifier of the VPC in which to create the target group.",
                "args": []
            },
            {
                "name": "deregistration_delay",
                "description": "(Optional) The amount time for Elastic Load Balancing to wait before changing the state of a deregistering target from draining to unused. The range is 0-3600 seconds. The default value is 300 seconds.",
                "args": []
            },
            {
                "name": "stickiness",
                "description": "(Optional) A Stickiness block. Stickiness blocks are documented below. stickiness is only valid if used with Load Balancers of type Application",
                "args": []
            },
            {
                "name": "health_check",
                "description": "(Optional) A Health Check block. Health Check blocks are documented below.",
                "args": []
            },
            {
                "name": "target_type",
                "description": "(Optional) The type of target that you must specify when registering targets with this target group.\nThe possible values are instance (targets are specified by instance ID) or ip (targets are specified by IP address).\nThe default is instance. Note that you can't specify targets for a target group using both instance IDs and IP addresses.\nIf the target type is ip, specify IP addresses from the subnets of the virtual private cloud (VPC) for the target group,\nthe RFC 1918 range (10.0.0.0/8, 172.16.0.0/12, and 192.168.0.0/16), and the RFC 6598 range (100.64.0.0/10).\nYou can't specify publicly routable IP addresses.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ARN of the Target Group (matches arn)",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the Target Group (matches id)",
                "args": []
            },
            {
                "name": "arn_suffix",
                "description": "The ARN suffix for use with CloudWatch Metrics.",
                "args": []
            },
            {
                "name": "name",
                "description": "The name of the Target Group",
                "args": []
            }
        ]
    },
    {
        "name": "aws_lb_target_group_attachment",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/lb_target_group_attachment.html",
        "groupName": "Load Balancing Resources",
        "args": [
            {
                "name": "target_group_arn",
                "description": "(Required) The ARN of the target group with which to register targets",
                "args": []
            },
            {
                "name": "target_id",
                "description": "(Required) The ID of the target. This is the Instance ID for an instance, or the container ID for an ECS container. If the target type is ip, specify an IP address.",
                "args": []
            },
            {
                "name": "port",
                "description": "(Optional) The port on which targets receive traffic.",
                "args": []
            },
            {
                "name": "availability_zone",
                "description": "(Optional) The Availability Zone where the IP address of the target is to be registered.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "A unique identifier for the attachment",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ecr_lifecycle_policy",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/ecr_lifecycle_policy.html",
        "groupName": "ECS Resources",
        "args": [
            {
                "name": "repository",
                "description": "(Required) Name of the repository to apply the policy.",
                "args": []
            },
            {
                "name": "policy",
                "description": "(Required) The policy document. This is a JSON formatted string. See more details about Policy Parameters in the official AWS docs.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "repository",
                "description": "The name of the repository.",
                "args": []
            },
            {
                "name": "registry_id",
                "description": "The registry ID where the repository was created.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ecr_repository",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/ecr_repository.html",
        "groupName": "ECS Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) Name of the repository.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "Full ARN of the repository.",
                "args": []
            },
            {
                "name": "name",
                "description": "The name of the repository.",
                "args": []
            },
            {
                "name": "registry_id",
                "description": "The registry ID where the repository was created.",
                "args": []
            },
            {
                "name": "repository_url",
                "description": "The URL of the repository (in the form aws_account_id.dkr.ecr.region.amazonaws.com/repositoryName",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ecr_repository_policy",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/ecr_repository_policy.html",
        "groupName": "ECS Resources",
        "args": [
            {
                "name": "repository",
                "description": "(Required) Name of the repository to apply the policy.",
                "args": []
            },
            {
                "name": "policy",
                "description": "(Required) The policy document. This is a JSON formatted string.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "repository",
                "description": "The name of the repository.",
                "args": []
            },
            {
                "name": "registry_id",
                "description": "The registry ID where the repository was created.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ecs_cluster",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/ecs_cluster.html",
        "groupName": "ECS Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the cluster (up to 255 letters, numbers, hyphens, and underscores)",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The Amazon Resource Name (ARN) that identifies the cluster",
                "args": []
            },
            {
                "name": "arn",
                "description": "The Amazon Resource Name (ARN) that identifies the cluster",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ecs_service",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/ecs_service.html",
        "groupName": "ECS Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the service (up to 255 letters, numbers, hyphens, and underscores)",
                "args": []
            },
            {
                "name": "task_definition",
                "description": "(Required) The family and revision (family:revision) or full ARN of the task definition that you want to run in your service.",
                "args": []
            },
            {
                "name": "desired_count",
                "description": "(Required) The number of instances of the task definition to place and keep running",
                "args": []
            },
            {
                "name": "launch_type",
                "description": "(Optional) The launch type on which to run your service. The valid values are EC2 and FARGATE. Defaults to EC2.",
                "args": []
            },
            {
                "name": "cluster",
                "description": "(Optional) ARN of an ECS cluster",
                "args": []
            },
            {
                "name": "iam_role",
                "description": "(Optional) The ARN of IAM role that allows your Amazon ECS container agent to make calls to your load balancer on your behalf. This parameter is only required if you are using a load balancer with your service.",
                "args": []
            },
            {
                "name": "deployment_maximum_percent",
                "description": "(Optional) The upper limit (as a percentage of the service's desiredCount) of the number of running tasks that can be running in a service during a deployment.",
                "args": []
            },
            {
                "name": "deployment_minimum_healthy_percent",
                "description": "(Optional) The lower limit (as a percentage of the service's desiredCount) of the number of running tasks that must remain running and healthy in a service during a deployment.",
                "args": []
            },
            {
                "name": "placement_strategy",
                "description": "(Optional) Service level strategy rules that are taken\ninto consideration during task placement. The maximum number of\nplacement_strategy blocks is 5. Defined below.",
                "args": []
            },
            {
                "name": "health_check_grace_period_seconds",
                "description": "(Optional) Seconds to ignore failing load balancer health checks on newly instantiated tasks to prevent premature shutdown, up to 1800. Only valid for services configured to use load balancers.",
                "args": []
            },
            {
                "name": "load_balancer",
                "description": "(Optional) A load balancer block. Load balancers documented below.",
                "args": []
            },
            {
                "name": "placement_constraints",
                "description": "(Optional) rules that are taken into consideration during task placement. Maximum number of\nplacement_constraints is 10. Defined below.",
                "args": []
            },
            {
                "name": "network_configuration",
                "description": "(Optional) The network configuration for the service. This parameter is required for task definitions that use the awsvpc network mode to receive their own Elastic Network Interface, and it is not supported for other network modes.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The Amazon Resource Name (ARN) that identifies the service",
                "args": []
            },
            {
                "name": "name",
                "description": "The name of the service",
                "args": []
            },
            {
                "name": "cluster",
                "description": "The Amazon Resource Name (ARN) of cluster which the service runs on",
                "args": []
            },
            {
                "name": "iam_role",
                "description": "The ARN of IAM role used for ELB",
                "args": []
            },
            {
                "name": "desired_count",
                "description": "The number of instances of the task definition",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ecs_task_definition",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html",
        "groupName": "ECS Resources",
        "args": [
            {
                "name": "family",
                "description": "(Required) A unique name for your task definition.",
                "args": []
            },
            {
                "name": "container_definitions",
                "description": "(Required) A list of valid [container definitions]\n(http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ContainerDefinition.html) provided as a\nsingle valid JSON document. Please note that you should only provide values that are part of the container\ndefinition document. For a detailed description of what parameters are available, see the [Task Definition Parameters]\n(https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html) section from the\nofficial Developer Guide.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "Full ARN of the Task Definition (including both family and revision).",
                "args": []
            },
            {
                "name": "family",
                "description": "The family of the Task Definition.",
                "args": []
            },
            {
                "name": "revision",
                "description": "The revision of the task in a particular family.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_efs_file_system",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/efs_file_system.html",
        "groupName": "EFS Resources",
        "args": [
            {
                "name": "creation_token",
                "description": "(Optional) A unique name (a maximum of 64 characters are allowed)\nused as reference when creating the Elastic File System to ensure idempotent file\nsystem creation. By default generated by Terraform. See [Elastic File System]\n(http://docs.aws.amazon.com/efs/latest/ug/) user guide for more information.",
                "args": []
            },
            {
                "name": "reference_name",
                "description": "DEPRECATED (Optional) A reference name used when creating the\nCreation Token which Amazon EFS uses to ensure idempotent file system creation. By\ndefault generated by Terraform.",
                "args": []
            },
            {
                "name": "performance_mode",
                "description": "(Optional) The file system performance mode. Can be either\n\"generalPurpose\" or \"maxIO\" (Default: \"generalPurpose\").",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the file system.",
                "args": []
            },
            {
                "name": "encrypted",
                "description": "(Optional) If true, the disk will be encrypted.",
                "args": []
            },
            {
                "name": "kms_key_id",
                "description": "(Optional) The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID that identifies the file system (e.g. fs-ccfc0d65).",
                "args": []
            },
            {
                "name": "kms_key_id",
                "description": "The ARN for the KMS encryption key.",
                "args": []
            },
            {
                "name": "dns_name",
                "description": "The DNS name for the filesystem per documented convention.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_efs_mount_target",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/efs_mount_target.html",
        "groupName": "EFS Resources",
        "args": [
            {
                "name": "file_system_id",
                "description": "(Required) The ID of the file system for which the mount target is intended.",
                "args": []
            },
            {
                "name": "subnet_id",
                "description": "(Required) The ID of the subnet to add the mount target in.",
                "args": []
            },
            {
                "name": "ip_address",
                "description": "(Optional) The address (within the address range of the specified subnet) at\nwhich the file system may be mounted via the mount target.",
                "args": []
            },
            {
                "name": "security_groups",
                "description": "(Optional) A list of up to 5 VPC security group IDs (that must\nbe for the same VPC as subnet specified) in effect for the mount target.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the mount target.",
                "args": []
            },
            {
                "name": "dns_name",
                "description": "The DNS name for the given subnet/AZ per documented convention.",
                "args": []
            },
            {
                "name": "network_interface_id",
                "description": "The ID of the network interface that Amazon EFS created when it created the mount target.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_elasticache_cluster",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/elasticache_cluster.html",
        "groupName": "ElastiCache Resources",
        "args": [
            {
                "name": "cluster_id",
                "description": "– (Required) Group identifier. ElastiCache converts\nthis name to lowercase",
                "args": []
            },
            {
                "name": "engine",
                "description": "– (Required) Name of the cache engine to be used for this cache cluster.\nValid values for this parameter are memcached or redis",
                "args": []
            },
            {
                "name": "engine_version",
                "description": "– (Optional) Version number of the cache engine to be used.\nSee Selecting a Cache Engine and Version\nin the AWS Documentation center for supported versions",
                "args": []
            },
            {
                "name": "maintenance_window",
                "description": "– (Optional) Specifies the weekly time range for when maintenance\non the cache cluster is performed. The format is ddd:hh24:middd:hh24:mi (24H Clock UTC).\nThe minimum maintenance window is a 60 minute period. Example: sun:05:00-sun:09:00",
                "args": []
            },
            {
                "name": "node_type",
                "description": "– (Required) The compute and memory capacity of the nodes. See\nAvailable Cache Node Types for\nsupported node types",
                "args": []
            },
            {
                "name": "num_cache_nodes",
                "description": "– (Required) The initial number of cache nodes that the\ncache cluster will have. For Redis, this value must be 1. For Memcache, this\nvalue must be between 1 and 20. If this number is reduced on subsequent runs,\nthe highest numbered nodes will be removed.",
                "args": []
            },
            {
                "name": "parameter_group_name",
                "description": "– (Required) Name of the parameter group to associate\nwith this cache cluster",
                "args": []
            },
            {
                "name": "port",
                "description": "– (Required) The port number on which each of the cache nodes will\naccept connections. For Memcache the default is 11211, and for Redis the default port is 6379.",
                "args": []
            },
            {
                "name": "subnet_group_name",
                "description": "– (Optional, VPC only) Name of the subnet group to be used\nfor the cache cluster.",
                "args": []
            },
            {
                "name": "security_group_names",
                "description": "– (Optional, EC2 Classic only) List of security group\nnames to associate with this cache cluster",
                "args": []
            },
            {
                "name": "security_group_ids",
                "description": "– (Optional, VPC only) One or more VPC security groups associated\nwith the cache cluster",
                "args": []
            },
            {
                "name": "apply_immediately",
                "description": "(Optional) Specifies whether any database modifications\n   are applied immediately, or during the next maintenance window. Default is\n   false. See Amazon ElastiCache Documentation for more information.\n   (Available since v0.6.0)",
                "args": []
            },
            {
                "name": "snapshot_arns",
                "description": "– (Optional) A singleelement string list containing an\nAmazon Resource Name (ARN) of a Redis RDB snapshot file stored in Amazon S3.\nExample: arn:aws:s3:::my_bucket/snapshot1.rdb",
                "args": []
            },
            {
                "name": "snapshot_name",
                "description": "(Optional) The name of a snapshot from which to restore data into the new node group.  Changing the snapshot_name forces a new resource.",
                "args": []
            },
            {
                "name": "snapshot_window",
                "description": "(Optional, Redis only) The daily time range (in UTC) during which ElastiCache will\nbegin taking a daily snapshot of your cache cluster. Example: 05:00-09:00",
                "args": []
            },
            {
                "name": "snapshot_retention_limit",
                "description": "(Optional, Redis only) The number of days for which ElastiCache will\nretain automatic cache cluster snapshots before deleting them. For example, if you set\nSnapshotRetentionLimit to 5, then a snapshot that was taken today will be retained for 5 days\nbefore being deleted. If the value of SnapshotRetentionLimit is set to zero (0), backups are turned off.\nPlease note that setting a snapshot_retention_limit is not supported on cache.t1.micro or cache.t2.* cache nodes",
                "args": []
            },
            {
                "name": "notification_topic_arn",
                "description": "– (Optional) An Amazon Resource Name (ARN) of an\nSNS topic to send ElastiCache notifications to. Example:\narn:aws:sns:useast-1:012345678999:my_sns_topic",
                "args": []
            },
            {
                "name": "az_mode",
                "description": "(Optional, Memcached only) Specifies whether the nodes in this Memcached node group are created in a single Availability Zone or created across multiple Availability Zones in the cluster's region. Valid values for this parameter are single-az or cross-az, default is single-az. If you want to choose cross-az, num_cache_nodes must be greater than 1",
                "args": []
            },
            {
                "name": "availability_zone",
                "description": "(Optional) The Availability Zone for the cache cluster. If you want to create cache nodes in multi-az, use availability_zones",
                "args": []
            },
            {
                "name": "availability_zones",
                "description": "(Optional, Memcached only) List of Availability Zones in which the cache nodes will be created. If you want to create cache nodes in single-az, use availability_zone",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "cache_nodes",
                "description": "List of node objects including id, address, port and availability_zone.\n Referenceable e.g. as ${aws_elasticache_cluster.bar.cache_nodes.0.address}",
                "args": []
            },
            {
                "name": "configuration_endpoint",
                "description": "(Memcached only) The configuration endpoint to allow host discovery.",
                "args": []
            },
            {
                "name": "cluster_address",
                "description": "(Memcached only) The DNS name of the cache cluster without the port appended.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_elasticache_parameter_group",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/elasticache_parameter_group.html",
        "groupName": "ElastiCache Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the ElastiCache parameter group.",
                "args": []
            },
            {
                "name": "family",
                "description": "(Required) The family of the ElastiCache parameter group.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) The description of the ElastiCache parameter group. Defaults to \"Managed by Terraform\".",
                "args": []
            },
            {
                "name": "parameter",
                "description": "(Optional) A list of ElastiCache parameters to apply.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ElastiCache parameter group name.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_elasticache_replication_group",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/elasticache_replication_group.html",
        "groupName": "ElastiCache Resources",
        "args": [
            {
                "name": "replication_group_id",
                "description": "– (Required) The replication group identifier. This parameter is stored as a lowercase string.",
                "args": []
            },
            {
                "name": "replication_group_description",
                "description": "– (Required) A usercreated description for the replication group.",
                "args": []
            },
            {
                "name": "number_cache_clusters",
                "description": "(Required) The number of cache clusters this replication group will have.\nIf Multi-AZ is enabled , the value of this parameter must be at least 2. Changing this number will force a new resource",
                "args": []
            },
            {
                "name": "node_type",
                "description": "(Required) The compute and memory capacity of the nodes in the node group.",
                "args": []
            },
            {
                "name": "automatic_failover_enabled",
                "description": "(Optional) Specifies whether a read-only replica will be automatically promoted to read/write primary if the existing primary fails. Defaults to false.",
                "args": []
            },
            {
                "name": "auto_minor_version_upgrade",
                "description": "(Optional) Specifies whether a minor engine upgrades will be applied automatically to the underlying Cache Cluster instances during the maintenance window. Defaults to true.",
                "args": []
            },
            {
                "name": "availability_zones",
                "description": "(Optional) A list of EC2 availability zones in which the replication group's cache clusters will be created. The order of the availability zones in the list is not important.",
                "args": []
            },
            {
                "name": "engine",
                "description": "(Optional) The name of the cache engine to be used for the clusters in this replication group. e.g. redis",
                "args": []
            },
            {
                "name": "at_rest_encryption_enabled",
                "description": "(Optional) Whether to enable encryption at rest.",
                "args": []
            },
            {
                "name": "transit_encryption_enabled",
                "description": "(Optional) Whether to enable encryption in transit.",
                "args": []
            },
            {
                "name": "auth_token",
                "description": "(Optional) The password used to access a password protected server. Can be specified only if transit_encryption_enabled = true.",
                "args": []
            },
            {
                "name": "engine_version",
                "description": "(Optional) The version number of the cache engine to be used for the cache clusters in this replication group.",
                "args": []
            },
            {
                "name": "parameter_group_name",
                "description": "(Optional) The name of the parameter group to associate with this replication group. If this argument is omitted, the default cache parameter group for the specified engine is used.",
                "args": []
            },
            {
                "name": "port",
                "description": "– (Required) The port number on which each of the cache nodes will accept connections. For Memcache the default is 11211, and for Redis the default port is 6379.",
                "args": []
            },
            {
                "name": "subnet_group_name",
                "description": "(Optional) The name of the cache subnet group to be used for the replication group.",
                "args": []
            },
            {
                "name": "security_group_names",
                "description": "(Optional) A list of cache security group names to associate with this replication group.",
                "args": []
            },
            {
                "name": "security_group_ids",
                "description": "(Optional) One or more Amazon VPC security groups associated with this replication group. Use this parameter only when you are creating a replication group in an Amazon Virtual Private Cloud",
                "args": []
            },
            {
                "name": "snapshot_arns",
                "description": "– (Optional) A singleelement string list containing an\nAmazon Resource Name (ARN) of a Redis RDB snapshot file stored in Amazon S3.\nExample: arn:aws:s3:::my_bucket/snapshot1.rdb",
                "args": []
            },
            {
                "name": "snapshot_name",
                "description": "(Optional) The name of a snapshot from which to restore data into the new node group. Changing the snapshot_name forces a new resource.",
                "args": []
            },
            {
                "name": "maintenance_window",
                "description": "– (Optional) Specifies the weekly time range for when maintenance\non the cache cluster is performed. The format is ddd:hh24:middd:hh24:mi (24H Clock UTC).\nThe minimum maintenance window is a 60 minute period. Example: sun:05:00-sun:09:00",
                "args": []
            },
            {
                "name": "notification_topic_arn",
                "description": "– (Optional) An Amazon Resource Name (ARN) of an\nSNS topic to send ElastiCache notifications to. Example:\narn:aws:sns:useast-1:012345678999:my_sns_topic",
                "args": []
            },
            {
                "name": "snapshot_window",
                "description": "(Optional, Redis only) The daily time range (in UTC) during which ElastiCache will\nbegin taking a daily snapshot of your cache cluster. The minimum snapshot window is a 60 minute period. Example: 05:00-09:00",
                "args": []
            },
            {
                "name": "snapshot_retention_limit",
                "description": "(Optional, Redis only) The number of days for which ElastiCache will\nretain automatic cache cluster snapshots before deleting them. For example, if you set\nSnapshotRetentionLimit to 5, then a snapshot that was taken today will be retained for 5 days\nbefore being deleted. If the value of SnapshotRetentionLimit is set to zero (0), backups are turned off.\nPlease note that setting a snapshot_retention_limit is not supported on cache.t1.micro or cache.t2.* cache nodes",
                "args": []
            },
            {
                "name": "apply_immediately",
                "description": "(Optional) Specifies whether any modifications are applied immediately, or during the next maintenance window. Default is false.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource",
                "args": []
            },
            {
                "name": "cluster_mode",
                "description": "(Optional) Create a native redis cluster. automatic_failover_enabled must be set to true. Cluster Mode documented below. Only 1 cluster_mode block is allowed.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the ElastiCache Replication Group.",
                "args": []
            },
            {
                "name": "configuration_endpoint_address",
                "description": "The address of the replication group configuration endpoint when cluster mode is enabled.",
                "args": []
            },
            {
                "name": "primary_endpoint_address",
                "description": "(Redis only) The address of the endpoint for the primary node in the replication group, if the cluster mode is disabled.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_elasticache_security_group",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/elasticache_security_group.html",
        "groupName": "ElastiCache Resources",
        "args": [
            {
                "name": "name",
                "description": "– (Required) Name for the cache security group. This value is stored as a lowercase string.",
                "args": []
            },
            {
                "name": "description",
                "description": "– (Optional) description for the cache security group. Defaults to \"Managed by Terraform\".",
                "args": []
            },
            {
                "name": "security_group_names",
                "description": "– (Required) List of EC2 security group names to be\nauthorized for ingress to the cache security group",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "description",
                "description": "",
                "args": []
            },
            {
                "name": "name",
                "description": "",
                "args": []
            },
            {
                "name": "security_group_names",
                "description": "",
                "args": []
            }
        ]
    },
    {
        "name": "aws_elasticache_subnet_group",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/elasticache_subnet_group.html",
        "groupName": "ElastiCache Resources",
        "args": [
            {
                "name": "name",
                "description": "– (Required) Name for the cache subnet group. Elasticache converts this name to lowercase.",
                "args": []
            },
            {
                "name": "description",
                "description": "– (Optional) Description for the cache subnet group. Defaults to \"Managed by Terraform\".",
                "args": []
            },
            {
                "name": "subnet_ids",
                "description": "– (Required) List of VPC Subnet IDs for the cache subnet group",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "description",
                "description": "",
                "args": []
            },
            {
                "name": "name",
                "description": "",
                "args": []
            },
            {
                "name": "subnet_ids",
                "description": "",
                "args": []
            }
        ]
    },
    {
        "name": "aws_elastic_beanstalk_application",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/elastic_beanstalk_application.html",
        "groupName": "Elastic Beanstalk Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the application, must be unique within your account",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) Short description of the application",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "name",
                "description": "",
                "args": []
            },
            {
                "name": "description",
                "description": "",
                "args": []
            }
        ]
    },
    {
        "name": "aws_elastic_beanstalk_application_version",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/elastic_beanstalk_application_version.html",
        "groupName": "Elastic Beanstalk Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) A unique name for the this Application Version.",
                "args": []
            },
            {
                "name": "application",
                "description": "(Required) Name of the Beanstalk Application the version is associated with.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) Short description of the Application Version.",
                "args": []
            },
            {
                "name": "bucket",
                "description": "(Required) S3 bucket that contains the Application Version source bundle.",
                "args": []
            },
            {
                "name": "key",
                "description": "(Required) S3 object that is the Application Version source bundle.",
                "args": []
            },
            {
                "name": "force_delete",
                "description": "(Optional) On delete, force an Application Version to be deleted when it may be in use\nby multiple Elastic Beanstalk Environments.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "name",
                "description": "The Application Version name.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_elastic_beanstalk_configuration_template",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/elastic_beanstalk_configuration_template.html",
        "groupName": "Elastic Beanstalk Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) A unique name for this Template.",
                "args": []
            },
            {
                "name": "application",
                "description": "– (Required) name of the application to associate with this configuration template",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) Short description of the Template",
                "args": []
            },
            {
                "name": "environment_id",
                "description": "– (Optional) The ID of the environment used with this configuration template",
                "args": []
            },
            {
                "name": "setting",
                "description": "– (Optional) Option settings to configure the new Environment. These\noverride specific values that are set as defaults. The format is detailed\nbelow in Option Settings",
                "args": []
            },
            {
                "name": "solution_stack_name",
                "description": "– (Optional) A solution stack to base your Template\noff of. Example stacks can be found in the Amazon API documentation",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "name",
                "description": "",
                "args": []
            },
            {
                "name": "application",
                "description": "",
                "args": []
            },
            {
                "name": "description",
                "description": "",
                "args": []
            },
            {
                "name": "environment_id",
                "description": "",
                "args": []
            },
            {
                "name": "option_settings",
                "description": "",
                "args": []
            },
            {
                "name": "solution_stack_name",
                "description": "",
                "args": []
            }
        ]
    },
    {
        "name": "aws_elastic_beanstalk_environment",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/elastic_beanstalk_environment.html",
        "groupName": "Elastic Beanstalk Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) A unique name for this Environment. This name is used\nin the application URL",
                "args": []
            },
            {
                "name": "application",
                "description": "– (Required) Name of the application that contains the version\nto be deployed",
                "args": []
            },
            {
                "name": "cname_prefix",
                "description": "(Optional) Prefix to use for the fully qualified DNS name of\nthe Environment.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) Short description of the Environment",
                "args": []
            },
            {
                "name": "tier",
                "description": "(Optional) Elastic Beanstalk Environment tier. Valid values are Worker\nor WebServer. If tier is left blank WebServer will be used.",
                "args": []
            },
            {
                "name": "setting",
                "description": "– (Optional) Option settings to configure the new Environment. These\noverride specific values that are set as defaults. The format is detailed\nbelow in Option Settings",
                "args": []
            },
            {
                "name": "solution_stack_name",
                "description": "– (Optional) A solution stack to base your environment\noff of. Example stacks can be found in the Amazon API documentation",
                "args": []
            },
            {
                "name": "template_name",
                "description": "– (Optional) The name of the Elastic Beanstalk Configuration\ntemplate to use in deployment",
                "args": []
            },
            {
                "name": "wait_for_ready_timeout",
                "description": "(Default: 20m) The maximum\nduration that Terraform should\nwait for an Elastic Beanstalk Environment to be in a ready state before timing\nout.",
                "args": []
            },
            {
                "name": "poll_interval",
                "description": "– The time between polling the AWS API to\ncheck if changes have been applied. Use this to adjust the rate of API calls\nfor any create or update action. Minimum 10s, maximum 180s. Omit this to\nuse the default behavior, which is an exponential backoff",
                "args": []
            },
            {
                "name": "version_label",
                "description": "(Optional) The name of the Elastic Beanstalk Application Version\nto use in deployment.",
                "args": []
            },
            {
                "name": "tags",
                "description": "– (Optional) A set of tags to apply to the Environment. Note: at\nthis time the Elastic Beanstalk API does not provide a programatic way of\nchanging these tags after initial application",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "ID of the Elastic Beanstalk Environment.",
                "args": []
            },
            {
                "name": "name",
                "description": "Name of the Elastic Beanstalk Environment.",
                "args": []
            },
            {
                "name": "description",
                "description": "Description of the Elastic Beanstalk Environment.",
                "args": []
            },
            {
                "name": "tier",
                "description": "The environment tier specified.",
                "args": []
            },
            {
                "name": "application",
                "description": "– The Elastic Beanstalk Application specified for this environment.",
                "args": []
            },
            {
                "name": "setting",
                "description": "– Settings specifically set for this Environment.",
                "args": []
            },
            {
                "name": "all_settings",
                "description": "– List of all option settings configured in the Environment. These\nare a combination of default settings and their overrides from setting in\nthe configuration.",
                "args": []
            },
            {
                "name": "cname",
                "description": "Fully qualified DNS name for the Environment.",
                "args": []
            },
            {
                "name": "autoscaling_groups",
                "description": "The autoscaling groups used by this environment.",
                "args": []
            },
            {
                "name": "instances",
                "description": "Instances used by this environment.",
                "args": []
            },
            {
                "name": "launch_configurations",
                "description": "Launch configurations in use by this environment.",
                "args": []
            },
            {
                "name": "load_balancers",
                "description": "Elastic load balancers in use by this environment.",
                "args": []
            },
            {
                "name": "queues",
                "description": "SQS queues in use by this environment.",
                "args": []
            },
            {
                "name": "triggers",
                "description": "Autoscaling triggers in use by this environment.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_emr_cluster",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/emr_cluster.html",
        "groupName": "Elastic Map Reduce Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the job flow",
                "args": []
            },
            {
                "name": "release_label",
                "description": "(Required) The release label for the Amazon EMR release",
                "args": []
            },
            {
                "name": "master_instance_type",
                "description": "(Optional) The EC2 instance type of the master node. Exactly one of master_instance_type and instance_group must be specified.",
                "args": []
            },
            {
                "name": "service_role",
                "description": "(Required) IAM role that will be assumed by the Amazon EMR service to access AWS resources",
                "args": []
            },
            {
                "name": "security_configuration",
                "description": "(Optional) The security configuration name to attach to the EMR cluster. Only valid for EMR clusters with release_label 4.8.0 or greater",
                "args": []
            },
            {
                "name": "core_instance_type",
                "description": "(Optional) The EC2 instance type of the slave nodes. Cannot be specified if instance_groups is set",
                "args": []
            },
            {
                "name": "core_instance_count",
                "description": "(Optional) Number of Amazon EC2 instances used to execute the job flow. EMR will use one node as the cluster's master node and use the remainder of the nodes (core_instance_count-1) as core nodes. Cannot be specified if instance_groups is set. Default 1",
                "args": []
            },
            {
                "name": "instance_group",
                "description": "(Optional) A list of instance_group objects for each instance group in the cluster. Exactly one of master_instance_type and instance_group must be specified. If instance_group is set, then it must contain a configuration block for at least the MASTER instance group type (as well as any additional instance groups). Defined below",
                "args": []
            },
            {
                "name": "log_uri",
                "description": "(Optional) S3 bucket to write the log files of the job flow. If a value\n  is not provided, logs are not created",
                "args": []
            },
            {
                "name": "applications",
                "description": "(Optional) A list of applications for the cluster. Valid values are: Flink, Hadoop, Hive, Mahout, Pig, and Spark. Case insensitive",
                "args": []
            },
            {
                "name": "termination_protection",
                "description": "(Optional) Switch on/off termination protection (default is off)",
                "args": []
            },
            {
                "name": "keep_job_flow_alive_when_no_steps",
                "description": "(Optional) Switch on/off run cluster with no steps or when all steps are complete (default is on)",
                "args": []
            },
            {
                "name": "ec2_attributes",
                "description": "(Optional) Attributes for the EC2 instances running the job\nflow. Defined below",
                "args": []
            },
            {
                "name": "ebs_root_volume_size",
                "description": "(Optional) Size in GiB of the EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.",
                "args": []
            },
            {
                "name": "custom_ami_id",
                "description": "(Optional) A custom Amazon Linux AMI for the cluster (instead of an EMR-owned AMI). Available in Amazon EMR version 5.7.0 and later.",
                "args": []
            },
            {
                "name": "bootstrap_action",
                "description": "(Optional) List of bootstrap actions that will be run before Hadoop is started on\n  the cluster nodes. Defined below",
                "args": []
            },
            {
                "name": "configurations",
                "description": "(Optional) List of configurations supplied for the EMR cluster you are creating",
                "args": []
            },
            {
                "name": "visible_to_all_users",
                "description": "(Optional) Whether the job flow is visible to all IAM users of the AWS account associated with the job flow. Default true",
                "args": []
            },
            {
                "name": "autoscaling_role",
                "description": "(Optional) An IAM role for automatic scaling policies. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) list of tags to apply to the EMR Cluster",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the EMR Cluster",
                "args": []
            },
            {
                "name": "name",
                "description": "The name of the cluster.",
                "args": []
            },
            {
                "name": "release_label",
                "description": "The release label for the Amazon EMR release.",
                "args": []
            },
            {
                "name": "master_instance_type",
                "description": "The EC2 instance type of the master node.",
                "args": []
            },
            {
                "name": "master_public_dns",
                "description": "The public DNS name of the master EC2 instance.",
                "args": []
            },
            {
                "name": "core_instance_type",
                "description": "The EC2 instance type of the slave nodes.",
                "args": []
            },
            {
                "name": "core_instance_count",
                "description": "The number of slave nodes, i.e. EC2 instance nodes.",
                "args": []
            },
            {
                "name": "log_uri",
                "description": "The path to the Amazon S3 location where logs for this cluster are stored.",
                "args": []
            },
            {
                "name": "applications",
                "description": "The applications installed on this cluster.",
                "args": []
            },
            {
                "name": "ec2_attributes",
                "description": "Provides information about the EC2 instances in a cluster grouped by category: key name, subnet ID, IAM instance profile, and so on.",
                "args": []
            },
            {
                "name": "bootstrap_action",
                "description": "A list of bootstrap actions that will be run before Hadoop is started on the cluster nodes.",
                "args": []
            },
            {
                "name": "configurations",
                "description": "The list of Configurations supplied to the EMR cluster.",
                "args": []
            },
            {
                "name": "service_role",
                "description": "The IAM role that will be assumed by the Amazon EMR service to access AWS resources on your behalf.",
                "args": []
            },
            {
                "name": "visible_to_all_users",
                "description": "Indicates whether the job flow is visible to all IAM users of the AWS account associated with the job flow.",
                "args": []
            },
            {
                "name": "tags",
                "description": "The list of tags associated with a cluster.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_emr_instance_group",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/emr_instance_group.html",
        "groupName": "Elastic Map Reduce Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) Human friendly name given to the instance group. Changing this forces a new resource to be created.",
                "args": []
            },
            {
                "name": "cluster_id",
                "description": "(Required) ID of the EMR Cluster to attach to. Changing this forces a new resource to be created.",
                "args": []
            },
            {
                "name": "instance_type",
                "description": "(Required) The EC2 instance type for all instances in the instance group. Changing this forces a new resource to be created.",
                "args": []
            },
            {
                "name": "instance_count",
                "description": "(Optional) Target number of instances for the instance group. Defaults to 0.",
                "args": []
            },
            {
                "name": "ebs_optimized",
                "description": "(Optional) Indicates whether an Amazon EBS volume is EBSoptimized. Changing this forces a new resource to be created.",
                "args": []
            },
            {
                "name": "ebs_config",
                "description": "(Optional) One or more ebs_config blocks as defined below. Changing this forces a new resource to be created.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The EMR Instance ID",
                "args": []
            },
            {
                "name": "running_instance_count",
                "description": "The number of instances currently running in this instance group.",
                "args": []
            },
            {
                "name": "status",
                "description": "The current status of the instance group.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_emr_security_configuration",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/emr_security_configuration.html",
        "groupName": "Elastic Map Reduce Resources",
        "args": [
            {
                "name": "name",
                "description": "(Optional) The name of the EMR Security Configuration. By default generated by Terraform.",
                "args": []
            },
            {
                "name": "name_prefix",
                "description": "(Optional) Creates a unique name beginning with the specified\nprefix. Conflicts with name.",
                "args": []
            },
            {
                "name": "configuration",
                "description": "(Required) A JSON formatted Security Configuration",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the EMR Security Configuration (Same as the name)",
                "args": []
            },
            {
                "name": "name",
                "description": "The Name of the EMR Security Configuration",
                "args": []
            },
            {
                "name": "configuration",
                "description": "The JSON formatted Security Configuration",
                "args": []
            },
            {
                "name": "creation_date",
                "description": "Date the Security Configuration was created",
                "args": []
            }
        ]
    },
    {
        "name": "aws_elasticsearch_domain",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/elasticsearch_domain.html",
        "groupName": "ElasticSearch Resources",
        "args": [
            {
                "name": "domain_name",
                "description": "(Required) Name of the domain.",
                "args": []
            },
            {
                "name": "access_policies",
                "description": "(Optional) IAM policy document specifying the access policies for the domain",
                "args": []
            },
            {
                "name": "advanced_options",
                "description": "(Optional) Key-value string pairs to specify advanced configuration options.",
                "args": []
            },
            {
                "name": "ebs_options",
                "description": "(Optional) EBS related options, may be required based on chosen instance size. See below.",
                "args": []
            },
            {
                "name": "encrypt_at_rest",
                "description": "(Optional) Encrypt at rest options. Only available for certain instance types. See below.",
                "args": []
            },
            {
                "name": "cluster_config",
                "description": "(Optional) Cluster configuration of the domain, see below.",
                "args": []
            },
            {
                "name": "snapshot_options",
                "description": "(Optional) Snapshot related options, see below.",
                "args": []
            },
            {
                "name": "vpc_options",
                "description": "(Optional) VPC related options, see below. Adding or removing this configuration forces a new resource (documentation).",
                "args": []
            },
            {
                "name": "log_publishing_options",
                "description": "(Optional) Options for publishing slow logs to CloudWatch Logs.",
                "args": []
            },
            {
                "name": "elasticsearch_version",
                "description": "(Optional) The version of ElasticSearch to deploy. Defaults to 1.5",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "Amazon Resource Name (ARN) of the domain.",
                "args": []
            },
            {
                "name": "domain_id",
                "description": "Unique identifier for the domain.",
                "args": []
            },
            {
                "name": "endpoint",
                "description": "Domain-specific endpoint used to submit index, search, and data upload requests.",
                "args": []
            },
            {
                "name": "kibana_endpoint",
                "description": "Domain-specific endpoint for kibana without https scheme.",
                "args": []
            },
            {
                "name": "vpc_options.0.availability_zones",
                "description": "If the domain was created inside a VPC, the names of the availability zones the configured subnet_ids were created inside.",
                "args": []
            },
            {
                "name": "vpc_options.0.vpc_id",
                "description": "If the domain was created inside a VPC, the ID of the VPC.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_elasticsearch_domain_policy",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/elasticsearch_domain_policy.html",
        "groupName": "ElasticSearch Resources",
        "args": [
            {
                "name": "domain_name",
                "description": "(Required) Name of the domain.",
                "args": []
            },
            {
                "name": "access_policies",
                "description": "(Optional) IAM policy document specifying the access policies for the domain",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_elastictranscoder_pipeline",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/elastic_transcoder_pipeline.html",
        "groupName": "Elastic Transcoder Resources",
        "args": [
            {
                "name": "aws_kms_key_arn",
                "description": "(Optional) The AWS Key Management Service (AWS KMS) key that you want to use with this pipeline.",
                "args": []
            },
            {
                "name": "content_config",
                "description": "(Optional) The ContentConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists. (documented below)",
                "args": []
            },
            {
                "name": "content_config_permissions",
                "description": "(Optional) The permissions for the content_config object. (documented below)",
                "args": []
            },
            {
                "name": "input_bucket",
                "description": "(Required) The Amazon S3 bucket in which you saved the media files that you want to transcode and the graphics that you want to use as watermarks.",
                "args": []
            },
            {
                "name": "name",
                "description": "(Optional, Forces new resource) The name of the pipeline. Maximum 40 characters",
                "args": []
            },
            {
                "name": "notifications",
                "description": "(Optional) The Amazon Simple Notification Service (Amazon SNS) topic that you want to notify to report job status. (documented below)",
                "args": []
            },
            {
                "name": "output_bucket",
                "description": "(Optional) The Amazon S3 bucket in which you want Elastic Transcoder to save the transcoded files.",
                "args": []
            },
            {
                "name": "role",
                "description": "(Required) The IAM Amazon Resource Name (ARN) for the role that you want Elastic Transcoder to use to transcode jobs for this pipeline.",
                "args": []
            },
            {
                "name": "thumbnail_config",
                "description": "(Optional) The ThumbnailConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files. (documented below)",
                "args": []
            },
            {
                "name": "thumbnail_config_permissions",
                "description": "(Optional) The permissions for the thumbnail_config object. (documented below)",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_elastictranscoder_preset",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/elastic_transcoder_preset.html",
        "groupName": "Elastic Transcoder Resources",
        "args": [
            {
                "name": "audio",
                "description": "(Optional, Forces new resource) Audio parameters object (documented below).",
                "args": []
            },
            {
                "name": "audio_codec_options",
                "description": "(Optional, Forces new resource) Codec options for the audio parameters (documented below)",
                "args": []
            },
            {
                "name": "container",
                "description": "(Required, Forces new resource) The container type for the output file. Valid values are flac, flv, fmp4, gif, mp3, mp4, mpg, mxf, oga, ogg, ts, and webm.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional, Forces new resource) A description of the preset (maximum 255 characters)",
                "args": []
            },
            {
                "name": "name",
                "description": "(Optional, Forces new resource) The name of the preset. (maximum 40 characters)",
                "args": []
            },
            {
                "name": "thumbnails",
                "description": "(Optional, Forces new resource) Thumbnail parameters object (documented below)",
                "args": []
            },
            {
                "name": "video",
                "description": "(Optional, Forces new resource) Video parameters object (documented below)",
                "args": []
            },
            {
                "name": "video_watermarks",
                "description": "(Optional, Forces new resource) Watermark parameters for the video parameters (documented below)",
                "args": []
            },
            {
                "name": "video_codec_options",
                "description": "(Optional, Forces new resource) Codec options for the video parameters",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_gamelift_build",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/gamelift_build.html",
        "groupName": "Gamelift Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) Name of the build",
                "args": []
            },
            {
                "name": "operating_system",
                "description": "(Required) Operating system that the game server binaries are built to run on. e.g. WINDOWS_2012 or AMAZON_LINUX.",
                "args": []
            },
            {
                "name": "storage_location",
                "description": "(Required) Information indicating where your game build files are stored. See below.",
                "args": []
            },
            {
                "name": "version",
                "description": "(Optional) Version that is associated with this build.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "Build ID.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_glacier_vault",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/glacier_vault.html",
        "groupName": "Glacier Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the Vault. Names can be between 1 and 255 characters long and the valid characters are a-z, A-Z, 0-9, '_' (underscore), '-' (hyphen), and '.' (period).",
                "args": []
            },
            {
                "name": "access_policy",
                "description": "(Optional) The policy document. This is a JSON formatted string.\nThe heredoc syntax or file function is helpful here. Use the Glacier Developer Guide for more information on Glacier Vault Policy",
                "args": []
            },
            {
                "name": "notification",
                "description": "(Optional) The notifications for the Vault. Fields documented below.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "location",
                "description": "The URI of the vault that was created.",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the vault.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_glue_catalog_database",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/glue_catalog_database.html",
        "groupName": "Glue Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the database.",
                "args": []
            },
            {
                "name": "catalog_id",
                "description": "(Optional) ID of the Glue Catalog to create the database in. If omitted, this defaults to the AWS Account ID.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) Description of the database.",
                "args": []
            },
            {
                "name": "location_uri",
                "description": "(Optional) The location of the database (for example, an HDFS path).",
                "args": []
            },
            {
                "name": "parameters",
                "description": "(Optional) A list of key-value pairs that define parameters and properties of the database.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_guardduty_detector",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/guardduty_detector.html",
        "groupName": "GuardDuty Resources",
        "args": [
            {
                "name": "enable",
                "description": "(Optional) Enable monitoring and feedback reporting. Setting to false is equivalent to \"suspending\" GuardDuty. Defaults to true.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the GuardDuty detector",
                "args": []
            },
            {
                "name": "account_id",
                "description": "The AWS account ID of the GuardDuty detector",
                "args": []
            }
        ]
    },
    {
        "name": "aws_guardduty_ipset",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/guardduty_ipset.html",
        "groupName": "GuardDuty Resources",
        "args": [
            {
                "name": "activate",
                "description": "(Required) Specifies whether GuardDuty is to start using the uploaded IPSet.",
                "args": []
            },
            {
                "name": "detector_id",
                "description": "(Required) The detector ID of the GuardDuty.",
                "args": []
            },
            {
                "name": "format",
                "description": "(Required) The format of the file that contains the IPSet. Valid values: TXT | STIX | OTX_CSV | ALIEN_VAULT | PROOF_POINT | FIRE_EYE",
                "args": []
            },
            {
                "name": "location",
                "description": "(Required) The URI of the file that contains the IPSet.",
                "args": []
            },
            {
                "name": "name",
                "description": "(Required) The friendly name to identify the IPSet.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the GuardDuty IPSet.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_guardduty_member",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/guardduty_member.html",
        "groupName": "GuardDuty Resources",
        "args": [
            {
                "name": "account_id",
                "description": "(Required) AWS account ID for member account.",
                "args": []
            },
            {
                "name": "detector_id",
                "description": "(Required) The detector ID of the GuardDuty account where you want to create member accounts.",
                "args": []
            },
            {
                "name": "email",
                "description": "(Required) Email address for member account.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the GuardDuty member",
                "args": []
            }
        ]
    },
    {
        "name": "aws_guardduty_threatintelset",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/guardduty_threatintelset.html",
        "groupName": "GuardDuty Resources",
        "args": [
            {
                "name": "activate",
                "description": "(Required) Specifies whether GuardDuty is to start using the uploaded ThreatIntelSet.",
                "args": []
            },
            {
                "name": "detector_id",
                "description": "(Required) The detector ID of the GuardDuty.",
                "args": []
            },
            {
                "name": "format",
                "description": "(Required) The format of the file that contains the ThreatIntelSet. Valid values: TXT | STIX | OTX_CSV | ALIEN_VAULT | PROOF_POINT | FIRE_EYE",
                "args": []
            },
            {
                "name": "location",
                "description": "(Required) The URI of the file that contains the ThreatIntelSet.",
                "args": []
            },
            {
                "name": "name",
                "description": "(Required) The friendly name to identify the ThreatIntelSet.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the GuardDuty ThreatIntelSet and the detector ID. Format: <DetectorID>:<ThreatIntelSetID>",
                "args": []
            }
        ]
    },
    {
        "name": "aws_iam_access_key",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/iam_access_key.html",
        "groupName": "IAM Resources",
        "args": [
            {
                "name": "user",
                "description": "(Required) The IAM user to associate with this access key.",
                "args": []
            },
            {
                "name": "pgp_key",
                "description": "(Optional) Either a base-64 encoded PGP public key, or a\nkeybase username in the form keybase:some_person_that_exists.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The access key ID.",
                "args": []
            },
            {
                "name": "user",
                "description": "The IAM user associated with this access key.",
                "args": []
            },
            {
                "name": "key_fingerprint",
                "description": "The fingerprint of the PGP key used to encrypt\nthe secret",
                "args": []
            },
            {
                "name": "secret",
                "description": "The secret access key. Note that this will be written\nto the state file. Please supply a pgp_key instead, which will prevent the\nsecret from being stored in plain text",
                "args": []
            },
            {
                "name": "encrypted_secret",
                "description": "The encrypted secret, base64 encoded.\n~> NOTE: The encrypted secret may be decrypted using the command line,\n for example: terraform output secret | base64 --decode | keybase pgp decrypt.",
                "args": []
            },
            {
                "name": "ses_smtp_password",
                "description": "The secret access key converted into an SES SMTP\npassword by applying AWS's documented conversion\nalgorithm.",
                "args": []
            },
            {
                "name": "status",
                "description": "\"Active\" or \"Inactive\". Keys are initially active, but can be made\n  inactive by other means.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_iam_account_alias",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/iam_account_alias.html",
        "groupName": "IAM Resources",
        "args": [
            {
                "name": "account_alias",
                "description": "(Required) The account alias",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_iam_account_password_policy",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/iam_account_password_policy.html",
        "groupName": "IAM Resources",
        "args": [
            {
                "name": "allow_users_to_change_password",
                "description": "(Optional) Whether to allow users to change their own password",
                "args": []
            },
            {
                "name": "hard_expiry",
                "description": "(Optional) Whether users are prevented from setting a new password after their password has expired\n  (i.e. require administrator reset)",
                "args": []
            },
            {
                "name": "max_password_age",
                "description": "(Optional) The number of days that an user password is valid.",
                "args": []
            },
            {
                "name": "minimum_password_length",
                "description": "(Optional) Minimum length to require for user passwords.",
                "args": []
            },
            {
                "name": "password_reuse_prevention",
                "description": "(Optional) The number of previous passwords that users are prevented from reusing.",
                "args": []
            },
            {
                "name": "require_lowercase_characters",
                "description": "(Optional) Whether to require lowercase characters for user passwords.",
                "args": []
            },
            {
                "name": "require_numbers",
                "description": "(Optional) Whether to require numbers for user passwords.",
                "args": []
            },
            {
                "name": "require_symbols",
                "description": "(Optional) Whether to require symbols for user passwords.",
                "args": []
            },
            {
                "name": "require_uppercase_characters",
                "description": "(Optional) Whether to require uppercase characters for user passwords.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "expire_passwords",
                "description": "Indicates whether passwords in the account expire.\n  Returns true if max_password_age contains a value greater than 0.\n  Returns false if it is 0 or not present.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_iam_group",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/iam_group.html",
        "groupName": "IAM Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The group's name. The name must consist of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@-_.. Group names are not distinguished by case. For example, you cannot create groups named both \"ADMINS\" and \"admins\".",
                "args": []
            },
            {
                "name": "path",
                "description": "(Optional, default \"/\") Path in which to create the group.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The group's ID.",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN assigned by AWS for this group.",
                "args": []
            },
            {
                "name": "name",
                "description": "The group's name.",
                "args": []
            },
            {
                "name": "path",
                "description": "The path of the group in IAM.",
                "args": []
            },
            {
                "name": "unique_id",
                "description": "The unique ID assigned by AWS.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_iam_group_membership",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/iam_group_membership.html",
        "groupName": "IAM Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name to identify the Group Membership",
                "args": []
            },
            {
                "name": "users",
                "description": "(Required) A list of IAM User names to associate with the Group",
                "args": []
            },
            {
                "name": "group",
                "description": "– (Required) The IAM Group name to attach the list of users to",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "name",
                "description": "The name to identifing the Group Membership",
                "args": []
            },
            {
                "name": "users",
                "description": "list of IAM User names",
                "args": []
            },
            {
                "name": "group",
                "description": "– IAM Group name",
                "args": []
            }
        ]
    },
    {
        "name": "aws_iam_group_policy",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/iam_group_policy.html",
        "groupName": "IAM Resources",
        "args": [
            {
                "name": "policy",
                "description": "(Required) The policy document. This is a JSON formatted string.\nThe heredoc syntax or file function is helpful here.",
                "args": []
            },
            {
                "name": "name",
                "description": "(Optional) The name of the policy. If omitted, Terraform will\nassign a random, unique name.",
                "args": []
            },
            {
                "name": "name_prefix",
                "description": "(Optional) Creates a unique name beginning with the specified\nprefix. Conflicts with name.",
                "args": []
            },
            {
                "name": "group",
                "description": "(Required) The IAM group to attach to the policy.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The group policy ID.",
                "args": []
            },
            {
                "name": "group",
                "description": "The group to which this policy applies.",
                "args": []
            },
            {
                "name": "name",
                "description": "The name of the policy.",
                "args": []
            },
            {
                "name": "policy",
                "description": "The policy document attached to the group.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_iam_group_policy_attachment",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/iam_group_policy_attachment.html",
        "groupName": "IAM Resources",
        "args": [
            {
                "name": "group",
                "description": "(Required)  The group the policy should be applied to",
                "args": []
            },
            {
                "name": "policy_arn",
                "description": "(Required)  The ARN of the policy you want to apply",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_iam_instance_profile",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/iam_instance_profile.html",
        "groupName": "IAM Resources",
        "args": [
            {
                "name": "name",
                "description": "(Optional, Forces new resource) The profile's name. If omitted, Terraform will assign a random, unique name.",
                "args": []
            },
            {
                "name": "name_prefix",
                "description": "(Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name.",
                "args": []
            },
            {
                "name": "path",
                "description": "(Optional, default \"/\") Path in which to create the profile.",
                "args": []
            },
            {
                "name": "roles",
                "description": "(Deprecated)\nA list of role names to include in the profile.  The current default is 1.  If you see an error message similar to Cannot exceed quota for InstanceSessionsPerInstanceProfile: 1, then you must contact AWS support and ask for a limit increase.\nWARNING: This is deprecated since version 0.9.3 (April 12, 2017), as >= 2 roles are not possible. See issue #11575.",
                "args": []
            },
            {
                "name": "role",
                "description": "(Optional) The role name to include in the profile.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_iam_openid_connect_provider",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/iam_openid_connect_provider.html",
        "groupName": "IAM Resources",
        "args": [
            {
                "name": "url",
                "description": "(Required) The URL of the identity provider. Corresponds to the iss claim.",
                "args": []
            },
            {
                "name": "client_id_list",
                "description": "(Required) A list of client IDs (also known as audiences). When a mobile or web app registers with an OpenID Connect provider, they establish a value that identifies the application. (This is the value that's sent as the client_id parameter on OAuth requests.)",
                "args": []
            },
            {
                "name": "thumbprint_list",
                "description": "(Required) A list of server certificate thumbprints for the OpenID Connect (OIDC) identity provider's server certificate(s).",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The ARN assigned by AWS for this provider.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_iam_policy",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/iam_policy.html",
        "groupName": "IAM Resources",
        "args": [
            {
                "name": "description",
                "description": "(Optional) Description of the IAM policy.",
                "args": []
            },
            {
                "name": "name",
                "description": "(Optional, Forces new resource) The name of the policy. If omitted, Terraform will assign a random, unique name.",
                "args": []
            },
            {
                "name": "name_prefix",
                "description": "(Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name.",
                "args": []
            },
            {
                "name": "path",
                "description": "(Optional, default \"/\") Path in which to create the policy.\nSee IAM Identifiers for more information.",
                "args": []
            },
            {
                "name": "policy",
                "description": "(Required) The policy document. This is a JSON formatted string.\nThe heredoc syntax, file function, or the aws_iam_policy_document data\nsource\nare all helpful here.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The policy's ID.",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN assigned by AWS to this policy.",
                "args": []
            },
            {
                "name": "description",
                "description": "The description of the policy.",
                "args": []
            },
            {
                "name": "name",
                "description": "The name of the policy.",
                "args": []
            },
            {
                "name": "path",
                "description": "The path of the policy in IAM.",
                "args": []
            },
            {
                "name": "policy",
                "description": "The policy document.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_iam_policy_attachment",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/iam_policy_attachment.html",
        "groupName": "IAM Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required)  The name of the policy. This cannot be an empty string.",
                "args": []
            },
            {
                "name": "users",
                "description": "(Optional)  The user(s) the policy should be applied to",
                "args": []
            },
            {
                "name": "roles",
                "description": "(Optional)  The role(s) the policy should be applied to",
                "args": []
            },
            {
                "name": "groups",
                "description": "(Optional)  The group(s) the policy should be applied to",
                "args": []
            },
            {
                "name": "policy_arn",
                "description": "(Required)  The ARN of the policy you want to apply",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The policy's ID.",
                "args": []
            },
            {
                "name": "name",
                "description": "The name of the policy.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_iam_role",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/iam_role.html",
        "groupName": "IAM Resources",
        "args": [
            {
                "name": "name",
                "description": "(Optional, Forces new resource) The name of the role. If omitted, Terraform will assign a random, unique name.",
                "args": []
            },
            {
                "name": "name_prefix",
                "description": "(Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name.",
                "args": []
            },
            {
                "name": "assume_role_policy",
                "description": "(Required) The policy that grants an entity permission to assume the role.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The Amazon Resource Name (ARN) specifying the role.",
                "args": []
            },
            {
                "name": "create_date",
                "description": "The creation date of the IAM role.",
                "args": []
            },
            {
                "name": "unique_id",
                "description": "The stable and unique string identifying the role.",
                "args": []
            },
            {
                "name": "name",
                "description": "The name of the role.",
                "args": []
            },
            {
                "name": "description",
                "description": "The description of the role.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_iam_role_policy",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/iam_role_policy.html",
        "groupName": "IAM Resources",
        "args": [
            {
                "name": "name",
                "description": "(Optional) The name of the role policy. If omitted, Terraform will\nassign a random, unique name.",
                "args": []
            },
            {
                "name": "name_prefix",
                "description": "(Optional) Creates a unique name beginning with the specified\nprefix. Conflicts with name.",
                "args": []
            },
            {
                "name": "policy",
                "description": "(Required) The policy document. This is a JSON formatted string.\nThe heredoc syntax or file function is helpful here.",
                "args": []
            },
            {
                "name": "role",
                "description": "(Required) The IAM role to attach to the policy.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The role policy ID, in the form of role_name:role_policy_name.",
                "args": []
            },
            {
                "name": "name",
                "description": "The name of the policy.",
                "args": []
            },
            {
                "name": "policy",
                "description": "The policy document attached to the role.",
                "args": []
            },
            {
                "name": "role",
                "description": "The name of the role associated with the policy.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_iam_role_policy_attachment",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/iam_role_policy_attachment.html",
        "groupName": "IAM Resources",
        "args": [
            {
                "name": "role",
                "description": "(Required)  The role the policy should be applied to",
                "args": []
            },
            {
                "name": "policy_arn",
                "description": "(Required)  The ARN of the policy you want to apply",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_iam_saml_provider",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/iam_saml_provider.html",
        "groupName": "IAM Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the provider to create.",
                "args": []
            },
            {
                "name": "saml_metadata_document",
                "description": "(Required) An XML document generated by an identity provider that supports SAML 2.0.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The ARN assigned by AWS for this provider.",
                "args": []
            },
            {
                "name": "valid_until",
                "description": "The expiration date and time for the SAML provider in RFC1123 format, e.g. Mon, 02 Jan 2006 15:04:05 MST.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_iam_server_certificate",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/iam_server_certificate.html",
        "groupName": "IAM Resources",
        "args": [
            {
                "name": "name",
                "description": "(Optional) The name of the Server Certificate. Do not include the\npath in this value. If omitted, Terraform will assign a random, unique name.",
                "args": []
            },
            {
                "name": "name_prefix",
                "description": "(Optional) Creates a unique name beginning with the specified\nprefix. Conflicts with name.",
                "args": []
            },
            {
                "name": "certificate_body",
                "description": "– (Required) The contents of the public key certificate in\nPEMencoded format.",
                "args": []
            },
            {
                "name": "certificate_chain",
                "description": "– (Optional) The contents of the certificate chain.\nThis is typically a concatenation of the PEMencoded public key certificates\nof the chain.",
                "args": []
            },
            {
                "name": "private_key",
                "description": "– (Required) The contents of the private key in PEMencoded format.",
                "args": []
            },
            {
                "name": "path",
                "description": "(Optional) The IAM path for the server certificate.  If it is not\n  included, it defaults to a slash (/). If this certificate is for use with\n  AWS CloudFront, the path must be in format /cloudfront/your_path_here.\n  See IAM Identifiers for more details on IAM Paths.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The unique Server Certificate name",
                "args": []
            },
            {
                "name": "name",
                "description": "The name of the Server Certificate",
                "args": []
            },
            {
                "name": "arn",
                "description": "The Amazon Resource Name (ARN) specifying the server certificate.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_iam_user",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/iam_user.html",
        "groupName": "IAM Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The user's name. The name must consist of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@-_.. User names are not distinguished by case. For example, you cannot create users named both \"TESTUSER\" and \"testuser\".",
                "args": []
            },
            {
                "name": "path",
                "description": "(Optional, default \"/\") Path in which to create the user.",
                "args": []
            },
            {
                "name": "force_destroy",
                "description": "(Optional, default false) When destroying this user, destroy even if it\nhas non-Terraform-managed IAM access keys, login profile or MFA devices. Without force_destroy\na user with non-Terraform-managed access keys and login profile will fail to be destroyed.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The ARN assigned by AWS for this user.",
                "args": []
            },
            {
                "name": "name",
                "description": "The user's name.",
                "args": []
            },
            {
                "name": "unique_id",
                "description": "The unique ID assigned by AWS.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_iam_user_login_profile",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/iam_user_login_profile.html",
        "groupName": "IAM Resources",
        "args": [
            {
                "name": "user",
                "description": "(Required) The IAM user's name.",
                "args": []
            },
            {
                "name": "pgp_key",
                "description": "(Required) Either a base-64 encoded PGP public key, or a\nkeybase username in the form keybase:username.",
                "args": []
            },
            {
                "name": "password_reset_required",
                "description": "(Optional, default \"true\") Whether the\nuser should be forced to reset the generated password on first login.",
                "args": []
            },
            {
                "name": "password_length",
                "description": "(Optional, default 20) The length of the generated\npassword.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "key_fingerprint",
                "description": "The fingerprint of the PGP key used to encrypt\nthe password",
                "args": []
            },
            {
                "name": "encrypted_password",
                "description": "The encrypted password, base64 encoded.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_iam_user_policy",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/iam_user_policy.html",
        "groupName": "IAM Resources",
        "args": [
            {
                "name": "policy",
                "description": "(Required) The policy document. This is a JSON formatted string.\n  The heredoc syntax or file function is helpful here.",
                "args": []
            },
            {
                "name": "name",
                "description": "(Optional) The name of the policy. If omitted, Terraform will assign a random, unique name.",
                "args": []
            },
            {
                "name": "name_prefix",
                "description": "(Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name.",
                "args": []
            },
            {
                "name": "user",
                "description": "(Required) IAM user to which to attach this policy.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_iam_user_policy_attachment",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/iam_user_policy_attachment.html",
        "groupName": "IAM Resources",
        "args": [
            {
                "name": "user",
                "description": "(Required)  The user the policy should be applied to",
                "args": []
            },
            {
                "name": "policy_arn",
                "description": "(Required)  The ARN of the policy you want to apply",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_iam_user_ssh_key",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/iam_user_ssh_key.html",
        "groupName": "IAM Resources",
        "args": [
            {
                "name": "username",
                "description": "(Required) The name of the IAM user to associate the SSH public key with.",
                "args": []
            },
            {
                "name": "encoding",
                "description": "(Required) Specifies the public key encoding format to use in the response. To retrieve the public key in ssh-rsa format, use SSH. To retrieve the public key in PEM format, use PEM.",
                "args": []
            },
            {
                "name": "public_key",
                "description": "(Required) The SSH public key. The public key must be encoded in ssh-rsa format or PEM format.",
                "args": []
            },
            {
                "name": "status",
                "description": "(Optional) The status to assign to the SSH public key. Active means the key can be used for authentication with an AWS CodeCommit repository. Inactive means the key cannot be used. Default is active.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "ssh_public_key_id",
                "description": "The unique identifier for the SSH public key.",
                "args": []
            },
            {
                "name": "fingerprint",
                "description": "The MD5 message digest of the SSH public key.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_iot_certificate",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/iot_certificate.html",
        "groupName": "IoT Resources",
        "args": [
            {
                "name": "active",
                "description": "(Required)  Boolean flag to indicate if the certificate should be active",
                "args": []
            },
            {
                "name": "csr",
                "description": "(Required) The certificate signing request. Review the\n[IoT API Reference Guide] (http://docs.aws.amazon.com/iot/latest/apireference/API_CreateCertificateFromCsr.html)\nfor more information on creating a certificate from a certificate signing request (CSR).",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The ARN of the created AWS IoT certificate",
                "args": []
            }
        ]
    },
    {
        "name": "aws_iot_policy",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/iot_policy.html",
        "groupName": "IoT Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the policy.",
                "args": []
            },
            {
                "name": "policy",
                "description": "(Required) The policy document. This is a JSON formatted string.\nThe heredoc syntax or file function is helpful here. Use the [IoT Developer Guide]\n(http://docs.aws.amazon.com/iot/latest/developerguide/iot-policies.html) for more information on IoT Policies",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The ARN assigned by AWS to this policy.",
                "args": []
            },
            {
                "name": "name",
                "description": "The name of this policy.",
                "args": []
            },
            {
                "name": "default_version_id",
                "description": "The default version of this policy.",
                "args": []
            },
            {
                "name": "policy",
                "description": "The policy document.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_iot_topic_rule",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/iot_topic_rule.html",
        "groupName": "IoT Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the rule.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) The description of the rule.",
                "args": []
            },
            {
                "name": "enabled",
                "description": "(Required) Specifies whether the rule is enabled.",
                "args": []
            },
            {
                "name": "sql",
                "description": "(Required) The SQL statement used to query the topic. For more information, see AWS IoT SQL Reference (http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference) in the AWS IoT Developer Guide.",
                "args": []
            },
            {
                "name": "sql_version",
                "description": "(Required) The version of the SQL rules engine to use when evaluating the rule.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The name of the topic rule",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the topic rule",
                "args": []
            }
        ]
    },
    {
        "name": "aws_inspector_assessment_target",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/inspector_assessment_target.html",
        "groupName": "Inspector Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the assessment target.",
                "args": []
            },
            {
                "name": "resource_group_arn",
                "description": "(Required ) The resource group ARN stating tags for instance matching.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The target assessment ARN.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_inspector_assessment_template",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/inspector_assessment_template.html",
        "groupName": "Inspector Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the assessment template.",
                "args": []
            },
            {
                "name": "target_arn",
                "description": "(Required) The assessment target ARN to attach the template to.",
                "args": []
            },
            {
                "name": "duration",
                "description": "(Required) The duration of the inspector run.",
                "args": []
            },
            {
                "name": "rules_package_arns",
                "description": "(Required) The rules to be used during the run.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The template assessment ARN.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_inspector_resource_group",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/inspector_resource_group.html",
        "groupName": "Inspector Resources",
        "args": [
            {
                "name": "tags",
                "description": "(Required) The tags on your EC2 Instance.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The resource group ARN.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_kinesis_stream",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/kinesis_stream.html",
        "groupName": "Kinesis Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) A name to identify the stream. This is unique to the\nAWS account and region the Stream is created in.",
                "args": []
            },
            {
                "name": "shard_count",
                "description": "– (Required) The number of shards that the stream will use.\nAmazon has guidlines for specifying the Stream size that should be referenced\nwhen creating a Kinesis stream. See Amazon Kinesis Streams for more.",
                "args": []
            },
            {
                "name": "retention_period",
                "description": "(Optional) Length of time data records are accessible after they are added to the stream. The maximum value of a stream's retention period is 168 hours. Minimum value is 24. Default is 24.",
                "args": []
            },
            {
                "name": "shard_level_metrics",
                "description": "(Optional) A list of shard-level CloudWatch metrics which can be enabled for the stream. See Monitoring with CloudWatch for more. Note that the value ALL should not be used; instead you should provide an explicit list of metrics you wish to enable.",
                "args": []
            },
            {
                "name": "encryption_type",
                "description": "(Optional) The encryption type to use. The only acceptable values are NONE or KMS. The default value is NONE.",
                "args": []
            },
            {
                "name": "kms_key_id",
                "description": "(Optional) The GUID for the customer-managed KMS key to use for encryption. You can also use a Kinesis-owned master key by specifying the alias aws/kinesis.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The unique Stream id",
                "args": []
            },
            {
                "name": "name",
                "description": "The unique Stream name",
                "args": []
            },
            {
                "name": "shard_count",
                "description": "The count of Shards for this Stream",
                "args": []
            },
            {
                "name": "arn",
                "description": "The Amazon Resource Name (ARN) specifying the Stream (same as id)",
                "args": []
            }
        ]
    },
    {
        "name": "aws_kinesis_firehose_delivery_stream",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/kinesis_firehose_delivery_stream.html",
        "groupName": "Kinesis Firehose Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) A name to identify the stream. This is unique to the\nAWS account and region the Stream is created in.",
                "args": []
            },
            {
                "name": "kinesis_source_configuration",
                "description": "(Optional) Allows the ability to specify the kinesis stream that is used as the source of the firehose delivery stream.",
                "args": []
            },
            {
                "name": "destination",
                "description": "– (Required) This is the destination to where the data is delivered. The only options are s3 (Deprecated, use extended_s3 instead), extended_s3, redshift, and elasticsearch.",
                "args": []
            },
            {
                "name": "s3_configuration",
                "description": "(Optional, Deprecated, see/use extended_s3_configuration unless destination is redshift) Configuration options for the s3 destination (or the intermediate bucket if the destination\nis redshift). More details are given below.",
                "args": []
            },
            {
                "name": "extended_s3_configuration",
                "description": "(Optional, only Required when destination is extended_s3) Enhanced configuration options for the s3 destination. More details are given below.",
                "args": []
            },
            {
                "name": "redshift_configuration",
                "description": "(Optional) Configuration options if redshift is the destination.\nUsing redshift_configuration requires the user to also specify a\ns3_configuration block. More details are given below.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The Amazon Resource Name (ARN) specifying the Stream",
                "args": []
            }
        ]
    },
    {
        "name": "aws_kms_alias",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/kms_alias.html",
        "groupName": "KMS Resources",
        "args": [
            {
                "name": "name",
                "description": "(Optional) The display name of the alias. The name must start with the word \"alias\" followed by a forward slash (alias/)",
                "args": []
            },
            {
                "name": "name_prefix",
                "description": "(Optional) Creates an unique alias beginning with the specified prefix.\nThe name must start with the word \"alias\" followed by a forward slash (alias/).  Conflicts with name.",
                "args": []
            },
            {
                "name": "target_key_id",
                "description": "(Required) Identifier for the key for which the alias is for, can be either an ARN or key_id.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The Amazon Resource Name (ARN) of the key alias.",
                "args": []
            },
            {
                "name": "target_key_arn",
                "description": "The Amazon Resource Name (ARN) of the target key identifier.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_kms_key",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/kms_key.html",
        "groupName": "KMS Resources",
        "args": [
            {
                "name": "description",
                "description": "(Optional) The description of the key as viewed in AWS console.",
                "args": []
            },
            {
                "name": "key_usage",
                "description": "(Optional) Specifies the intended use of the key.\n  Defaults to ENCRYPT_DECRYPT, and only symmetric encryption and decryption are supported.",
                "args": []
            },
            {
                "name": "policy",
                "description": "(Optional) A valid policy JSON document.",
                "args": []
            },
            {
                "name": "deletion_window_in_days",
                "description": "(Optional) Duration in days after which the key is deleted\n  after destruction of the resource, must be between 7 and 30 days. Defaults to 30 days.",
                "args": []
            },
            {
                "name": "is_enabled",
                "description": "(Optional) Specifies whether the key is enabled. Defaults to true.",
                "args": []
            },
            {
                "name": "enable_key_rotation",
                "description": "(Optional) Specifies whether key rotation\n  is enabled. Defaults to false.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the object.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The Amazon Resource Name (ARN) of the key.",
                "args": []
            },
            {
                "name": "key_id",
                "description": "The globally unique identifier for the key.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_lambda_alias",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/lambda_alias.html",
        "groupName": "Lambda Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) Name for the alias you are creating. Pattern: (?!^[0-9]+$)([a-zA-Z0-9-_]+)",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) Description of the alias.",
                "args": []
            },
            {
                "name": "function_name",
                "description": "(Required) The function ARN of the Lambda function for which you want to create an alias.",
                "args": []
            },
            {
                "name": "function_version",
                "description": "(Required) Lambda function version for which you are creating the alias. Pattern: (\\$LATEST|[0-9]+).",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The Amazon Resource Name (ARN) identifying your Lambda function alias.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_lambda_event_source_mapping",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/lambda_event_source_mapping.html",
        "groupName": "Lambda Resources",
        "args": [
            {
                "name": "batch_size",
                "description": "(Optional) The largest number of records that Lambda will retrieve from your event source at the time of invocation. Defaults to 100.",
                "args": []
            },
            {
                "name": "event_source_arn",
                "description": "(Required) The event source ARN - can either be a Kinesis or DynamoDB stream.",
                "args": []
            },
            {
                "name": "enabled",
                "description": "(Optional) Determines if the mapping will be enabled on creation. Defaults to true.",
                "args": []
            },
            {
                "name": "function_name",
                "description": "(Required) The name or the ARN of the Lambda function that will be subscribing to events.",
                "args": []
            },
            {
                "name": "starting_position",
                "description": "(Required) The position in the stream where AWS Lambda should start reading. Can be one of either TRIM_HORIZON or LATEST.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "function_arn",
                "description": "The the ARN of the Lambda function the event source mapping is sending events to. (Note: this is a computed value that differs from function_name above.)",
                "args": []
            },
            {
                "name": "last_modified",
                "description": "The date this resource was last modified.",
                "args": []
            },
            {
                "name": "last_processing_result",
                "description": "The result of the last AWS Lambda invocation of your Lambda function.",
                "args": []
            },
            {
                "name": "state",
                "description": "The state of the event source mapping.",
                "args": []
            },
            {
                "name": "state_transition_reason",
                "description": "The reason the event source mapping is in its current state.",
                "args": []
            },
            {
                "name": "uuid",
                "description": "The UUID of the created event source mapping.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_lambda_function",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/lambda_function.html",
        "groupName": "Lambda Resources",
        "args": [
            {
                "name": "filename",
                "description": "(Optional) The path to the function's deployment package within the local filesystem. If defined, The s3_-prefixed options cannot be used.",
                "args": []
            },
            {
                "name": "s3_bucket",
                "description": "(Optional) The S3 bucket location containing the function's deployment package. Conflicts with filename.",
                "args": []
            },
            {
                "name": "s3_key",
                "description": "(Optional) The S3 key of an object containing the function's deployment package. Conflicts with filename.",
                "args": []
            },
            {
                "name": "s3_object_version",
                "description": "(Optional) The object version containing the function's deployment package. Conflicts with filename.",
                "args": []
            },
            {
                "name": "function_name",
                "description": "(Required) A unique name for your Lambda Function.",
                "args": []
            },
            {
                "name": "dead_letter_config",
                "description": "(Optional) Nested block to configure the function's dead letter queue. See details below.",
                "args": []
            },
            {
                "name": "handler",
                "description": "(Required) The function entrypoint in your code.",
                "args": []
            },
            {
                "name": "role",
                "description": "(Required) IAM role attached to the Lambda Function. This governs both who / what can invoke your Lambda Function, as well as what resources our Lambda Function has access to. See Lambda Permission Model for more details.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) Description of what your Lambda Function does.",
                "args": []
            },
            {
                "name": "memory_size",
                "description": "(Optional) Amount of memory in MB your Lambda Function can use at runtime. Defaults to 128. See Limits",
                "args": []
            },
            {
                "name": "runtime",
                "description": "(Required) See Runtimes for valid values.",
                "args": []
            },
            {
                "name": "timeout",
                "description": "(Optional) The amount of time your Lambda Function has to run in seconds. Defaults to 3. See Limits",
                "args": []
            },
            {
                "name": "reserved_concurrent_executions",
                "description": "(Optional) The amount of reserved concurrent executions for this lambda function. Defaults to Unreserved Concurrency Limits. See Managing Concurrency",
                "args": []
            },
            {
                "name": "publish",
                "description": "(Optional) Whether to publish creation/change as new Lambda Function Version. Defaults to false.",
                "args": []
            },
            {
                "name": "vpc_config",
                "description": "(Optional) Provide this to allow your function to access your VPC. Fields documented below. See Lambda in VPC",
                "args": []
            },
            {
                "name": "environment",
                "description": "(Optional) The Lambda environment's configuration settings. Fields documented below.",
                "args": []
            },
            {
                "name": "kms_key_arn",
                "description": "(Optional) The ARN for the KMS encryption key.",
                "args": []
            },
            {
                "name": "source_code_hash",
                "description": "(Optional) Used to trigger updates. Must be set to a base64-encoded SHA256 hash of the package file specified with either filename or s3_key. The usual way to set this is ${base64sha256(file(\"file.zip\"))}, where \"file.zip\" is the local filename of the lambda function source archive.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the object.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The Amazon Resource Name (ARN) identifying your Lambda Function.",
                "args": []
            },
            {
                "name": "qualified_arn",
                "description": "The Amazon Resource Name (ARN) identifying your Lambda Function Version\n(if versioning is enabled via publish = true).",
                "args": []
            },
            {
                "name": "invoke_arn",
                "description": "The ARN to be used for invoking Lambda Function from API Gateway - to be used in aws_api_gateway_integration's uri",
                "args": []
            },
            {
                "name": "version",
                "description": "Latest published version of your Lambda Function.",
                "args": []
            },
            {
                "name": "last_modified",
                "description": "The date this resource was last modified.",
                "args": []
            },
            {
                "name": "kms_key_arn",
                "description": "(Optional) The ARN for the KMS encryption key.",
                "args": []
            },
            {
                "name": "source_code_hash",
                "description": "Base64-encoded representation of raw SHA-256 sum of the zip file\nprovided either via filename or s3_* parameters.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_lambda_permission",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/lambda_permission.html",
        "groupName": "Lambda Resources",
        "args": [
            {
                "name": "action",
                "description": "(Required) The AWS Lambda action you want to allow in this statement. (e.g. lambda:InvokeFunction)",
                "args": []
            },
            {
                "name": "function_name",
                "description": "(Required) Name of the Lambda function whose resource policy you are updating",
                "args": []
            },
            {
                "name": "principal",
                "description": "(Required) The principal who is getting this permission.\n  e.g. s3.amazonaws.com, an AWS account ID, or any valid AWS service principal\n  such as events.amazonaws.com or sns.amazonaws.com.",
                "args": []
            },
            {
                "name": "statement_id",
                "description": "(Required) A unique statement identifier.",
                "args": []
            },
            {
                "name": "qualifier",
                "description": "(Optional) Query parameter to specify function version or alias name.\n  The permission will then apply to the specific qualified ARN.\n  e.g. arn:aws:lambda:aws-region:acct-id:function:function-name:2",
                "args": []
            },
            {
                "name": "source_account",
                "description": "(Optional) The AWS account ID (without a hyphen) of the source owner.",
                "args": []
            },
            {
                "name": "source_arn",
                "description": "(Optional) When granting Amazon S3 or CloudWatch Events permission to\n  invoke your function, you should specify this field with the Amazon Resource Name (ARN)\n  for the S3 Bucket or CloudWatch Events Rule as its value.  This ensures that only events\n  generated from the specified bucket or rule can invoke the function.\n  API Gateway ARNs have a unique structure described\n  here.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_lightsail_domain",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/lightsail_domain.html",
        "groupName": "Lightsail Resources",
        "args": [
            {
                "name": "domain_name",
                "description": "(Required) The name of the Lightsail domain to manage",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The name used for this domain",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the Lightsail domain",
                "args": []
            }
        ]
    },
    {
        "name": "aws_lightsail_instance",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/lightsail_instance.html",
        "groupName": "Lightsail Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the Lightsail Instance",
                "args": []
            },
            {
                "name": "availability_zone",
                "description": "(Required) The Availability Zone in which to create your\ninstance. At this time, must be in us-east-1, us-east-2, us-west-2, eu-west-1, eu-west-2, eu-central-1, ap-southeast-1, ap-southeast-2, ap-northeast-1, ap-south-1 regions",
                "args": []
            },
            {
                "name": "blueprint_id",
                "description": "(Required) The ID for a virtual private server image\n(see list below)",
                "args": []
            },
            {
                "name": "bundle_id",
                "description": "(Required) The bundle of specification information (see list below)",
                "args": []
            },
            {
                "name": "key_pair_name",
                "description": "(Required) The name of your key pair. Created in the\nLightsail console (cannot use aws_key_pair at this time)",
                "args": []
            },
            {
                "name": "user_data",
                "description": "(Optional) launch script to configure server with additional user data",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ARN of the Lightsail instance (matches arn).",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the Lightsail instance (matches id).",
                "args": []
            },
            {
                "name": "availability_zone",
                "description": "",
                "args": []
            },
            {
                "name": "blueprint_id",
                "description": "",
                "args": []
            },
            {
                "name": "bundle_id",
                "description": "",
                "args": []
            },
            {
                "name": "key_pair_name",
                "description": "",
                "args": []
            },
            {
                "name": "user_data",
                "description": "",
                "args": []
            }
        ]
    },
    {
        "name": "aws_lightsail_key_pair",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/lightsail_key_pair.html",
        "groupName": "Lightsail Resources",
        "args": [
            {
                "name": "name",
                "description": "(Optional) The name of the Lightsail Key Pair. If omitted, a unique\nname will be generated by Terraform",
                "args": []
            },
            {
                "name": "pgp_key",
                "description": "– (Optional) An optional PGP key to encrypt the resulting private\nkey material. Only used when creating a new key pair",
                "args": []
            },
            {
                "name": "public_key",
                "description": "(Required) The public key material. This public key will be\nimported into Lightsail",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The name used for this key pair",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the Lightsail key pair",
                "args": []
            },
            {
                "name": "fingerprint",
                "description": "The MD5 public key fingerprint as specified in section 4 of RFC 4716.",
                "args": []
            },
            {
                "name": "public_key",
                "description": "the public key, base64 encoded",
                "args": []
            },
            {
                "name": "private_key",
                "description": "the private key, base64 encoded. This is only populated\nwhen creating a new key, and when no pgp_key is provided",
                "args": []
            },
            {
                "name": "encrypted_private_key",
                "description": "– the private key material, base 64 encoded and\nencrypted with the given pgp_key. This is only populated when creating a new\nkey and pgp_key is supplied",
                "args": []
            },
            {
                "name": "encrypted_fingerprint",
                "description": "The MD5 public key fingerprint for the encrypted\nprivate key",
                "args": []
            }
        ]
    },
    {
        "name": "aws_lightsail_static_ip",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/lightsail_static_ip.html",
        "groupName": "Lightsail Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name for the allocated static IP",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The ARN of the Lightsail static IP",
                "args": []
            },
            {
                "name": "ip_address",
                "description": "The allocated static IP address",
                "args": []
            },
            {
                "name": "support_code",
                "description": "The support code.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_lightsail_static_ip_attachment",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/lightsail_static_ip_attachment.html",
        "groupName": "Lightsail Resources",
        "args": [
            {
                "name": "static_ip_name",
                "description": "(Required) The name of the allocated static IP",
                "args": []
            },
            {
                "name": "instance_name",
                "description": "(Required) The name of the Lightsail instance to attach the IP to",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The ARN of the Lightsail static IP",
                "args": []
            },
            {
                "name": "ip_address",
                "description": "The allocated static IP address",
                "args": []
            },
            {
                "name": "support_code",
                "description": "The support code.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_mq_broker",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/mq_broker.html",
        "groupName": "MQ Resources",
        "args": [
            {
                "name": "apply_immediately",
                "description": "(Optional) Specifies whether any broker modifications\nare applied immediately, or during the next maintenance window. Default is false.",
                "args": []
            },
            {
                "name": "auto_minor_version_upgrade",
                "description": "(Optional) Enables automatic upgrades to new minor versions for brokers, as Apache releases the versions.",
                "args": []
            },
            {
                "name": "broker_name",
                "description": "(Required) The name of the broker.",
                "args": []
            },
            {
                "name": "configuration",
                "description": "(Optional) Configuration of the broker. See below.",
                "args": []
            },
            {
                "name": "deployment_mode",
                "description": "(Optional) The deployment mode of the broker. Supported: SINGLE_INSTANCE and ACTIVE_STANDBY_MULTI_AZ. Defaults to SINGLE_INSTANCE.",
                "args": []
            },
            {
                "name": "engine_type",
                "description": "(Required) The type of broker engine. Currently, Amazon MQ supports only ActiveMQ.",
                "args": []
            },
            {
                "name": "engine_version",
                "description": "(Required) The version of the broker engine. Currently, Amazon MQ supports only 5.15.0.",
                "args": []
            },
            {
                "name": "host_instance_type",
                "description": "(Required) The broker's instance type. e.g. mq.t2.micro or mq.m4.large",
                "args": []
            },
            {
                "name": "publicly_accessible",
                "description": "(Optional) Whether to enable connections from applications outside of the VPC that hosts the broker's subnets.",
                "args": []
            },
            {
                "name": "security_groups",
                "description": "(Required) The list of security group IDs assigned to the broker.",
                "args": []
            },
            {
                "name": "subnet_ids",
                "description": "(Optional) The list of subnet IDs in which to launch the broker. A SINGLE_INSTANCE deployment requires one subnet. An ACTIVE_STANDBY_MULTI_AZ deployment requires two subnets.",
                "args": []
            },
            {
                "name": "maintenance_window_start_time",
                "description": "(Optional) Maintenance window start time. See below.",
                "args": []
            },
            {
                "name": "user",
                "description": "(Optional) The list of all ActiveMQ usernames for the specified broker. See below.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The unique ID that Amazon MQ generates for the broker.",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the broker.",
                "args": []
            },
            {
                "name": "instances",
                "description": "A list of information about allocated brokers (both active & standby).\ninstances.0.console_url - The URL of the broker's ActiveMQ Web Console.\ninstances.0.endpoints - The broker's wire-level protocol endpoints in the following order & format referenceable e.g. as instances.0.endpoints.0 (SSL):\nssl://broker-id.mq.us-west-2.amazonaws.com:61617\namqp+ssl://broker-id.mq.us-west-2.amazonaws.com:5671\nstomp+ssl://broker-id.mq.us-west-2.amazonaws.com:61614\nmqtt+ssl://broker-id.mq.us-west-2.amazonaws.com:8883\nwss://broker-id.mq.us-west-2.amazonaws.com:61619",
                "args": []
            }
        ]
    },
    {
        "name": "aws_mq_configuration",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/mq_configuration.html",
        "groupName": "MQ Resources",
        "args": [
            {
                "name": "data",
                "description": "(Required) The broker configuration in XML format.\nSee official docs\nfor supported parameters and format of the XML.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) The description of the configuration.",
                "args": []
            },
            {
                "name": "engine_type",
                "description": "(Required) The type of broker engine.",
                "args": []
            },
            {
                "name": "engine_version",
                "description": "(Required) The version of the broker engine.",
                "args": []
            },
            {
                "name": "name",
                "description": "(Required) The name of the configuration",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The unique ID that Amazon MQ generates for the configuration.",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the configuration.",
                "args": []
            },
            {
                "name": "latest_revision",
                "description": "The latest revision of the configuration.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_media_store_container",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/media_store_container.html",
        "groupName": "MediaStore Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the container. Must contain alphanumeric characters or underscores.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The ARN of the container.",
                "args": []
            },
            {
                "name": "endpoint",
                "description": "The DNS endpoint of the container.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_opsworks_application",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/opsworks_application.html",
        "groupName": "OpsWorks Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) A human-readable name for the application.",
                "args": []
            },
            {
                "name": "short_name",
                "description": "(Required) A short, machine-readable name for the application. This can only be defined on resource creation and ignored on resource update.",
                "args": []
            },
            {
                "name": "stack_id",
                "description": "(Required) The id of the stack the application will belong to.",
                "args": []
            },
            {
                "name": "type",
                "description": "(Required) Opsworks application type. One of aws-flow-ruby, java, rails, php, nodejs, static or other.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) A description of the app.",
                "args": []
            },
            {
                "name": "environment",
                "description": "(Optional) Object to define environment variables.  Object is described below.",
                "args": []
            },
            {
                "name": "enable_ssl",
                "description": "(Optional) Whether to enable SSL for the app. This must be set in order to let ssl_configuration.private_key, ssl_configuration.certificate and ssl_configuration.chain take effect.",
                "args": []
            },
            {
                "name": "ssl_configuration",
                "description": "(Optional) The SSL configuration of the app. Object is described below.",
                "args": []
            },
            {
                "name": "app_source",
                "description": "(Optional) SCM configuration of the app as described below.",
                "args": []
            },
            {
                "name": "data_source_arn",
                "description": "(Optional) The data source's ARN.",
                "args": []
            },
            {
                "name": "data_source_type",
                "description": "(Optional) The data source's type one of AutoSelectOpsworksMysqlInstance, OpsworksMysqlInstance, or RdsDbInstance.",
                "args": []
            },
            {
                "name": "data_source_database_name",
                "description": "(Optional) The database name.",
                "args": []
            },
            {
                "name": "domains",
                "description": "(Optional) A list of virtual host alias.",
                "args": []
            },
            {
                "name": "document_root",
                "description": "(Optional) Subfolder for the document root for application of type rails.",
                "args": []
            },
            {
                "name": "auto_bundle_on_deploy",
                "description": "(Optional) Run bundle install when deploying for application of type rails.",
                "args": []
            },
            {
                "name": "rails_env",
                "description": "(Required if type = rails) The name of the Rails environment for application of type rails.",
                "args": []
            },
            {
                "name": "aws_flow_ruby_settings",
                "description": "(Optional) Specify activity and workflow workers for your app using the aws-flow gem.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The id of the application.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_opsworks_custom_layer",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/opsworks_custom_layer.html",
        "groupName": "OpsWorks Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) A human-readable name for the layer.",
                "args": []
            },
            {
                "name": "short_name",
                "description": "(Required) A short, machine-readable name for the layer, which will be used to identify it in the Chef node JSON.",
                "args": []
            },
            {
                "name": "stack_id",
                "description": "(Required) The id of the stack the layer will belong to.",
                "args": []
            },
            {
                "name": "auto_assign_elastic_ips",
                "description": "(Optional) Whether to automatically assign an elastic IP address to the layer's instances.",
                "args": []
            },
            {
                "name": "auto_assign_public_ips",
                "description": "(Optional) For stacks belonging to a VPC, whether to automatically assign a public IP address to each of the layer's instances.",
                "args": []
            },
            {
                "name": "custom_instance_profile_arn",
                "description": "(Optional) The ARN of an IAM profile that will be used for the layer's instances.",
                "args": []
            },
            {
                "name": "custom_security_group_ids",
                "description": "(Optional) Ids for a set of security groups to apply to the layer's instances.",
                "args": []
            },
            {
                "name": "auto_healing",
                "description": "(Optional) Whether to enable auto-healing for the layer.",
                "args": []
            },
            {
                "name": "install_updates_on_boot",
                "description": "(Optional) Whether to install OS and package updates on each instance when it boots.",
                "args": []
            },
            {
                "name": "instance_shutdown_timeout",
                "description": "(Optional) The time, in seconds, that OpsWorks will wait for Chef to complete after triggering the Shutdown event.",
                "args": []
            },
            {
                "name": "elastic_load_balancer",
                "description": "(Optional) Name of an Elastic Load Balancer to attach to this layer",
                "args": []
            },
            {
                "name": "drain_elb_on_shutdown",
                "description": "(Optional) Whether to enable Elastic Load Balancing connection draining.",
                "args": []
            },
            {
                "name": "system_packages",
                "description": "(Optional) Names of a set of system packages to install on the layer's instances.",
                "args": []
            },
            {
                "name": "use_ebs_optimized_instances",
                "description": "(Optional) Whether to use EBS-optimized instances.",
                "args": []
            },
            {
                "name": "ebs_volume",
                "description": "(Optional) ebs_volume blocks, as described below, will each create an EBS volume and connect it to the layer's instances.",
                "args": []
            },
            {
                "name": "custom_json",
                "description": "(Optional) Custom JSON attributes to apply to the layer.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The id of the layer.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_opsworks_ganglia_layer",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/opsworks_ganglia_layer.html",
        "groupName": "OpsWorks Resources",
        "args": [
            {
                "name": "stack_id",
                "description": "(Required) The id of the stack the layer will belong to.",
                "args": []
            },
            {
                "name": "password",
                "description": "(Required) The password to use for Ganglia.",
                "args": []
            },
            {
                "name": "name",
                "description": "(Optional) A human-readable name for the layer.",
                "args": []
            },
            {
                "name": "auto_assign_elastic_ips",
                "description": "(Optional) Whether to automatically assign an elastic IP address to the layer's instances.",
                "args": []
            },
            {
                "name": "auto_assign_public_ips",
                "description": "(Optional) For stacks belonging to a VPC, whether to automatically assign a public IP address to each of the layer's instances.",
                "args": []
            },
            {
                "name": "custom_instance_profile_arn",
                "description": "(Optional) The ARN of an IAM profile that will be used for the layer's instances.",
                "args": []
            },
            {
                "name": "custom_security_group_ids",
                "description": "(Optional) Ids for a set of security groups to apply to the layer's instances.",
                "args": []
            },
            {
                "name": "auto_healing",
                "description": "(Optional) Whether to enable auto-healing for the layer.",
                "args": []
            },
            {
                "name": "install_updates_on_boot",
                "description": "(Optional) Whether to install OS and package updates on each instance when it boots.",
                "args": []
            },
            {
                "name": "instance_shutdown_timeout",
                "description": "(Optional) The time, in seconds, that OpsWorks will wait for Chef to complete after triggering the Shutdown event.",
                "args": []
            },
            {
                "name": "elastic_load_balancer",
                "description": "(Optional) Name of an Elastic Load Balancer to attach to this layer",
                "args": []
            },
            {
                "name": "drain_elb_on_shutdown",
                "description": "(Optional) Whether to enable Elastic Load Balancing connection draining.",
                "args": []
            },
            {
                "name": "system_packages",
                "description": "(Optional) Names of a set of system packages to install on the layer's instances.",
                "args": []
            },
            {
                "name": "url",
                "description": "(Optional) The URL path to use for Ganglia. Defaults to \"/ganglia\".",
                "args": []
            },
            {
                "name": "username",
                "description": "(Optiona) The username to use for Ganglia. Defaults to \"opsworks\".",
                "args": []
            },
            {
                "name": "use_ebs_optimized_instances",
                "description": "(Optional) Whether to use EBS-optimized instances.",
                "args": []
            },
            {
                "name": "ebs_volume",
                "description": "(Optional) ebs_volume blocks, as described below, will each create an EBS volume and connect it to the layer's instances.",
                "args": []
            },
            {
                "name": "custom_json",
                "description": "(Optional) Custom JSON attributes to apply to the layer.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The id of the layer.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_opsworks_haproxy_layer",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/opsworks_haproxy_layer.html",
        "groupName": "OpsWorks Resources",
        "args": [
            {
                "name": "stack_id",
                "description": "(Required) The id of the stack the layer will belong to.",
                "args": []
            },
            {
                "name": "stats_password",
                "description": "(Required) The password to use for HAProxy stats.",
                "args": []
            },
            {
                "name": "name",
                "description": "(Optional) A human-readable name for the layer.",
                "args": []
            },
            {
                "name": "auto_assign_elastic_ips",
                "description": "(Optional) Whether to automatically assign an elastic IP address to the layer's instances.",
                "args": []
            },
            {
                "name": "auto_assign_public_ips",
                "description": "(Optional) For stacks belonging to a VPC, whether to automatically assign a public IP address to each of the layer's instances.",
                "args": []
            },
            {
                "name": "custom_instance_profile_arn",
                "description": "(Optional) The ARN of an IAM profile that will be used for the layer's instances.",
                "args": []
            },
            {
                "name": "custom_security_group_ids",
                "description": "(Optional) Ids for a set of security groups to apply to the layer's instances.",
                "args": []
            },
            {
                "name": "auto_healing",
                "description": "(Optional) Whether to enable auto-healing for the layer.",
                "args": []
            },
            {
                "name": "healthcheck_method",
                "description": "(Optional) HTTP method to use for instance healthchecks. Defaults to \"OPTIONS\".",
                "args": []
            },
            {
                "name": "healthcheck_url",
                "description": "(Optional) URL path to use for instance healthchecks. Defaults to \"/\".",
                "args": []
            },
            {
                "name": "install_updates_on_boot",
                "description": "(Optional) Whether to install OS and package updates on each instance when it boots.",
                "args": []
            },
            {
                "name": "instance_shutdown_timeout",
                "description": "(Optional) The time, in seconds, that OpsWorks will wait for Chef to complete after triggering the Shutdown event.",
                "args": []
            },
            {
                "name": "elastic_load_balancer",
                "description": "(Optional) Name of an Elastic Load Balancer to attach to this layer",
                "args": []
            },
            {
                "name": "drain_elb_on_shutdown",
                "description": "(Optional) Whether to enable Elastic Load Balancing connection draining.",
                "args": []
            },
            {
                "name": "stats_enabled",
                "description": "(Optional) Whether to enable HAProxy stats.",
                "args": []
            },
            {
                "name": "stats_url",
                "description": "(Optional) The HAProxy stats URL. Defaults to \"/haproxy?stats\".",
                "args": []
            },
            {
                "name": "stats_user",
                "description": "(Optional) The username for HAProxy stats. Defaults to \"opsworks\".",
                "args": []
            },
            {
                "name": "system_packages",
                "description": "(Optional) Names of a set of system packages to install on the layer's instances.",
                "args": []
            },
            {
                "name": "use_ebs_optimized_instances",
                "description": "(Optional) Whether to use EBS-optimized instances.",
                "args": []
            },
            {
                "name": "ebs_volume",
                "description": "(Optional) ebs_volume blocks, as described below, will each create an EBS volume and connect it to the layer's instances.",
                "args": []
            },
            {
                "name": "custom_json",
                "description": "(Optional) Custom JSON attributes to apply to the layer.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The id of the layer.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_opsworks_instance",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/opsworks_instance.html",
        "groupName": "OpsWorks Resources",
        "args": [
            {
                "name": "instance_type",
                "description": "(Required) The type of instance to start",
                "args": []
            },
            {
                "name": "stack_id",
                "description": "(Required) The id of the stack the instance will belong to.",
                "args": []
            },
            {
                "name": "layer_ids",
                "description": "(Required) The ids of the layers the instance will belong to.",
                "args": []
            },
            {
                "name": "state",
                "description": "(Optional) The desired state of the instance.  Can be either \"running\" or \"stopped\".",
                "args": []
            },
            {
                "name": "install_updates_on_boot",
                "description": "(Optional) Controls where to install OS and package updates when the instance boots.  Defaults to true.",
                "args": []
            },
            {
                "name": "auto_scaling_type",
                "description": "(Optional) Creates load-based or time-based instances.  If set, can be either: \"load\" or \"timer\".",
                "args": []
            },
            {
                "name": "availability_zone",
                "description": "(Optional) Name of the availability zone where instances will be created\nby default.",
                "args": []
            },
            {
                "name": "ebs_optimized",
                "description": "(Optional) If true, the launched EC2 instance will be EBS-optimized.",
                "args": []
            },
            {
                "name": "hostname",
                "description": "(Optional) The instance's host name.",
                "args": []
            },
            {
                "name": "architecture",
                "description": "(Optional) Machine architecture for created instances.  Can be either \"x86_64\" (the default) or \"i386\"",
                "args": []
            },
            {
                "name": "ami_id",
                "description": "(Optional) The AMI to use for the instance.  If an AMI is specified, os must be \"Custom\".",
                "args": []
            },
            {
                "name": "os",
                "description": "(Optional) Name of operating system that will be installed.",
                "args": []
            },
            {
                "name": "root_device_type",
                "description": "(Optional) Name of the type of root device instances will have by default.  Can be either \"ebs\" or \"instance-store\"",
                "args": []
            },
            {
                "name": "ssh_key_name",
                "description": "(Optional) Name of the SSH keypair that instances will have by default.",
                "args": []
            },
            {
                "name": "agent_version",
                "description": "(Optional) The AWS OpsWorks agent to install.  Defaults to \"INHERIT\".",
                "args": []
            },
            {
                "name": "subnet_id",
                "description": "(Optional) Subnet ID to attach to",
                "args": []
            },
            {
                "name": "tenancy",
                "description": "(Optional) Instance tenancy to use. Can be one of \"default\", \"dedicated\" or \"host\"",
                "args": []
            },
            {
                "name": "virtualization_type",
                "description": "(Optional) Keyword to choose what virtualization mode created instances\nwill use. Can be either \"paravirtual\" or \"hvm\".",
                "args": []
            },
            {
                "name": "root_block_device",
                "description": "(Optional) Customize details about the root block\ndevice of the instance. See Block Devices below for details.",
                "args": []
            },
            {
                "name": "ebs_block_device",
                "description": "(Optional) Additional EBS block devices to attach to the\ninstance.  See Block Devices below for details.",
                "args": []
            },
            {
                "name": "ephemeral_block_device",
                "description": "(Optional) Customize Ephemeral (also known as\n\"Instance Store\") volumes on the instance. See Block Devices below for details.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The id of the OpsWorks instance.",
                "args": []
            },
            {
                "name": "agent_version",
                "description": "The AWS OpsWorks agent version.",
                "args": []
            },
            {
                "name": "availability_zone",
                "description": "The availability zone of the instance.",
                "args": []
            },
            {
                "name": "ssh_key_name",
                "description": "The key name of the instance",
                "args": []
            },
            {
                "name": "public_dns",
                "description": "The public DNS name assigned to the instance. For EC2-VPC, this\nis only available if you've enabled DNS hostnames for your VPC",
                "args": []
            },
            {
                "name": "public_ip",
                "description": "The public IP address assigned to the instance, if applicable.",
                "args": []
            },
            {
                "name": "private_dns",
                "description": "The private DNS name assigned to the instance. Can only be\nused inside the Amazon EC2, and only available if you've enabled DNS hostnames\nfor your VPC",
                "args": []
            },
            {
                "name": "private_ip",
                "description": "The private IP address assigned to the instance",
                "args": []
            },
            {
                "name": "subnet_id",
                "description": "The VPC subnet ID.",
                "args": []
            },
            {
                "name": "tenancy",
                "description": "The Instance tenancy",
                "args": []
            },
            {
                "name": "security_group_ids",
                "description": "The associated security groups.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_opsworks_java_app_layer",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/opsworks_java_app_layer.html",
        "groupName": "OpsWorks Resources",
        "args": [
            {
                "name": "stack_id",
                "description": "(Required) The id of the stack the layer will belong to.",
                "args": []
            },
            {
                "name": "name",
                "description": "(Optional) A human-readable name for the layer.",
                "args": []
            },
            {
                "name": "app_server",
                "description": "(Optional) Keyword for the application container to use. Defaults to \"tomcat\".",
                "args": []
            },
            {
                "name": "app_server_version",
                "description": "(Optional) Version of the selected application container to use. Defaults to \"7\".",
                "args": []
            },
            {
                "name": "auto_assign_elastic_ips",
                "description": "(Optional) Whether to automatically assign an elastic IP address to the layer's instances.",
                "args": []
            },
            {
                "name": "auto_assign_public_ips",
                "description": "(Optional) For stacks belonging to a VPC, whether to automatically assign a public IP address to each of the layer's instances.",
                "args": []
            },
            {
                "name": "custom_instance_profile_arn",
                "description": "(Optional) The ARN of an IAM profile that will be used for the layer's instances.",
                "args": []
            },
            {
                "name": "custom_security_group_ids",
                "description": "(Optional) Ids for a set of security groups to apply to the layer's instances.",
                "args": []
            },
            {
                "name": "auto_healing",
                "description": "(Optional) Whether to enable auto-healing for the layer.",
                "args": []
            },
            {
                "name": "install_updates_on_boot",
                "description": "(Optional) Whether to install OS and package updates on each instance when it boots.",
                "args": []
            },
            {
                "name": "instance_shutdown_timeout",
                "description": "(Optional) The time, in seconds, that OpsWorks will wait for Chef to complete after triggering the Shutdown event.",
                "args": []
            },
            {
                "name": "jvm_type",
                "description": "(Optional) Keyword for the type of JVM to use. Defaults to openjdk.",
                "args": []
            },
            {
                "name": "jvm_options",
                "description": "(Optional) Options to set for the JVM.",
                "args": []
            },
            {
                "name": "jvm_version",
                "description": "(Optional) Version of JVM to use. Defaults to \"7\".",
                "args": []
            },
            {
                "name": "elastic_load_balancer",
                "description": "(Optional) Name of an Elastic Load Balancer to attach to this layer",
                "args": []
            },
            {
                "name": "drain_elb_on_shutdown",
                "description": "(Optional) Whether to enable Elastic Load Balancing connection draining.",
                "args": []
            },
            {
                "name": "system_packages",
                "description": "(Optional) Names of a set of system packages to install on the layer's instances.",
                "args": []
            },
            {
                "name": "use_ebs_optimized_instances",
                "description": "(Optional) Whether to use EBS-optimized instances.",
                "args": []
            },
            {
                "name": "ebs_volume",
                "description": "(Optional) ebs_volume blocks, as described below, will each create an EBS volume and connect it to the layer's instances.",
                "args": []
            },
            {
                "name": "custom_json",
                "description": "(Optional) Custom JSON attributes to apply to the layer.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The id of the layer.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_opsworks_memcached_layer",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/opsworks_memcached_layer.html",
        "groupName": "OpsWorks Resources",
        "args": [
            {
                "name": "stack_id",
                "description": "(Required) The id of the stack the layer will belong to.",
                "args": []
            },
            {
                "name": "name",
                "description": "(Optional) A human-readable name for the layer.",
                "args": []
            },
            {
                "name": "allocated_memory",
                "description": "(Optional) Amount of memory to allocate for the cache on each instance, in megabytes. Defaults to 512MB.",
                "args": []
            },
            {
                "name": "auto_assign_elastic_ips",
                "description": "(Optional) Whether to automatically assign an elastic IP address to the layer's instances.",
                "args": []
            },
            {
                "name": "auto_assign_public_ips",
                "description": "(Optional) For stacks belonging to a VPC, whether to automatically assign a public IP address to each of the layer's instances.",
                "args": []
            },
            {
                "name": "custom_instance_profile_arn",
                "description": "(Optional) The ARN of an IAM profile that will be used for the layer's instances.",
                "args": []
            },
            {
                "name": "custom_security_group_ids",
                "description": "(Optional) Ids for a set of security groups to apply to the layer's instances.",
                "args": []
            },
            {
                "name": "auto_healing",
                "description": "(Optional) Whether to enable auto-healing for the layer.",
                "args": []
            },
            {
                "name": "install_updates_on_boot",
                "description": "(Optional) Whether to install OS and package updates on each instance when it boots.",
                "args": []
            },
            {
                "name": "instance_shutdown_timeout",
                "description": "(Optional) The time, in seconds, that OpsWorks will wait for Chef to complete after triggering the Shutdown event.",
                "args": []
            },
            {
                "name": "elastic_load_balancer",
                "description": "(Optional) Name of an Elastic Load Balancer to attach to this layer",
                "args": []
            },
            {
                "name": "drain_elb_on_shutdown",
                "description": "(Optional) Whether to enable Elastic Load Balancing connection draining.",
                "args": []
            },
            {
                "name": "system_packages",
                "description": "(Optional) Names of a set of system packages to install on the layer's instances.",
                "args": []
            },
            {
                "name": "use_ebs_optimized_instances",
                "description": "(Optional) Whether to use EBS-optimized instances.",
                "args": []
            },
            {
                "name": "ebs_volume",
                "description": "(Optional) ebs_volume blocks, as described below, will each create an EBS volume and connect it to the layer's instances.",
                "args": []
            },
            {
                "name": "custom_json",
                "description": "(Optional) Custom JSON attributes to apply to the layer.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The id of the layer.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_opsworks_mysql_layer",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/opsworks_mysql_layer.html",
        "groupName": "OpsWorks Resources",
        "args": [
            {
                "name": "stack_id",
                "description": "(Required) The id of the stack the layer will belong to.",
                "args": []
            },
            {
                "name": "name",
                "description": "(Optional) A human-readable name for the layer.",
                "args": []
            },
            {
                "name": "auto_assign_elastic_ips",
                "description": "(Optional) Whether to automatically assign an elastic IP address to the layer's instances.",
                "args": []
            },
            {
                "name": "auto_assign_public_ips",
                "description": "(Optional) For stacks belonging to a VPC, whether to automatically assign a public IP address to each of the layer's instances.",
                "args": []
            },
            {
                "name": "custom_instance_profile_arn",
                "description": "(Optional) The ARN of an IAM profile that will be used for the layer's instances.",
                "args": []
            },
            {
                "name": "custom_security_group_ids",
                "description": "(Optional) Ids for a set of security groups to apply to the layer's instances.",
                "args": []
            },
            {
                "name": "auto_healing",
                "description": "(Optional) Whether to enable auto-healing for the layer.",
                "args": []
            },
            {
                "name": "install_updates_on_boot",
                "description": "(Optional) Whether to install OS and package updates on each instance when it boots.",
                "args": []
            },
            {
                "name": "instance_shutdown_timeout",
                "description": "(Optional) The time, in seconds, that OpsWorks will wait for Chef to complete after triggering the Shutdown event.",
                "args": []
            },
            {
                "name": "elastic_load_balancer",
                "description": "(Optional) Name of an Elastic Load Balancer to attach to this layer",
                "args": []
            },
            {
                "name": "drain_elb_on_shutdown",
                "description": "(Optional) Whether to enable Elastic Load Balancing connection draining.",
                "args": []
            },
            {
                "name": "root_password",
                "description": "(Optional) Root password to use for MySQL.",
                "args": []
            },
            {
                "name": "root_password_on_all_instances",
                "description": "(Optional) Whether to set the root user password to all instances in the stack so they can access the instances in this layer.",
                "args": []
            },
            {
                "name": "system_packages",
                "description": "(Optional) Names of a set of system packages to install on the layer's instances.",
                "args": []
            },
            {
                "name": "use_ebs_optimized_instances",
                "description": "(Optional) Whether to use EBS-optimized instances.",
                "args": []
            },
            {
                "name": "ebs_volume",
                "description": "(Optional) ebs_volume blocks, as described below, will each create an EBS volume and connect it to the layer's instances.",
                "args": []
            },
            {
                "name": "custom_json",
                "description": "(Optional) Custom JSON attributes to apply to the layer.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The id of the layer.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_opsworks_nodejs_app_layer",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/opsworks_nodejs_app_layer.html",
        "groupName": "OpsWorks Resources",
        "args": [
            {
                "name": "stack_id",
                "description": "(Required) The id of the stack the layer will belong to.",
                "args": []
            },
            {
                "name": "name",
                "description": "(Optional) A human-readable name for the layer.",
                "args": []
            },
            {
                "name": "auto_assign_elastic_ips",
                "description": "(Optional) Whether to automatically assign an elastic IP address to the layer's instances.",
                "args": []
            },
            {
                "name": "auto_assign_public_ips",
                "description": "(Optional) For stacks belonging to a VPC, whether to automatically assign a public IP address to each of the layer's instances.",
                "args": []
            },
            {
                "name": "custom_instance_profile_arn",
                "description": "(Optional) The ARN of an IAM profile that will be used for the layer's instances.",
                "args": []
            },
            {
                "name": "custom_security_group_ids",
                "description": "(Optional) Ids for a set of security groups to apply to the layer's instances.",
                "args": []
            },
            {
                "name": "auto_healing",
                "description": "(Optional) Whether to enable auto-healing for the layer.",
                "args": []
            },
            {
                "name": "install_updates_on_boot",
                "description": "(Optional) Whether to install OS and package updates on each instance when it boots.",
                "args": []
            },
            {
                "name": "instance_shutdown_timeout",
                "description": "(Optional) The time, in seconds, that OpsWorks will wait for Chef to complete after triggering the Shutdown event.",
                "args": []
            },
            {
                "name": "elastic_load_balancer",
                "description": "(Optional) Name of an Elastic Load Balancer to attach to this layer",
                "args": []
            },
            {
                "name": "drain_elb_on_shutdown",
                "description": "(Optional) Whether to enable Elastic Load Balancing connection draining.",
                "args": []
            },
            {
                "name": "nodejs_version",
                "description": "(Optional) The version of NodeJS to use. Defaults to \"0.10.38\".",
                "args": []
            },
            {
                "name": "system_packages",
                "description": "(Optional) Names of a set of system packages to install on the layer's instances.",
                "args": []
            },
            {
                "name": "use_ebs_optimized_instances",
                "description": "(Optional) Whether to use EBS-optimized instances.",
                "args": []
            },
            {
                "name": "ebs_volume",
                "description": "(Optional) ebs_volume blocks, as described below, will each create an EBS volume and connect it to the layer's instances.",
                "args": []
            },
            {
                "name": "custom_json",
                "description": "(Optional) Custom JSON attributes to apply to the layer.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The id of the layer.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_opsworks_permission",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/opsworks_permission.html",
        "groupName": "OpsWorks Resources",
        "args": [
            {
                "name": "allow_ssh",
                "description": "(Optional) Whether the user is allowed to use SSH to communicate with the instance",
                "args": []
            },
            {
                "name": "allow_sudo",
                "description": "(Optional) Whether the user is allowed to use sudo to elevate privileges",
                "args": []
            },
            {
                "name": "user_arn",
                "description": "(Required) The user's IAM ARN to set permissions for",
                "args": []
            },
            {
                "name": "level",
                "description": "(Optional) The users permission level. Mus be one of deny, show, deploy, manage, iam_only",
                "args": []
            },
            {
                "name": "stack_id",
                "description": "(Required) The stack to set the permissions for",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The computed id of the permission. Please note that this is only used internally to identify the permission. This value is not used in aws.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_opsworks_php_app_layer",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/opsworks_php_app_layer.html",
        "groupName": "OpsWorks Resources",
        "args": [
            {
                "name": "stack_id",
                "description": "(Required) The id of the stack the layer will belong to.",
                "args": []
            },
            {
                "name": "name",
                "description": "(Optional) A human-readable name for the layer.",
                "args": []
            },
            {
                "name": "auto_assign_elastic_ips",
                "description": "(Optional) Whether to automatically assign an elastic IP address to the layer's instances.",
                "args": []
            },
            {
                "name": "auto_assign_public_ips",
                "description": "(Optional) For stacks belonging to a VPC, whether to automatically assign a public IP address to each of the layer's instances.",
                "args": []
            },
            {
                "name": "custom_instance_profile_arn",
                "description": "(Optional) The ARN of an IAM profile that will be used for the layer's instances.",
                "args": []
            },
            {
                "name": "custom_security_group_ids",
                "description": "(Optional) Ids for a set of security groups to apply to the layer's instances.",
                "args": []
            },
            {
                "name": "auto_healing",
                "description": "(Optional) Whether to enable auto-healing for the layer.",
                "args": []
            },
            {
                "name": "install_updates_on_boot",
                "description": "(Optional) Whether to install OS and package updates on each instance when it boots.",
                "args": []
            },
            {
                "name": "instance_shutdown_timeout",
                "description": "(Optional) The time, in seconds, that OpsWorks will wait for Chef to complete after triggering the Shutdown event.",
                "args": []
            },
            {
                "name": "elastic_load_balancer",
                "description": "(Optional) Name of an Elastic Load Balancer to attach to this layer",
                "args": []
            },
            {
                "name": "drain_elb_on_shutdown",
                "description": "(Optional) Whether to enable Elastic Load Balancing connection draining.",
                "args": []
            },
            {
                "name": "system_packages",
                "description": "(Optional) Names of a set of system packages to install on the layer's instances.",
                "args": []
            },
            {
                "name": "use_ebs_optimized_instances",
                "description": "(Optional) Whether to use EBS-optimized instances.",
                "args": []
            },
            {
                "name": "ebs_volume",
                "description": "(Optional) ebs_volume blocks, as described below, will each create an EBS volume and connect it to the layer's instances.",
                "args": []
            },
            {
                "name": "custom_json",
                "description": "(Optional) Custom JSON attributes to apply to the layer.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The id of the layer.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_opsworks_rails_app_layer",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/opsworks_rails_app_layer.html",
        "groupName": "OpsWorks Resources",
        "args": [
            {
                "name": "stack_id",
                "description": "(Required) The id of the stack the layer will belong to.",
                "args": []
            },
            {
                "name": "name",
                "description": "(Optional) A human-readable name for the layer.",
                "args": []
            },
            {
                "name": "app_server",
                "description": "(Optional) Keyword for the app server to use. Defaults to \"apache_passenger\".",
                "args": []
            },
            {
                "name": "auto_assign_elastic_ips",
                "description": "(Optional) Whether to automatically assign an elastic IP address to the layer's instances.",
                "args": []
            },
            {
                "name": "auto_assign_public_ips",
                "description": "(Optional) For stacks belonging to a VPC, whether to automatically assign a public IP address to each of the layer's instances.",
                "args": []
            },
            {
                "name": "bundler_version",
                "description": "(Optional) When OpsWorks is managing Bundler, which version to use. Defaults to \"1.5.3\".",
                "args": []
            },
            {
                "name": "custom_instance_profile_arn",
                "description": "(Optional) The ARN of an IAM profile that will be used for the layer's instances.",
                "args": []
            },
            {
                "name": "custom_security_group_ids",
                "description": "(Optional) Ids for a set of security groups to apply to the layer's instances.",
                "args": []
            },
            {
                "name": "auto_healing",
                "description": "(Optional) Whether to enable auto-healing for the layer.",
                "args": []
            },
            {
                "name": "install_updates_on_boot",
                "description": "(Optional) Whether to install OS and package updates on each instance when it boots.",
                "args": []
            },
            {
                "name": "instance_shutdown_timeout",
                "description": "(Optional) The time, in seconds, that OpsWorks will wait for Chef to complete after triggering the Shutdown event.",
                "args": []
            },
            {
                "name": "elastic_load_balancer",
                "description": "(Optional) Name of an Elastic Load Balancer to attach to this layer",
                "args": []
            },
            {
                "name": "drain_elb_on_shutdown",
                "description": "(Optional) Whether to enable Elastic Load Balancing connection draining.",
                "args": []
            },
            {
                "name": "manage_bundler",
                "description": "(Optional) Whether OpsWorks should manage bundler. On by default.",
                "args": []
            },
            {
                "name": "passenger_version",
                "description": "(Optional) The version of Passenger to use. Defaults to \"4.0.46\".",
                "args": []
            },
            {
                "name": "ruby_version",
                "description": "(Optional) The version of Ruby to use. Defaults to \"2.0.0\".",
                "args": []
            },
            {
                "name": "rubygems_version",
                "description": "(Optional) The version of RubyGems to use. Defaults to \"2.2.2\".",
                "args": []
            },
            {
                "name": "system_packages",
                "description": "(Optional) Names of a set of system packages to install on the layer's instances.",
                "args": []
            },
            {
                "name": "use_ebs_optimized_instances",
                "description": "(Optional) Whether to use EBS-optimized instances.",
                "args": []
            },
            {
                "name": "ebs_volume",
                "description": "(Optional) ebs_volume blocks, as described below, will each create an EBS volume and connect it to the layer's instances.",
                "args": []
            },
            {
                "name": "custom_json",
                "description": "(Optional) Custom JSON attributes to apply to the layer.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The id of the layer.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_opsworks_rds_db_instance",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/opsworks_rds_db_instance.html",
        "groupName": "OpsWorks Resources",
        "args": [
            {
                "name": "stack_id",
                "description": "(Required) The stack to register a db inatance for. Changing this will force a new resource.",
                "args": []
            },
            {
                "name": "rds_db_instance_arn",
                "description": "(Required) The db instance to register for this stack. Changing this will force a new resource.",
                "args": []
            },
            {
                "name": "db_user",
                "description": "(Required) A db username",
                "args": []
            },
            {
                "name": "db_password",
                "description": "(Required) A db password",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The computed id. Please note that this is only used internally to identify the stack <-> instance relation. This value is not used in aws.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_opsworks_stack",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/opsworks_stack.html",
        "groupName": "OpsWorks Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the stack.",
                "args": []
            },
            {
                "name": "region",
                "description": "(Required) The name of the region where the stack will exist.",
                "args": []
            },
            {
                "name": "service_role_arn",
                "description": "(Required) The ARN of an IAM role that the OpsWorks service will act as.",
                "args": []
            },
            {
                "name": "default_instance_profile_arn",
                "description": "(Required) The ARN of an IAM Instance Profile that created instances\nwill have by default.",
                "args": []
            },
            {
                "name": "agent_version",
                "description": "(Optional) If set to \"LATEST\", OpsWorks will automatically install the latest version.",
                "args": []
            },
            {
                "name": "berkshelf_version",
                "description": "(Optional) If manage_berkshelf is enabled, the version of Berkshelf to use.",
                "args": []
            },
            {
                "name": "color",
                "description": "(Optional) Color to paint next to the stack's resources in the OpsWorks console.",
                "args": []
            },
            {
                "name": "default_availability_zone",
                "description": "(Optional) Name of the availability zone where instances will be created\nby default. This is required unless you set vpc_id.",
                "args": []
            },
            {
                "name": "configuration_manager_name",
                "description": "(Optional) Name of the configuration manager to use. Defaults to \"Chef\".",
                "args": []
            },
            {
                "name": "configuration_manager_version",
                "description": "(Optional) Version of the configuration manager to use. Defaults to \"11.4\".",
                "args": []
            },
            {
                "name": "custom_cookbooks_source",
                "description": "(Optional) When use_custom_cookbooks is set, provide this sub-object as\ndescribed below.",
                "args": []
            },
            {
                "name": "custom_json",
                "description": "(Optional) User defined JSON passed to \"Chef\". Use a \"here doc\" for multiline JSON.",
                "args": []
            },
            {
                "name": "default_os",
                "description": "(Optional) Name of OS that will be installed on instances by default.",
                "args": []
            },
            {
                "name": "default_root_device_type",
                "description": "(Optional) Name of the type of root device instances will have by default.",
                "args": []
            },
            {
                "name": "default_ssh_key_name",
                "description": "(Optional) Name of the SSH keypair that instances will have by default.",
                "args": []
            },
            {
                "name": "default_subnet_id",
                "description": "(Optional) Id of the subnet in which instances will be created by default. Mandatory\nif vpc_id is set, and forbidden if it isn't.",
                "args": []
            },
            {
                "name": "hostname_theme",
                "description": "(Optional) Keyword representing the naming scheme that will be used for instance hostnames\nwithin this stack.",
                "args": []
            },
            {
                "name": "manage_berkshelf",
                "description": "(Optional) Boolean value controlling whether Opsworks will run Berkshelf for this stack.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            },
            {
                "name": "use_custom_cookbooks",
                "description": "(Optional) Boolean value controlling whether the custom cookbook settings are\nenabled.",
                "args": []
            },
            {
                "name": "use_opsworks_security_groups",
                "description": "(Optional) Boolean value controlling whether the standard OpsWorks\nsecurity groups apply to created instances.",
                "args": []
            },
            {
                "name": "vpc_id",
                "description": "(Optional) The id of the VPC that this stack belongs to.",
                "args": []
            },
            {
                "name": "custom_json",
                "description": "(Optional) Custom JSON attributes to apply to the entire stack.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The id of the stack.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_opsworks_static_web_layer",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/opsworks_static_web_layer.html",
        "groupName": "OpsWorks Resources",
        "args": [
            {
                "name": "stack_id",
                "description": "(Required) The id of the stack the layer will belong to.",
                "args": []
            },
            {
                "name": "name",
                "description": "(Optional) A human-readable name for the layer.",
                "args": []
            },
            {
                "name": "auto_assign_elastic_ips",
                "description": "(Optional) Whether to automatically assign an elastic IP address to the layer's instances.",
                "args": []
            },
            {
                "name": "auto_assign_public_ips",
                "description": "(Optional) For stacks belonging to a VPC, whether to automatically assign a public IP address to each of the layer's instances.",
                "args": []
            },
            {
                "name": "custom_instance_profile_arn",
                "description": "(Optional) The ARN of an IAM profile that will be used for the layer's instances.",
                "args": []
            },
            {
                "name": "custom_security_group_ids",
                "description": "(Optional) Ids for a set of security groups to apply to the layer's instances.",
                "args": []
            },
            {
                "name": "auto_healing",
                "description": "(Optional) Whether to enable auto-healing for the layer.",
                "args": []
            },
            {
                "name": "install_updates_on_boot",
                "description": "(Optional) Whether to install OS and package updates on each instance when it boots.",
                "args": []
            },
            {
                "name": "instance_shutdown_timeout",
                "description": "(Optional) The time, in seconds, that OpsWorks will wait for Chef to complete after triggering the Shutdown event.",
                "args": []
            },
            {
                "name": "elastic_load_balancer",
                "description": "(Optional) Name of an Elastic Load Balancer to attach to this layer",
                "args": []
            },
            {
                "name": "drain_elb_on_shutdown",
                "description": "(Optional) Whether to enable Elastic Load Balancing connection draining.",
                "args": []
            },
            {
                "name": "system_packages",
                "description": "(Optional) Names of a set of system packages to install on the layer's instances.",
                "args": []
            },
            {
                "name": "use_ebs_optimized_instances",
                "description": "(Optional) Whether to use EBS-optimized instances.",
                "args": []
            },
            {
                "name": "ebs_volume",
                "description": "(Optional) ebs_volume blocks, as described below, will each create an EBS volume and connect it to the layer's instances.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The id of the layer.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_opsworks_user_profile",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/opsworks_user_profile.html",
        "groupName": "OpsWorks Resources",
        "args": [
            {
                "name": "user_arn",
                "description": "(Required) The user's IAM ARN",
                "args": []
            },
            {
                "name": "allow_self_management",
                "description": "(Optional) Whether users can specify their own SSH public key through the My Settings page",
                "args": []
            },
            {
                "name": "ssh_username",
                "description": "(Required) The ssh username, with witch this user wants to log in",
                "args": []
            },
            {
                "name": "ssh_public_key",
                "description": "(Optional) The users public key",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "Same value as user_arn",
                "args": []
            }
        ]
    },
    {
        "name": "aws_db_event_subscription",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/db_event_subscription.html",
        "groupName": "RDS Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the DB event subscription.",
                "args": []
            },
            {
                "name": "sns_topic",
                "description": "(Required) The SNS topic to send events to.",
                "args": []
            },
            {
                "name": "source_ids",
                "description": "(Optional) A list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. If specified, a source_type must also be specified.",
                "args": []
            },
            {
                "name": "source_type",
                "description": "(Optional) The type of source that will be generating the events.",
                "args": []
            },
            {
                "name": "event_categories",
                "description": "(Optional) A list of event categories for a SourceType that you want to subscribe to. See http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide//USER_Events.html",
                "args": []
            },
            {
                "name": "enabled",
                "description": "(Optional) A boolean flag to enable/disable the subscription. Defaults to true.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_db_instance",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/db_instance.html",
        "groupName": "RDS Resources",
        "args": [
            {
                "name": "allocated_storage",
                "description": "(Required unless a snapshot_identifier or\nreplicate_source_db is provided) The allocated storage in gigabytes.",
                "args": []
            },
            {
                "name": "allow_major_version_upgrade",
                "description": "(Optional) Indicates that major version\nupgrades are allowed. Changing this parameter does not result in an outage and\nthe change is asynchronously applied as soon as possible.",
                "args": []
            },
            {
                "name": "apply_immediately",
                "description": "(Optional) Specifies whether any database modifications\nare applied immediately, or during the next maintenance window. Default is\nfalse. See Amazon RDS Documentation for more\ninformation.\nfor more information.",
                "args": []
            },
            {
                "name": "auto_minor_version_upgrade",
                "description": "(Optional) Indicates that minor engine upgrades\nwill be applied automatically to the DB instance during the maintenance window.\nDefaults to true.",
                "args": []
            },
            {
                "name": "availability_zone",
                "description": "(Optional) The AZ for the RDS instance.",
                "args": []
            },
            {
                "name": "backup_retention_period",
                "description": "(Optional) The days to retain backups for. Must be\n1 or greater to be a source for a [Read Replica][1].",
                "args": []
            },
            {
                "name": "backup_window",
                "description": "(Optional) The daily time range (in UTC) during which\nautomated backups are created if they are enabled. Example: \"09:46-10:16\". Must\nnot overlap with maintenance_window.",
                "args": []
            },
            {
                "name": "character_set_name",
                "description": "(Optional) The character set name to use for DB\nencoding in Oracle instances. This can't be changed. See Oracle Character Sets\nSupported in Amazon\nRDS\nfor more information.",
                "args": []
            },
            {
                "name": "copy_tags_to_snapshot",
                "description": "– (Optional, boolean) On delete, copy all Instance\ntags to the final snapshot (if final_snapshot_identifier is specified).\nDefault is false.",
                "args": []
            },
            {
                "name": "db_subnet_group_name",
                "description": "(Optional) Name of DB subnet group. DB instance will\nbe created in the VPC associated with the DB subnet group. If unspecified, will\nbe created in the default VPC, or in EC2 Classic, if available.",
                "args": []
            },
            {
                "name": "engine",
                "description": "(Required unless a snapshot_identifier or replicate_source_db\nis provided) The database engine to use.",
                "args": []
            },
            {
                "name": "engine_version",
                "description": "(Optional) The engine version to use.",
                "args": []
            },
            {
                "name": "final_snapshot_identifier",
                "description": "(Optional) The name of your final DB snapshot\nwhen this DB instance is deleted. If omitted, no final snapshot will be made.",
                "args": []
            },
            {
                "name": "iam_database_authentication_enabled",
                "description": "(Optional) Specifies whether or\nmappings of AWS Identity and Access Management (IAM) accounts to database\naccounts is enabled.",
                "args": []
            },
            {
                "name": "identifier",
                "description": "(Optional, Forces new resource) The name of the RDS instance,\nif omitted, Terraform will assign a random, unique identifier.",
                "args": []
            },
            {
                "name": "identifier_prefix",
                "description": "(Optional, Forces new resource) Creates a unique\nidentifier beginning with the specified prefix. Conflicts with identifer.",
                "args": []
            },
            {
                "name": "instance_class",
                "description": "(Required) The instance type of the RDS instance.",
                "args": []
            },
            {
                "name": "iops",
                "description": "(Optional) The amount of provisioned IOPS. Setting this implies a\nstorage_type of \"io1\".",
                "args": []
            },
            {
                "name": "kms_key_id",
                "description": "(Optional) The ARN for the KMS encryption key. If creating an\nencrypted replica, set this to the destination KMS ARN.",
                "args": []
            },
            {
                "name": "license_model",
                "description": "(Optional, but required for some DB engines, i.e. Oracle\nSE1) License model information for this DB instance.",
                "args": []
            },
            {
                "name": "maintenance_window",
                "description": "(Optional) The window to perform maintenance in.\nSyntax: \"ddd:hh24:mi-ddd:hh24:mi\". Eg: \"Mon:00:00-Mon:03:00\". See RDS\nMaintenance Window\ndocs\nfor more information.",
                "args": []
            },
            {
                "name": "monitoring_interval",
                "description": "(Optional) The interval, in seconds, between points\nwhen Enhanced Monitoring metrics are collected for the DB instance. To disable\ncollecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid\nValues: 0, 1, 5, 10, 15, 30, 60.",
                "args": []
            },
            {
                "name": "monitoring_role_arn",
                "description": "(Optional) The ARN for the IAM role that permits RDS\nto send enhanced monitoring metrics to CloudWatch Logs. You can find more\ninformation on the AWS\nDocumentation\nwhat IAM permissions are needed to allow Enhanced Monitoring for RDS Instances.",
                "args": []
            },
            {
                "name": "multi_az",
                "description": "(Optional) Specifies if the RDS instance is multi-AZ",
                "args": []
            },
            {
                "name": "name",
                "description": "(Optional) The name of the database to create when the DB instance is created. If this parameter is not specified, no database is created in the DB instance. Note that this does not apply for Oracle or SQL Server engines. See the AWS documentation for more details on what applies for those engines.",
                "args": []
            },
            {
                "name": "option_group_name",
                "description": "(Optional) Name of the DB option group to associate.",
                "args": []
            },
            {
                "name": "parameter_group_name",
                "description": "(Optional) Name of the DB parameter group to\nassociate.",
                "args": []
            },
            {
                "name": "password",
                "description": "(Required unless a snapshot_identifier or replicate_source_db\nis provided) Password for the master DB user. Note that this may show up in\nlogs, and it will be stored in the state file.",
                "args": []
            },
            {
                "name": "port",
                "description": "(Optional) The port on which the DB accepts connections.",
                "args": []
            },
            {
                "name": "publicly_accessible",
                "description": "(Optional) Bool to control if instance is publicly\naccessible. Default is false.",
                "args": []
            },
            {
                "name": "replicate_source_db",
                "description": "(Optional) Specifies that this resource is a Replicate\ndatabase, and to use this value as the source database. This correlates to the\nidentifier of another Amazon RDS Database to replicate. See [DB Instance\nReplication][1] and Working with PostgreSQL and MySQL Read\nReplicas\nfor more information on using Replication.",
                "args": []
            },
            {
                "name": "security_group_names",
                "description": "(Optional/Deprecated) List of DB Security Groups to\nassociate. Only used for DB Instances on the EC2-Classic\nPlatform.",
                "args": []
            },
            {
                "name": "skip_final_snapshot",
                "description": "(Optional) Determines whether a final DB snapshot is\ncreated before the DB instance is deleted. If true is specified, no DBSnapshot\nis created. If false is specified, a DB snapshot is created before the DB\ninstance is deleted, using the value from final_snapshot_identifier. Default\nis false.",
                "args": []
            },
            {
                "name": "snapshot_identifier",
                "description": "(Optional) Specifies whether or not to create this\ndatabase from a snapshot. This correlates to the snapshot ID you'd find in the\nRDS console, e.g: rds:production-2015-06-26-06-05.",
                "args": []
            },
            {
                "name": "storage_encrypted",
                "description": "(Optional) Specifies whether the DB instance is\nencrypted. The default is false if not specified.",
                "args": []
            },
            {
                "name": "storage_type",
                "description": "(Optional) One of \"standard\" (magnetic), \"gp2\" (general\npurpose SSD), or \"io1\" (provisioned IOPS SSD). The default is \"io1\" if iops is\nspecified, \"standard\" if not. Note that this behaviour is different from the AWS\nweb console, where the default is \"gp2\".",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            },
            {
                "name": "timezone",
                "description": "(Optional) Time zone of the DB instance. timezone is currently\nonly supported by Microsoft SQL Server. The timezone can only be set on\ncreation. See MSSQL User\nGuide\nfor more information.",
                "args": []
            },
            {
                "name": "username",
                "description": "(Required unless a snapshot_identifier or replicate_source_db\nis provided) Username for the master DB user.",
                "args": []
            },
            {
                "name": "vpc_security_group_ids",
                "description": "(Optional) List of VPC security groups to\nassociate.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "address",
                "description": "The address of the RDS instance.",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the RDS instance.",
                "args": []
            },
            {
                "name": "allocated_storage",
                "description": "The amount of allocated storage.",
                "args": []
            },
            {
                "name": "availability_zone",
                "description": "The availability zone of the instance.",
                "args": []
            },
            {
                "name": "backup_retention_period",
                "description": "The backup retention period.",
                "args": []
            },
            {
                "name": "backup_window",
                "description": "The backup window.",
                "args": []
            },
            {
                "name": "ca_cert_identifier",
                "description": "Specifies the identifier of the CA certificate for the\nDB instance.",
                "args": []
            },
            {
                "name": "endpoint",
                "description": "The connection endpoint.",
                "args": []
            },
            {
                "name": "engine",
                "description": "The database engine.",
                "args": []
            },
            {
                "name": "engine_version",
                "description": "The database engine version.",
                "args": []
            },
            {
                "name": "hosted_zone_id",
                "description": "The canonical hosted zone ID of the DB instance (to be used\nin a Route 53 Alias record).",
                "args": []
            },
            {
                "name": "id",
                "description": "The RDS instance ID.",
                "args": []
            },
            {
                "name": "instance_class",
                "description": "The RDS instance class.",
                "args": []
            },
            {
                "name": "maintenance_window",
                "description": "The instance maintenance window.",
                "args": []
            },
            {
                "name": "multi_az",
                "description": "If the RDS instance is multi AZ enabled.",
                "args": []
            },
            {
                "name": "name",
                "description": "The database name.",
                "args": []
            },
            {
                "name": "port",
                "description": "The database port.",
                "args": []
            },
            {
                "name": "resource_id",
                "description": "The RDS Resource ID of this instance.",
                "args": []
            },
            {
                "name": "status",
                "description": "The RDS instance status.",
                "args": []
            },
            {
                "name": "storage_encrypted",
                "description": "Specifies whether the DB instance is encrypted.",
                "args": []
            },
            {
                "name": "username",
                "description": "The master username for the database.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_db_option_group",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/db_option_group.html",
        "groupName": "RDS Resources",
        "args": [
            {
                "name": "name",
                "description": "(Optional, Forces new resource) The name of the option group. If omitted, Terraform will assign a random, unique name. Must be lowercase, to match as it is stored in AWS.",
                "args": []
            },
            {
                "name": "name_prefix",
                "description": "(Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name. Must be lowercase, to match as it is stored in AWS.",
                "args": []
            },
            {
                "name": "option_group_description",
                "description": "(Optional) The description of the option group. Defaults to \"Managed by Terraform\".",
                "args": []
            },
            {
                "name": "engine_name",
                "description": "(Required) Specifies the name of the engine that this option group should be associated with.",
                "args": []
            },
            {
                "name": "major_engine_version",
                "description": "(Required) Specifies the major version of the engine that this option group should be associated with.",
                "args": []
            },
            {
                "name": "option",
                "description": "(Optional) A list of Options to apply.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The db option group name.",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the db option group.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_db_parameter_group",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/db_parameter_group.html",
        "groupName": "RDS Resources",
        "args": [
            {
                "name": "name",
                "description": "(Optional, Forces new resource) The name of the DB parameter group. If omitted, Terraform will assign a random, unique name.",
                "args": []
            },
            {
                "name": "name_prefix",
                "description": "(Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name.",
                "args": []
            },
            {
                "name": "family",
                "description": "(Required) The family of the DB parameter group.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) The description of the DB parameter group. Defaults to \"Managed by Terraform\".",
                "args": []
            },
            {
                "name": "parameter",
                "description": "(Optional) A list of DB parameters to apply. Note that parameters may differ from a family to an other. Full list of all parameters can be discovered via aws rds describe-db-parameters after initial creation of the group.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The db parameter group name.",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the db parameter group.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_db_security_group",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/db_security_group.html",
        "groupName": "RDS Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the DB security group.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) The description of the DB security group. Defaults to \"Managed by Terraform\".",
                "args": []
            },
            {
                "name": "ingress",
                "description": "(Required) A list of ingress rules.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The db security group ID.",
                "args": []
            },
            {
                "name": "arn",
                "description": "The arn of the DB security group.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_db_snapshot",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/db_snapshot.html",
        "groupName": "RDS Resources",
        "args": [
            {
                "name": "db_instance_identifier",
                "description": "(Required) The DB Instance Identifier from which to take the snapshot.",
                "args": []
            },
            {
                "name": "db_snapshot_identifier",
                "description": "(Required) The Identifier for the snapshot.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "allocated_storage",
                "description": "Specifies the allocated storage size in gigabytes (GB).",
                "args": []
            },
            {
                "name": "availability_zone",
                "description": "Specifies the name of the Availability Zone the DB instance was located in at the time of the DB snapshot.",
                "args": []
            },
            {
                "name": "db_snapshot_arn",
                "description": "The Amazon Resource Name (ARN) for the DB snapshot.",
                "args": []
            },
            {
                "name": "encrypted",
                "description": "Specifies whether the DB snapshot is encrypted.",
                "args": []
            },
            {
                "name": "engine",
                "description": "Specifies the name of the database engine.",
                "args": []
            },
            {
                "name": "engine_version",
                "description": "Specifies the version of the database engine.",
                "args": []
            },
            {
                "name": "iops",
                "description": "Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at the time of the snapshot.",
                "args": []
            },
            {
                "name": "kms_key_id",
                "description": "The ARN for the KMS encryption key.",
                "args": []
            },
            {
                "name": "license_model",
                "description": "License model information for the restored DB instance.",
                "args": []
            },
            {
                "name": "option_group_name",
                "description": "Provides the option group name for the DB snapshot.",
                "args": []
            },
            {
                "name": "source_db_snapshot_identifier",
                "description": "The DB snapshot Arn that the DB snapshot was copied from. It only has value in case of cross customer or cross region copy.",
                "args": []
            },
            {
                "name": "source_region",
                "description": "The region that the DB snapshot was created in or copied from.",
                "args": []
            },
            {
                "name": "status",
                "description": "Specifies the status of this DB snapshot.",
                "args": []
            },
            {
                "name": "storage_type",
                "description": "Specifies the storage type associated with DB snapshot.",
                "args": []
            },
            {
                "name": "vpc_id",
                "description": "Specifies the storage type associated with DB snapshot.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_db_subnet_group",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/db_subnet_group.html",
        "groupName": "RDS Resources",
        "args": [
            {
                "name": "name",
                "description": "(Optional, Forces new resource) The name of the DB subnet group. If omitted, Terraform will assign a random, unique name.",
                "args": []
            },
            {
                "name": "name_prefix",
                "description": "(Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) The description of the DB subnet group. Defaults to \"Managed by Terraform\".",
                "args": []
            },
            {
                "name": "subnet_ids",
                "description": "(Required) A list of VPC subnet IDs.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The db subnet group name.",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the db subnet group.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_rds_cluster",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/rds_cluster.html",
        "groupName": "RDS Resources",
        "args": [
            {
                "name": "cluster_identifier",
                "description": "(Optional, Forces new resources) The cluster identifier. If omitted, Terraform will assign a random, unique identifier.",
                "args": []
            },
            {
                "name": "cluster_identifier_prefix",
                "description": "(Optional, Forces new resource) Creates a unique cluster identifier beginning with the specified prefix. Conflicts with cluster_identifer.",
                "args": []
            },
            {
                "name": "database_name",
                "description": "(Optional) Name for an automatically created database on cluster creation. There are different naming restrictions per database engine: RDS Naming Constraints",
                "args": []
            },
            {
                "name": "master_password",
                "description": "(Required unless a snapshot_identifier is provided) Password for the master DB user. Note that this may\n  show up in logs, and it will be stored in the state file. Please refer to the RDS Naming Constraints",
                "args": []
            },
            {
                "name": "master_username",
                "description": "(Required unless a snapshot_identifier is provided) Username for the master DB user. Please refer to the RDS Naming Constraints",
                "args": []
            },
            {
                "name": "final_snapshot_identifier",
                "description": "(Optional) The name of your final DB snapshot\n  when this DB cluster is deleted. If omitted, no final snapshot will be\n  made.",
                "args": []
            },
            {
                "name": "skip_final_snapshot",
                "description": "(Optional) Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from final_snapshot_identifier. Default is false.",
                "args": []
            },
            {
                "name": "availability_zones",
                "description": "(Optional) A list of EC2 Availability Zones that\ninstances in the DB cluster can be created in",
                "args": []
            },
            {
                "name": "backup_retention_period",
                "description": "(Optional) The days to retain backups for. Default\n1",
                "args": []
            },
            {
                "name": "preferred_backup_window",
                "description": "(Optional) The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC\nDefault: A 30-minute window selected at random from an 8-hour block of time per region. e.g. 04:00-09:00",
                "args": []
            },
            {
                "name": "preferred_maintenance_window",
                "description": "(Optional) The weekly time range during which system maintenance can occur, in (UTC) e.g. wed:04:00-wed:04:30",
                "args": []
            },
            {
                "name": "port",
                "description": "(Optional) The port on which the DB accepts connections",
                "args": []
            },
            {
                "name": "vpc_security_group_ids",
                "description": "(Optional) List of VPC security groups to associate\nwith the Cluster",
                "args": []
            },
            {
                "name": "snapshot_identifier",
                "description": "(Optional) Specifies whether or not to create this cluster from a snapshot. This correlates to the snapshot ID you'd find in the RDS console, e.g: rds:production-2015-06-26-06-05.",
                "args": []
            },
            {
                "name": "storage_encrypted",
                "description": "(Optional) Specifies whether the DB cluster is encrypted. The default is false if not specified.",
                "args": []
            },
            {
                "name": "apply_immediately",
                "description": "(Optional) Specifies whether any cluster modifications\n   are applied immediately, or during the next maintenance window. Default is\n   false. See Amazon RDS Documentation for more information.",
                "args": []
            },
            {
                "name": "db_subnet_group_name",
                "description": "(Optional) A DB subnet group to associate with this DB instance. NOTE: This must match the db_subnet_group_name specified on every aws_rds_cluster_instance in the cluster.",
                "args": []
            },
            {
                "name": "db_cluster_parameter_group_name",
                "description": "(Optional) A cluster parameter group to associate with the cluster.",
                "args": []
            },
            {
                "name": "kms_key_id",
                "description": "(Optional) The ARN for the KMS encryption key. When specifying kms_key_id, storage_encrypted needs to be set to true.",
                "args": []
            },
            {
                "name": "iam_roles",
                "description": "(Optional) A List of ARNs for the IAM roles to associate to the RDS Cluster.",
                "args": []
            },
            {
                "name": "iam_database_authentication_enabled",
                "description": "(Optional) Specifies whether or mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled.",
                "args": []
            },
            {
                "name": "engine",
                "description": "(Optional) The name of the database engine to be used for this DB cluster. Defaults to aurora.",
                "args": []
            },
            {
                "name": "engine_version",
                "description": "(Optional) The database engine version.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The RDS Cluster Identifier",
                "args": []
            },
            {
                "name": "cluster_identifier",
                "description": "The RDS Cluster Identifier",
                "args": []
            },
            {
                "name": "cluster_resource_id",
                "description": "The RDS Cluster Resource ID",
                "args": []
            },
            {
                "name": "cluster_members",
                "description": "– List of RDS Instances that are a part of this cluster",
                "args": []
            },
            {
                "name": "allocated_storage",
                "description": "The amount of allocated storage",
                "args": []
            },
            {
                "name": "availability_zones",
                "description": "The availability zone of the instance",
                "args": []
            },
            {
                "name": "backup_retention_period",
                "description": "The backup retention period",
                "args": []
            },
            {
                "name": "preferred_backup_window",
                "description": "The backup window",
                "args": []
            },
            {
                "name": "preferred_maintenance_window",
                "description": "The maintenance window",
                "args": []
            },
            {
                "name": "endpoint",
                "description": "The DNS address of the RDS instance",
                "args": []
            },
            {
                "name": "reader_endpoint",
                "description": "A read-only endpoint for the Aurora cluster, automatically\nload-balanced across replicas",
                "args": []
            },
            {
                "name": "engine",
                "description": "The database engine",
                "args": []
            },
            {
                "name": "engine_version",
                "description": "The database engine version",
                "args": []
            },
            {
                "name": "maintenance_window",
                "description": "The instance maintenance window",
                "args": []
            },
            {
                "name": "database_name",
                "description": "The database name",
                "args": []
            },
            {
                "name": "port",
                "description": "The database port",
                "args": []
            },
            {
                "name": "status",
                "description": "The RDS instance status",
                "args": []
            },
            {
                "name": "master_username",
                "description": "The master username for the database",
                "args": []
            },
            {
                "name": "storage_encrypted",
                "description": "Specifies whether the DB cluster is encrypted",
                "args": []
            },
            {
                "name": "preferred_backup_window",
                "description": "The daily time range during which the backups happen",
                "args": []
            },
            {
                "name": "replication_source_identifier",
                "description": "ARN  of the source DB cluster if this DB cluster is created as a Read Replica.",
                "args": []
            },
            {
                "name": "hosted_zone_id",
                "description": "The Route53 Hosted Zone ID of the endpoint",
                "args": []
            }
        ]
    },
    {
        "name": "aws_rds_cluster_instance",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/rds_cluster_instance.html",
        "groupName": "RDS Resources",
        "args": [
            {
                "name": "identifier",
                "description": "(Optional, Forces new resource) The indentifier for the RDS instance, if omitted, Terraform will assign a random, unique identifier.",
                "args": []
            },
            {
                "name": "identifier_prefix",
                "description": "(Optional, Forces new resource) Creates a unique identifier beginning with the specified prefix. Conflicts with identifer.",
                "args": []
            },
            {
                "name": "cluster_identifier",
                "description": "(Required) The identifier of the aws_rds_cluster in which to launch this instance.",
                "args": []
            },
            {
                "name": "engine",
                "description": "(Optional) The name of the database engine to be used for the RDS instance. Defaults to aurora.",
                "args": []
            },
            {
                "name": "engine_version",
                "description": "(Optional) The database engine version.",
                "args": []
            },
            {
                "name": "instance_class",
                "description": "(Required) The instance class to use. For details on CPU\nand memory, see Scaling Aurora DB Instances. Aurora currently\nsupports the below instance classes.\ndb.t2.small\ndb.t2.medium\ndb.r3.large\ndb.r3.xlarge\ndb.r3.2xlarge\ndb.r3.4xlarge\ndb.r3.8xlarge",
                "args": []
            },
            {
                "name": "publicly_accessible",
                "description": "(Optional) Bool to control if instance is publicly accessible.\nDefault false. See the documentation on Creating DB Instances for more\ndetails on controlling this property.",
                "args": []
            },
            {
                "name": "db_subnet_group_name",
                "description": "(Required if publicly_accessible = false, Optional otherwise) A DB subnet group to associate with this DB instance. NOTE: This must match the db_subnet_group_name of the attached aws_rds_cluster.",
                "args": []
            },
            {
                "name": "db_parameter_group_name",
                "description": "(Optional) The name of the DB parameter group to associate with this instance.",
                "args": []
            },
            {
                "name": "apply_immediately",
                "description": "(Optional) Specifies whether any database modifications\n   are applied immediately, or during the next maintenance window. Default isfalse.",
                "args": []
            },
            {
                "name": "monitoring_role_arn",
                "description": "(Optional) The ARN for the IAM role that permits RDS to send\nenhanced monitoring metrics to CloudWatch Logs. You can find more information on the AWS Documentation\nwhat IAM permissions are needed to allow Enhanced Monitoring for RDS Instances.",
                "args": []
            },
            {
                "name": "monitoring_interval",
                "description": "(Optional) The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid Values: 0, 1, 5, 10, 15, 30, 60.",
                "args": []
            },
            {
                "name": "promotion_tier",
                "description": "(Optional) Default 0. Failover Priority setting on instance level. The reader who has lower tier has higher priority to get promoter to writer.",
                "args": []
            },
            {
                "name": "preferred_backup_window",
                "description": "(Optional) The daily time range during which automated backups are created if automated backups are enabled.\nEg: \"04:00-09:00\"",
                "args": []
            },
            {
                "name": "preferred_maintenance_window",
                "description": "(Optional) The window to perform maintenance in.\nSyntax: \"ddd:hh24:mi-ddd:hh24:mi\". Eg: \"Mon:00:00-Mon:03:00\".",
                "args": []
            },
            {
                "name": "auto_minor_version_upgrade",
                "description": "(Optional) Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window. Default true.",
                "args": []
            },
            {
                "name": "performance_insights_enabled",
                "description": "(Optional) Specifies whether Performance Insights is enabled or not.",
                "args": []
            },
            {
                "name": "performance_insights_kms_key_id",
                "description": "(Optional) The ARN for the KMS key to encrypt Performance Insights data. When specifying performance_insights_kms_key_id, performance_insights_enabled needs to be set to true.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the instance.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "cluster_identifier",
                "description": "The RDS Cluster Identifier",
                "args": []
            },
            {
                "name": "identifier",
                "description": "The Instance identifier",
                "args": []
            },
            {
                "name": "id",
                "description": "The Instance identifier",
                "args": []
            },
            {
                "name": "writer",
                "description": "– Boolean indicating if this instance is writable. False indicates\nthis instance is a read replica",
                "args": []
            },
            {
                "name": "allocated_storage",
                "description": "The amount of allocated storage",
                "args": []
            },
            {
                "name": "availability_zone",
                "description": "The availability zone of the instance",
                "args": []
            },
            {
                "name": "endpoint",
                "description": "The DNS address for this instance. May not be writable",
                "args": []
            },
            {
                "name": "engine",
                "description": "The database engine",
                "args": []
            },
            {
                "name": "engine_version",
                "description": "The database engine version",
                "args": []
            },
            {
                "name": "database_name",
                "description": "The database name",
                "args": []
            },
            {
                "name": "port",
                "description": "The database port",
                "args": []
            },
            {
                "name": "status",
                "description": "The RDS instance status",
                "args": []
            },
            {
                "name": "storage_encrypted",
                "description": "Specifies whether the DB cluster is encrypted.",
                "args": []
            },
            {
                "name": "kms_key_id",
                "description": "The ARN for the KMS encryption key if one is set to the cluster.",
                "args": []
            },
            {
                "name": "dbi_resource_id",
                "description": "The region-unique, immutable identifier for the DB instance.",
                "args": []
            },
            {
                "name": "performance_insights_enabled",
                "description": "Specifies whether Performance Insights is enabled or not.",
                "args": []
            },
            {
                "name": "performance_insights_kms_key_id",
                "description": "The ARN for the KMS encryption key used by Performance Insights.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_rds_cluster_parameter_group",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/rds_cluster_parameter_group.html",
        "groupName": "RDS Resources",
        "args": [
            {
                "name": "name",
                "description": "(Optional, Forces new resource) The name of the DB cluster parameter group. If omitted, Terraform will assign a random, unique name.",
                "args": []
            },
            {
                "name": "name_prefix",
                "description": "(Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name.",
                "args": []
            },
            {
                "name": "family",
                "description": "(Required) The family of the DB cluster parameter group.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) The description of the DB cluster parameter group. Defaults to \"Managed by Terraform\".",
                "args": []
            },
            {
                "name": "parameter",
                "description": "(Optional) A list of DB parameters to apply. Note that parameters may differ from a family to an other. Full list of all parameters can be discovered via aws rds describe-db-cluster-parameters after initial creation of the group.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The db cluster parameter group name.",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the db cluster parameter group.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_redshift_cluster",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/redshift_cluster.html",
        "groupName": "Redshift Resources",
        "args": [
            {
                "name": "cluster_identifier",
                "description": "(Required) The Cluster Identifier. Must be a lower case\nstring.",
                "args": []
            },
            {
                "name": "database_name",
                "description": "(Optional) The name of the first database to be created when the cluster is created.\nIf you do not provide a name, Amazon Redshift will create a default database called dev.",
                "args": []
            },
            {
                "name": "node_type",
                "description": "(Required) The node type to be provisioned for the cluster.",
                "args": []
            },
            {
                "name": "cluster_type",
                "description": "(Optional) The cluster type to use. Either single-node or multi-node.",
                "args": []
            },
            {
                "name": "master_password",
                "description": "(Required unless a snapshot_identifier is provided) Password for the master DB user.\n  Note that this may show up in logs, and it will be stored in the state file. Password must contain at least 8 chars and\n  contain at least one uppercase letter, one lowercase letter, and one number.",
                "args": []
            },
            {
                "name": "master_username",
                "description": "(Required unless a snapshot_identifier is provided) Username for the master DB user.",
                "args": []
            },
            {
                "name": "cluster_security_groups",
                "description": "(Optional) A list of security groups to be associated with this cluster.",
                "args": []
            },
            {
                "name": "vpc_security_group_ids",
                "description": "(Optional) A list of Virtual Private Cloud (VPC) security groups to be associated with the cluster.",
                "args": []
            },
            {
                "name": "cluster_subnet_group_name",
                "description": "(Optional) The name of a cluster subnet group to be associated with this cluster. If this parameter is not provided the resulting cluster will be deployed outside virtual private cloud (VPC).",
                "args": []
            },
            {
                "name": "availability_zone",
                "description": "(Optional) The EC2 Availability Zone (AZ) in which you want Amazon Redshift to provision the cluster. For example, if you have several EC2 instances running in a specific Availability Zone, then you might want the cluster to be provisioned in the same zone in order to decrease network latency.",
                "args": []
            },
            {
                "name": "preferred_maintenance_window",
                "description": "(Optional) The weekly time range (in UTC) during which automated cluster maintenance can occur.                                        Format: ddd:hh24:mi-ddd:hh24:mi",
                "args": []
            },
            {
                "name": "cluster_parameter_group_name",
                "description": "(Optional) The name of the parameter group to be associated with this cluster.",
                "args": []
            },
            {
                "name": "automated_snapshot_retention_period",
                "description": "(Optional) The number of days that automated snapshots are retained. If the value is 0, automated snapshots are disabled. Even if automated snapshots are disabled, you can still create manual snapshots when you want with create-cluster-snapshot. Default is 1.",
                "args": []
            },
            {
                "name": "port",
                "description": "(Optional) The port number on which the cluster accepts incoming connections.                The cluster is accessible only via the JDBC and ODBC connection strings. Part of the connection string requires the port on which the cluster will listen for incoming connections. Default port is 5439.",
                "args": []
            },
            {
                "name": "cluster_version",
                "description": "(Optional) The version of the Amazon Redshift engine software that you want to deploy on the cluster.                           The version selected runs on all the nodes in the cluster.",
                "args": []
            },
            {
                "name": "allow_version_upgrade",
                "description": "(Optional) If true , major version upgrades can be applied during the maintenance window to the Amazon Redshift engine that is running on the cluster. Default is true",
                "args": []
            },
            {
                "name": "number_of_nodes",
                "description": "(Optional) The number of compute nodes in the cluster. This parameter is required when the ClusterType parameter is specified as multi-node. Default is 1.",
                "args": []
            },
            {
                "name": "publicly_accessible",
                "description": "(Optional) If true, the cluster can be accessed from a public network. Default is true.",
                "args": []
            },
            {
                "name": "encrypted",
                "description": "(Optional) If true , the data in the cluster is encrypted at rest.",
                "args": []
            },
            {
                "name": "enhanced_vpc_routing",
                "description": "(Optional) If true , enhanced VPC routing is enabled.",
                "args": []
            },
            {
                "name": "kms_key_id",
                "description": "(Optional) The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.",
                "args": []
            },
            {
                "name": "elastic_ip",
                "description": "(Optional) The Elastic IP (EIP) address for the cluster.",
                "args": []
            },
            {
                "name": "skip_final_snapshot",
                "description": "(Optional) Determines whether a final snapshot of the cluster is created before Amazon Redshift deletes the cluster. If true , a final cluster snapshot is not created. If false , a final cluster snapshot is created before the cluster is deleted. Default is false.",
                "args": []
            },
            {
                "name": "final_snapshot_identifier",
                "description": "(Optional) The identifier of the final snapshot that is to be created immediately before deleting the cluster. If this parameter is provided, skip_final_snapshot must be false.",
                "args": []
            },
            {
                "name": "snapshot_identifier",
                "description": "(Optional) The name of the snapshot from which to create the new cluster.",
                "args": []
            },
            {
                "name": "snapshot_cluster_identifier",
                "description": "(Optional) The name of the cluster the source snapshot was created from.",
                "args": []
            },
            {
                "name": "owner_account",
                "description": "(Optional) The AWS customer account used to create or copy the snapshot. Required if you are restoring a snapshot you do not own, optional if you own the snapshot.",
                "args": []
            },
            {
                "name": "iam_roles",
                "description": "(Optional) A list of IAM Role ARNs to associate with the cluster. A Maximum of 10 can be associated to the cluster at any time.",
                "args": []
            },
            {
                "name": "logging",
                "description": "(Optional) Logging, documented below.",
                "args": []
            },
            {
                "name": "snapshot_copy",
                "description": "(Optional) Configuration of automatic copy of snapshots from one region to another. Documented below.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The Redshift Cluster ID.",
                "args": []
            },
            {
                "name": "cluster_identifier",
                "description": "The Cluster Identifier",
                "args": []
            },
            {
                "name": "cluster_type",
                "description": "The cluster type",
                "args": []
            },
            {
                "name": "node_type",
                "description": "The type of nodes in the cluster",
                "args": []
            },
            {
                "name": "database_name",
                "description": "The name of the default database in the Cluster",
                "args": []
            },
            {
                "name": "availability_zone",
                "description": "The availability zone of the Cluster",
                "args": []
            },
            {
                "name": "automated_snapshot_retention_period",
                "description": "The backup retention period",
                "args": []
            },
            {
                "name": "preferred_maintenance_window",
                "description": "The backup window",
                "args": []
            },
            {
                "name": "endpoint",
                "description": "The connection endpoint",
                "args": []
            },
            {
                "name": "encrypted",
                "description": "Whether the data in the cluster is encrypted",
                "args": []
            },
            {
                "name": "cluster_security_groups",
                "description": "The security groups associated with the cluster",
                "args": []
            },
            {
                "name": "vpc_security_group_ids",
                "description": "The VPC security group Ids associated with the cluster",
                "args": []
            },
            {
                "name": "port",
                "description": "The Port the cluster responds on",
                "args": []
            },
            {
                "name": "cluster_version",
                "description": "The version of Redshift engine software",
                "args": []
            },
            {
                "name": "cluster_parameter_group_name",
                "description": "The name of the parameter group to be associated with this cluster",
                "args": []
            },
            {
                "name": "cluster_subnet_group_name",
                "description": "The name of a cluster subnet group to be associated with this cluster",
                "args": []
            },
            {
                "name": "cluster_public_key",
                "description": "The public key for the cluster",
                "args": []
            },
            {
                "name": "cluster_revision_number",
                "description": "The specific revision number of the database in the cluster",
                "args": []
            }
        ]
    },
    {
        "name": "aws_redshift_parameter_group",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/redshift_parameter_group.html",
        "groupName": "Redshift Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the Redshift parameter group.",
                "args": []
            },
            {
                "name": "family",
                "description": "(Required) The family of the Redshift parameter group.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) The description of the Redshift parameter group. Defaults to \"Managed by Terraform\".",
                "args": []
            },
            {
                "name": "parameter",
                "description": "(Optional) A list of Redshift parameters to apply.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The Redshift parameter group name.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_redshift_security_group",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/redshift_security_group.html",
        "groupName": "Redshift Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the Redshift security group.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) The description of the Redshift security group. Defaults to \"Managed by Terraform\".",
                "args": []
            },
            {
                "name": "ingress",
                "description": "(Optional) A list of ingress rules.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The Redshift security group ID.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_redshift_subnet_group",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/redshift_subnet_group.html",
        "groupName": "Redshift Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the Redshift Subnet group.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) The description of the Redshift Subnet group. Defaults to \"Managed by Terraform\".",
                "args": []
            },
            {
                "name": "subnet_ids",
                "description": "(Required) An array of VPC subnet IDs.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The Redshift Subnet group ID.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_waf_byte_match_set",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/waf_byte_match_set.html",
        "groupName": "WAF Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name or description of the Byte Match Set.",
                "args": []
            },
            {
                "name": "byte_match_tuples",
                "description": "Specifies the bytes (typically a string that corresponds\nwith ASCII characters) that you want to search for in web requests,\nthe location in requests that you want to search, and other settings.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the WAF Byte Match Set.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_waf_ipset",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/waf_ipset.html",
        "groupName": "WAF Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name or description of the IPSet.",
                "args": []
            },
            {
                "name": "ip_set_descriptors",
                "description": "(Optional) Specifies the IP address type (IPV4 or IPV6)\n  and the IP address range (in CIDR format) that web requests originate from.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the WAF IPSet.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_waf_rule",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/waf_rule.html",
        "groupName": "WAF Resources",
        "args": [
            {
                "name": "metric_name",
                "description": "(Required) The name or description for the Amazon CloudWatch metric of this rule.",
                "args": []
            },
            {
                "name": "name",
                "description": "(Required) The name or description of the rule.",
                "args": []
            },
            {
                "name": "predicates",
                "description": "(Optional) One of ByteMatchSet, IPSet, SizeConstraintSet, SqlInjectionMatchSet, or XssMatchSet objects to include in a rule.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the WAF rule.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_waf_rate_based_rule",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/waf_rate_based_rule.html",
        "groupName": "WAF Resources",
        "args": [
            {
                "name": "metric_name",
                "description": "(Required) The name or description for the Amazon CloudWatch metric of this rule.",
                "args": []
            },
            {
                "name": "name",
                "description": "(Required) The name or description of the rule.",
                "args": []
            },
            {
                "name": "rate_key",
                "description": "(Required) Valid value is IP.",
                "args": []
            },
            {
                "name": "rate_limit",
                "description": "(Required) The maximum number of requests, which have an identical value in the field specified by the RateKey, allowed in a five-minute period. Minimum value is 2000.",
                "args": []
            },
            {
                "name": "predicates",
                "description": "(Optional) One of ByteMatchSet, IPSet, SizeConstraintSet, SqlInjectionMatchSet, or XssMatchSet objects to include in a rule.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the WAF rule.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_waf_size_constraint_set",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/waf_size_constraint_set.html",
        "groupName": "WAF Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name or description of the Size Constraint Set.",
                "args": []
            },
            {
                "name": "size_constraints",
                "description": "(Optional) Specifies the parts of web requests that you want to inspect the size of.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the WAF Size Constraint Set.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_waf_sql_injection_match_set",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/waf_sql_injection_match_set.html",
        "groupName": "WAF Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name or description of the SizeConstraintSet.",
                "args": []
            },
            {
                "name": "sql_injection_match_tuples",
                "description": "(Optional) The parts of web requests that you want AWS WAF to inspect for malicious SQL code and, if you want AWS WAF to inspect a header, the name of the header.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the WAF SQL Injection Match Set.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_waf_web_acl",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/waf_web_acl.html",
        "groupName": "WAF Resources",
        "args": [
            {
                "name": "default_action",
                "description": "(Required) The action that you want AWS WAF to take when a request doesn't match the criteria in any of the rules that are associated with the web ACL.",
                "args": []
            },
            {
                "name": "metric_name",
                "description": "(Required) The name or description for the Amazon CloudWatch metric of this web ACL.",
                "args": []
            },
            {
                "name": "name",
                "description": "(Required) The name or description of the web ACL.",
                "args": []
            },
            {
                "name": "rules",
                "description": "(Required) The rules to associate with the web ACL and the settings for each rule.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the WAF WebACL.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_waf_xss_match_set",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/waf_xss_match_set.html",
        "groupName": "WAF Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name or description of the SizeConstraintSet.",
                "args": []
            },
            {
                "name": "xss_match_tuples",
                "description": "(Optional) The parts of web requests that you want to inspect for cross-site scripting attacks.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the WAF XssMatchSet.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_wafregional_byte_match_set",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/wafregional_byte_match_set.html",
        "groupName": "WAF Regional Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name or description of the ByteMatchSet.",
                "args": []
            },
            {
                "name": "byte_match_tuple",
                "description": "(Optional)Settings for the ByteMatchSet, such as the bytes (typically a string that corresponds with ASCII characters) that you want AWS WAF to search for in web requests. ByteMatchTuple documented below.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the WAF ByteMatchSet.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_wafregional_ipset",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/wafregional_ipset.html",
        "groupName": "WAF Regional Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name or description of the IPSet.",
                "args": []
            },
            {
                "name": "ip_set_descriptor",
                "description": "(Optional) The IP address type and IP address range (in CIDR notation) from which web requests originate.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the WAF IPSet.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_route53_delegation_set",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/route53_delegation_set.html",
        "groupName": "Route53 Resources",
        "args": [
            {
                "name": "reference_name",
                "description": "(Optional) This is a reference name used in Caller Reference\n(helpful for identifying single delegation set amongst others)",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The delegation set ID",
                "args": []
            },
            {
                "name": "name_servers",
                "description": "A list of authoritative name servers for the hosted zone\n(effectively a list of NS records).",
                "args": []
            }
        ]
    },
    {
        "name": "aws_route53_health_check",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/route53_health_check.html",
        "groupName": "Route53 Resources",
        "args": [
            {
                "name": "reference_name",
                "description": "(Optional) This is a reference name used in Caller Reference\n  (helpful for identifying single health_check set amongst others)",
                "args": []
            },
            {
                "name": "fqdn",
                "description": "(Optional) The fully qualified domain name of the endpoint to be checked.",
                "args": []
            },
            {
                "name": "ip_address",
                "description": "(Optional) The IP address of the endpoint to be checked.",
                "args": []
            },
            {
                "name": "port",
                "description": "(Optional) The port of the endpoint to be checked.",
                "args": []
            },
            {
                "name": "type",
                "description": "(Required) The protocol to use when performing health checks. Valid values are HTTP, HTTPS, HTTP_STR_MATCH, HTTPS_STR_MATCH, TCP, CALCULATED and CLOUDWATCH_METRIC.",
                "args": []
            },
            {
                "name": "failure_threshold",
                "description": "(Required) The number of consecutive health checks that an endpoint must pass or fail.",
                "args": []
            },
            {
                "name": "request_interval",
                "description": "(Required) The number of seconds between the time that Amazon Route 53 gets a response from your endpoint and the time that it sends the next health-check request.",
                "args": []
            },
            {
                "name": "resource_path",
                "description": "(Optional) The path that you want Amazon Route 53 to request when performing health checks.",
                "args": []
            },
            {
                "name": "search_string",
                "description": "(Optional) String searched in the first 5120 bytes of the response body for check to be considered healthy.",
                "args": []
            },
            {
                "name": "measure_latency",
                "description": "(Optional) A Boolean value that indicates whether you want Route 53 to measure the latency between health checkers in multiple AWS regions and your endpoint and to display CloudWatch latency graphs in the Route 53 console.",
                "args": []
            },
            {
                "name": "invert_healthcheck",
                "description": "(Optional) A boolean value that indicates whether the status of health check should be inverted. For example, if a health check is healthy but Inverted is True , then Route 53 considers the health check to be unhealthy.",
                "args": []
            },
            {
                "name": "enable_sni",
                "description": "(Optional) A boolean value that indicates whether Route53 should send the fqdn to the endpoint when performing the health check. This defaults to AWS' defaults: when the type is \"HTTPS\" enable_sni defaults to true, when type is anything else enable_sni defaults to false.",
                "args": []
            },
            {
                "name": "child_healthchecks",
                "description": "(Optional) For a specified parent health check, a list of HealthCheckId values for the associated child health checks.",
                "args": []
            },
            {
                "name": "child_health_threshold",
                "description": "(Optional) The minimum number of child health checks that must be healthy for Route 53 to consider the parent health check to be healthy. Valid values are integers between 0 and 256, inclusive",
                "args": []
            },
            {
                "name": "cloudwatch_alarm_name",
                "description": "(Optional) The name of the CloudWatch alarm.",
                "args": []
            },
            {
                "name": "cloudwatch_alarm_region",
                "description": "(Optional) The CloudWatchRegion that the CloudWatch alarm was created in.",
                "args": []
            },
            {
                "name": "insufficient_data_health_status",
                "description": "(Optional) The status of the health check when CloudWatch has insufficient data about the state of associated alarm. Valid values are Healthy , Unhealthy and LastKnownStatus.",
                "args": []
            },
            {
                "name": "regions",
                "description": "(Optional) A list of AWS regions that you want Amazon Route 53 health checkers to check the specified endpoint from.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the health check.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_route53_query_log",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/route53_query_log.html",
        "groupName": "Route53 Resources",
        "args": [
            {
                "name": "cloudwatch_log_group_arn",
                "description": "(Required) CloudWatch log group ARN to send query logs.",
                "args": []
            },
            {
                "name": "zone_id",
                "description": "(Required) Route53 hosted zone ID to enable query logs.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The query logging configuration ID",
                "args": []
            }
        ]
    },
    {
        "name": "aws_route53_record",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/route53_record.html",
        "groupName": "Route53 Resources",
        "args": [
            {
                "name": "zone_id",
                "description": "(Required) The ID of the hosted zone to contain this record.",
                "args": []
            },
            {
                "name": "name",
                "description": "(Required) The name of the record.",
                "args": []
            },
            {
                "name": "type",
                "description": "(Required) The record type. Valid values are A, AAAA, CAA, CNAME, MX, NAPTR, NS, PTR, SOA, SPF, SRV and TXT.",
                "args": []
            },
            {
                "name": "ttl",
                "description": "(Required for non-alias records) The TTL of the record.",
                "args": []
            },
            {
                "name": "records",
                "description": "(Required for non-alias records) A string list of records. To specify a single record value longer than 255 characters such as a TXT record for DKIM, add \\\"\\\" inside the Terraform configuration string (e.g. \"first255characters\\\"\\\"morecharacters\").",
                "args": []
            },
            {
                "name": "set_identifier",
                "description": "(Optional) Unique identifier to differentiate records with routing policies from one another. Required if using failover, geolocation, latency, or weighted routing policies documented below.",
                "args": []
            },
            {
                "name": "health_check_id",
                "description": "(Optional) The health check the record should be associated with.",
                "args": []
            },
            {
                "name": "alias",
                "description": "(Optional) An alias block. Conflicts with ttl & records.\nAlias record documented below.",
                "args": []
            },
            {
                "name": "failover_routing_policy",
                "description": "(Optional) A block indicating the routing behavior when associated health check fails. Conflicts with any other routing policy. Documented below.",
                "args": []
            },
            {
                "name": "geolocation_routing_policy",
                "description": "(Optional) A block indicating a routing policy based on the geolocation of the requestor. Conflicts with any other routing policy. Documented below.",
                "args": []
            },
            {
                "name": "latency_routing_policy",
                "description": "(Optional) A block indicating a routing policy based on the latency between the requestor and an AWS region. Conflicts with any other routing policy. Documented below.",
                "args": []
            },
            {
                "name": "weighted_routing_policy",
                "description": "(Optional) A block indicating a weighted routing policy. Conflicts with any other routing policy. Documented below.",
                "args": []
            },
            {
                "name": "multivalue_answer_routing_policy",
                "description": "(Optional) A block indicating a multivalue answer routing policy. Conflicts with any other routing policy.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "fqdn",
                "description": "FQDN built using the zone domain and name",
                "args": []
            }
        ]
    },
    {
        "name": "aws_route53_zone",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/route53_zone.html",
        "groupName": "Route53 Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) This is the name of the hosted zone.",
                "args": []
            },
            {
                "name": "comment",
                "description": "(Optional) A comment for the hosted zone. Defaults to 'Managed by Terraform'.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the zone.",
                "args": []
            },
            {
                "name": "vpc_id",
                "description": "(Optional) The VPC to associate with a private hosted zone. Specifying vpc_id will create a private hosted zone.\nConflicts w/ delegation_set_id as delegation sets can only be used for public zones.",
                "args": []
            },
            {
                "name": "vpc_region",
                "description": "(Optional) The VPC's region. Defaults to the region of the AWS provider.",
                "args": []
            },
            {
                "name": "delegation_set_id",
                "description": "(Optional) The ID of the reusable delegation set whose NS records you want to assign to the hosted zone.\nConflicts w/ vpc_id as delegation sets can only be used for public zones.",
                "args": []
            },
            {
                "name": "force_destroy",
                "description": "(Optional) Whether to destroy all records (possibly managed outside of Terraform)\nin the zone when destroying the zone.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "zone_id",
                "description": "The Hosted Zone ID. This can be referenced by zone records.",
                "args": []
            },
            {
                "name": "name_servers",
                "description": "A list of name servers in associated (or default) delegation set.\nFind more about delegation sets in AWS docs.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_route53_zone_association",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/route53_zone_association.html",
        "groupName": "Route53 Resources",
        "args": [
            {
                "name": "zone_id",
                "description": "(Required) The private hosted zone to associate.",
                "args": []
            },
            {
                "name": "vpc_id",
                "description": "(Required) The VPC to associate with the private hosted zone.",
                "args": []
            },
            {
                "name": "vpc_region",
                "description": "(Optional) The VPC's region. Defaults to the region of the AWS provider.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The calculated unique identifier for the association.",
                "args": []
            },
            {
                "name": "zone_id",
                "description": "The ID of the hosted zone for the association.",
                "args": []
            },
            {
                "name": "vpc_id",
                "description": "The ID of the VPC for the association.",
                "args": []
            },
            {
                "name": "vpc_region",
                "description": "The region in which the VPC identified by vpc_id was created.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_s3_bucket",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/s3_bucket.html",
        "groupName": "S3 Resources",
        "args": [
            {
                "name": "bucket",
                "description": "(Optional, Forces new resource) The name of the bucket. If omitted, Terraform will assign a random, unique name.",
                "args": []
            },
            {
                "name": "bucket_prefix",
                "description": "(Optional, Forces new resource) Creates a unique bucket name beginning with the specified prefix. Conflicts with bucket.",
                "args": []
            },
            {
                "name": "acl",
                "description": "(Optional) The canned ACL to apply. Defaults to \"private\".",
                "args": []
            },
            {
                "name": "policy",
                "description": "(Optional) A valid bucket policy JSON document. Note that if the policy document is not specific enough (but still valid), Terraform may view the policy as constantly changing in a terraform plan. In this case, please make sure you use the verbose/specific version of the policy.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the bucket.",
                "args": []
            },
            {
                "name": "force_destroy",
                "description": "(Optional, Default:false ) A boolean that indicates all objects should be deleted from the bucket so that the bucket can be destroyed without error. These objects are not recoverable.",
                "args": []
            },
            {
                "name": "website",
                "description": "(Optional) A website object (documented below).",
                "args": []
            },
            {
                "name": "cors_rule",
                "description": "(Optional) A rule of Cross-Origin Resource Sharing (documented below).",
                "args": []
            },
            {
                "name": "versioning",
                "description": "(Optional) A state of versioning (documented below)",
                "args": []
            },
            {
                "name": "logging",
                "description": "(Optional) A settings of bucket logging (documented below).",
                "args": []
            },
            {
                "name": "lifecycle_rule",
                "description": "(Optional) A configuration of object lifecycle management (documented below).",
                "args": []
            },
            {
                "name": "acceleration_status",
                "description": "(Optional) Sets the accelerate configuration of an existing bucket. Can be Enabled or Suspended.",
                "args": []
            },
            {
                "name": "region",
                "description": "(Optional) If specified, the AWS region this bucket should reside in. Otherwise, the region used by the callee.",
                "args": []
            },
            {
                "name": "request_payer",
                "description": "(Optional) Specifies who should bear the cost of Amazon S3 data transfer.\nCan be either BucketOwner or Requester. By default, the owner of the S3 bucket would incur\nthe costs of any data transfer. See Requester Pays Buckets\ndeveloper guide for more information.",
                "args": []
            },
            {
                "name": "replication_configuration",
                "description": "(Optional) A configuration of replication configuration (documented below).",
                "args": []
            },
            {
                "name": "server_side_encryption_configuration",
                "description": "(Optional) A configuration of server-side encryption configuration (documented below)",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The name of the bucket.",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the bucket. Will be of format arn:aws:s3:::bucketname.",
                "args": []
            },
            {
                "name": "bucket_domain_name",
                "description": "The bucket domain name. Will be of format bucketname.s3.amazonaws.com.",
                "args": []
            },
            {
                "name": "hosted_zone_id",
                "description": "The Route 53 Hosted Zone ID for this bucket's region.",
                "args": []
            },
            {
                "name": "region",
                "description": "The AWS region this bucket resides in.",
                "args": []
            },
            {
                "name": "website_endpoint",
                "description": "The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.",
                "args": []
            },
            {
                "name": "website_domain",
                "description": "The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string. This is used to create Route 53 alias records.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_s3_bucket_notification",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/s3_bucket_notification.html",
        "groupName": "S3 Resources",
        "args": [
            {
                "name": "bucket",
                "description": "(Required) The name of the bucket to put notification configuration.",
                "args": []
            },
            {
                "name": "topic",
                "description": "(Optional) The notification configuration to SNS Topic (documented below).",
                "args": []
            },
            {
                "name": "queue",
                "description": "(Optional) The notification configuration to SQS Queue (documented below).",
                "args": []
            },
            {
                "name": "lambda_function",
                "description": "(Optional, Multiple) Used to configure notifications to a Lambda Function (documented below).",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_s3_bucket_object",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/s3_bucket_object.html",
        "groupName": "S3 Resources",
        "args": [
            {
                "name": "bucket",
                "description": "(Required) The name of the bucket to put the file in.",
                "args": []
            },
            {
                "name": "key",
                "description": "(Required) The name of the object once it is in the bucket.",
                "args": []
            },
            {
                "name": "source",
                "description": "(Required) The path to the source file being uploaded to the bucket.",
                "args": []
            },
            {
                "name": "content",
                "description": "(Required unless source given) The literal content being uploaded to the bucket.",
                "args": []
            },
            {
                "name": "acl",
                "description": "(Optional) The canned ACL to apply. Defaults to \"private\".",
                "args": []
            },
            {
                "name": "cache_control",
                "description": "(Optional) Specifies caching behavior along the request/reply chain Read w3c cache_control for further details.",
                "args": []
            },
            {
                "name": "content_disposition",
                "description": "(Optional) Specifies presentational information for the object. Read wc3 content_disposition for further information.",
                "args": []
            },
            {
                "name": "content_encoding",
                "description": "(Optional) Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. Read w3c content encoding for further information.",
                "args": []
            },
            {
                "name": "content_language",
                "description": "(Optional) The language the content is in e.g. en-US or en-GB.",
                "args": []
            },
            {
                "name": "content_type",
                "description": "(Optional) A standard MIME type describing the format of the object data, e.g. application/octet-stream. All Valid MIME Types are valid for this input.",
                "args": []
            },
            {
                "name": "website_redirect",
                "description": "(Optional) Specifies a target URL for website redirect.",
                "args": []
            },
            {
                "name": "storage_class",
                "description": "(Optional) Specifies the desired Storage Class\nfor the object. Can be either \"STANDARD\", \"REDUCED_REDUNDANCY\", or \"STANDARD_IA\". Defaults to \"STANDARD\".",
                "args": []
            },
            {
                "name": "etag",
                "description": "(Optional) Used to trigger updates. The only meaningful value is ${md5(file(\"path/to/file\"))}.\nThis attribute is not compatible with kms_key_id.",
                "args": []
            },
            {
                "name": "server_side_encryption",
                "description": "(Optional) Specifies server-side encryption of the object in S3. Valid values are \"AES256\" and \"aws:kms\".",
                "args": []
            },
            {
                "name": "kms_key_id",
                "description": "(Optional) Specifies the AWS KMS Key ARN to use for object encryption.\nThis value is a fully qualified ARN of the KMS Key. If using aws_kms_key,\nuse the exported arn attribute:`kms_key_id = \"${aws_kms_key.foo.arn}\"`",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the object.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "the key of the resource supplied above",
                "args": []
            },
            {
                "name": "etag",
                "description": "the ETag generated for the object (an MD5 sum of the object content).",
                "args": []
            },
            {
                "name": "version_id",
                "description": "A unique version ID value for the object, if bucket versioning\nis enabled.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_s3_bucket_policy",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/s3_bucket_policy.html",
        "groupName": "S3 Resources",
        "args": [
            {
                "name": "bucket",
                "description": "(Required) The name of the bucket to which to apply the policy.",
                "args": []
            },
            {
                "name": "policy",
                "description": "(Required) The text of the policy.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_ses_active_receipt_rule_set",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/ses_active_receipt_rule_set.html",
        "groupName": "SES Resources",
        "args": [
            {
                "name": "rule_set_name",
                "description": "(Required) The name of the rule set",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_ses_domain_identity",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/ses_domain_identity.html",
        "groupName": "SES Resources",
        "args": [
            {
                "name": "domain",
                "description": "(Required) The domain name to assign to SES",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The ARN of the domain identity.",
                "args": []
            },
            {
                "name": "verification_token",
                "description": "A code which when added to the domain as a TXT record\nwill signal to SES that the owner of the domain has authorised SES to act on\ntheir behalf. The domain identity will be in state \"verification pending\"\nuntil this is done. See below for an example of how this might be achieved\nwhen the domain is hosted in Route 53 and managed by Terraform.  Find out\nmore about verifying domains in Amazon SES in the AWS SES\ndocs.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ses_domain_dkim",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/ses_domain_dkim.html",
        "groupName": "SES Resources",
        "args": [
            {
                "name": "domain",
                "description": "(Required) Verified domain name to generate DKIM tokens for.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "dkim_tokens",
                "description": "DKIM tokens generated by SES.\nThese tokens should be used to create CNAME records used to verify SES Easy DKIM.\nSee below for an example of how this might be achieved\nwhen the domain is hosted in Route 53 and managed by Terraform. \nFind out more about verifying domains in Amazon SES \nin the AWS SES docs.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ses_receipt_filter",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/ses_receipt_filter.html",
        "groupName": "SES Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the filter",
                "args": []
            },
            {
                "name": "cidr",
                "description": "(Required) The IP address or address range to filter, in CIDR notation",
                "args": []
            },
            {
                "name": "policy",
                "description": "(Required) Block or Allow",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_ses_receipt_rule",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/ses_receipt_rule.html",
        "groupName": "SES Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the rule",
                "args": []
            },
            {
                "name": "rule_set_name",
                "description": "(Required) The name of the rule set",
                "args": []
            },
            {
                "name": "after",
                "description": "(Optional) The name of the rule to place this rule after",
                "args": []
            },
            {
                "name": "enabled",
                "description": "(Optional) If true, the rule will be enabled",
                "args": []
            },
            {
                "name": "recipients",
                "description": "(Optional) A list of email addresses",
                "args": []
            },
            {
                "name": "scan_enabled",
                "description": "(Optional) If true, incoming emails will be scanned for spam and viruses",
                "args": []
            },
            {
                "name": "tls_policy",
                "description": "(Optional) Require or Optional",
                "args": []
            },
            {
                "name": "add_header_action",
                "description": "(Optional) A list of Add Header Action blocks. Documented below.",
                "args": []
            },
            {
                "name": "bounce_action",
                "description": "(Optional) A list of Bounce Action blocks. Documented below.",
                "args": []
            },
            {
                "name": "lambda_action",
                "description": "(Optional) A list of Lambda Action blocks. Documented below.",
                "args": []
            },
            {
                "name": "s3_action",
                "description": "(Optional) A list of S3 Action blocks. Documented below.",
                "args": []
            },
            {
                "name": "sns_action",
                "description": "(Optional) A list of SNS Action blocks. Documented below.",
                "args": []
            },
            {
                "name": "stop_action",
                "description": "(Optional) A list of Stop Action blocks. Documented below.",
                "args": []
            },
            {
                "name": "workmail_action",
                "description": "(Optional) A list of WorkMail Action blocks. Documented below.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_ses_receipt_rule_set",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/ses_receipt_rule_set.html",
        "groupName": "SES Resources",
        "args": [
            {
                "name": "rule_set_name",
                "description": "(Required) The name of the rule set",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_ses_configuration_set",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/ses_configuration_set.html",
        "groupName": "SES Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the configuration set",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_ses_event_destination",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/ses_event_destination.html",
        "groupName": "SES Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the event destination",
                "args": []
            },
            {
                "name": "configuration_set_name",
                "description": "(Required) The name of the configuration set",
                "args": []
            },
            {
                "name": "enabled",
                "description": "(Optional) If true, the event destination will be enabled",
                "args": []
            },
            {
                "name": "matching_types",
                "description": "(Required) A list of matching types. May be any of \"send\", \"reject\", \"bounce\", \"complaint\", \"delivery\", \"open\", or \"click\".",
                "args": []
            },
            {
                "name": "cloudwatch_destination",
                "description": "(Optional) CloudWatch destination for the events",
                "args": []
            },
            {
                "name": "kinesis_destination",
                "description": "(Optional) Send the events to a kinesis firehose destination",
                "args": []
            },
            {
                "name": "sns_destination",
                "description": "(Optional) Send the events to an SNS Topic destination",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_ses_template",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/ses_template.html",
        "groupName": "SES Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the template. Cannot exceed 64 characters. You will refer to this name when you send email.",
                "args": []
            },
            {
                "name": "html",
                "description": "(Optional) The HTML body of the email. Must be less than 500KB in size, including both the text and HTML parts.",
                "args": []
            },
            {
                "name": "subject",
                "description": "(Optional) The subject line of the email.",
                "args": []
            },
            {
                "name": "text",
                "description": "(Optional) The email body that will be visible to recipients whose email clients do not display HTML. Must be less than 500KB in size, including both the text and HTML parts.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The name of the SES template",
                "args": []
            }
        ]
    },
    {
        "name": "aws_servicecatalog_portfolio",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/servicecatalog_portfolio.html",
        "groupName": "Service Catalog Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the portfolio.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Required) Description of the portfolio",
                "args": []
            },
            {
                "name": "provider_name",
                "description": "(Required) Name of the person or organization who owns the portfolio.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) Tags to apply to the connection.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the Service Catalog Portfolio.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_service_discovery_private_dns_namespace",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/service_discovery_private_dns_namespace.html",
        "groupName": "Service Discovery Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the namespace.",
                "args": []
            },
            {
                "name": "vpc",
                "description": "(Required) The ID of VPC that you want to associate the namespace with.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) The description that you specify for the namespace when you create it.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of a namespace.",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN that Amazon Route 53 assigns to the namespace when you create it.",
                "args": []
            },
            {
                "name": "hosted_zone",
                "description": "The ID for the hosted zone that Amazon Route 53 creates when you create a namespace.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_service_discovery_public_dns_namespace",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/service_discovery_public_dns_namespace.html",
        "groupName": "Service Discovery Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the namespace.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) The description that you specify for the namespace when you create it.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of a namespace.",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN that Amazon Route 53 assigns to the namespace when you create it.",
                "args": []
            },
            {
                "name": "hosted_zone",
                "description": "The ID for the hosted zone that Amazon Route 53 creates when you create a namespace.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_service_discovery_service",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/service_discovery_service.html",
        "groupName": "Service Discovery Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required, ForceNew) The name of the service.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) The description of the service.",
                "args": []
            },
            {
                "name": "dns_config",
                "description": "(Required) A complex type that contains information about the resource record sets that you want Amazon Route 53 to create when you register an instance.",
                "args": []
            },
            {
                "name": "health_check_config",
                "description": "(Optional) A complex type that contains settings for an optional health check. Only for Public DNS namespaces.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the service.",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the service.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_sfn_activity",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/sfn_activity.html",
        "groupName": "Step Function Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the activity to create.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The Amazon Resource Name (ARN) that identifies the created activity.",
                "args": []
            },
            {
                "name": "name",
                "description": "The name of the activity.",
                "args": []
            },
            {
                "name": "creation_date",
                "description": "The date the activity was created.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_sfn_state_machine",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/sfn_state_machine.html",
        "groupName": "Step Function Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the state machine.",
                "args": []
            },
            {
                "name": "definition",
                "description": "(Required) The Amazon States Language definition of the state machine.",
                "args": []
            },
            {
                "name": "role_arn",
                "description": "(Required) The Amazon Resource Name (ARN) of the IAM role to use for this state machine.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ARN of the state machine.",
                "args": []
            },
            {
                "name": "creation_date",
                "description": "The date the state machine was created.",
                "args": []
            },
            {
                "name": "status",
                "description": "The current status of the state machine. Either \"ACTIVE\" or \"DELETING\".",
                "args": []
            }
        ]
    },
    {
        "name": "aws_simpledb_domain",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/simpledb_domain.html",
        "groupName": "SimpleDB Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the SimpleDB domain",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The name of the SimpleDB domain",
                "args": []
            }
        ]
    },
    {
        "name": "aws_sns_platform_application",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/sns_platform_application.html",
        "groupName": "SNS Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The friendly name for the SNS platform application",
                "args": []
            },
            {
                "name": "platform",
                "description": "(Required) The platform that the app is registered with. See Platform for supported platforms.",
                "args": []
            },
            {
                "name": "platform_credential",
                "description": "(Required) Application Platform credential. See Credential for type of credential required for platform. The value of this attribute when stored into the Terraform state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.",
                "args": []
            },
            {
                "name": "event_delivery_failure_topic_arn",
                "description": "(Optional) SNS Topic triggered when a delivery to any of the platform endpoints associated with your platform application encounters a permanent failure.",
                "args": []
            },
            {
                "name": "event_endpoint_created_topic_arn",
                "description": "(Optional) SNS Topic triggered when a new platform endpoint is added to your platform application.",
                "args": []
            },
            {
                "name": "event_endpoint_deleted_topic_arn",
                "description": "(Optional) SNS Topic triggered when an existing platform endpoint is deleted from your platform application.",
                "args": []
            },
            {
                "name": "event_endpoint_updated_topic",
                "description": "(Optional) SNS Topic triggered when an existing platform endpoint is changed from your platform application.",
                "args": []
            },
            {
                "name": "failure_feedback_role_arn",
                "description": "(Optional) The IAM role permitted to receive failure feedback for this application.",
                "args": []
            },
            {
                "name": "platform_principal",
                "description": "(Optional) Application Platform principal. See Principal for type of principal required for platform. The value of this attribute when stored into the Terraform state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.",
                "args": []
            },
            {
                "name": "success_feedback_role_arn",
                "description": "(Optional) The IAM role permitted to receive success feedback for this application.",
                "args": []
            },
            {
                "name": "success_feedback_sample_rate",
                "description": "(Optional) The percentage of success to sample (0-100)",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ARN of the SNS platform application",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the SNS platform application",
                "args": []
            }
        ]
    },
    {
        "name": "aws_sns_topic",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/sns_topic.html",
        "groupName": "SNS Resources",
        "args": [
            {
                "name": "name",
                "description": "(Optional) The friendly name for the SNS topic. By default generated by Terraform.",
                "args": []
            },
            {
                "name": "name_prefix",
                "description": "(Optional) The friendly name for the SNS topic. Conflicts with name.",
                "args": []
            },
            {
                "name": "display_name",
                "description": "(Optional) The display name for the SNS topic",
                "args": []
            },
            {
                "name": "policy",
                "description": "(Optional) The fully-formed AWS policy as JSON",
                "args": []
            },
            {
                "name": "delivery_policy",
                "description": "(Optional) The SNS delivery policy",
                "args": []
            },
            {
                "name": "application_success_feedback_role_arn",
                "description": "(Optional) The IAM role permitted to receive success feedback for this topic",
                "args": []
            },
            {
                "name": "application_success_feedback_sample_rate",
                "description": "(Optional) Percentage of success to sample",
                "args": []
            },
            {
                "name": "application_failure_feedback_role_arn",
                "description": "(Optional) IAM role for failure feedback",
                "args": []
            },
            {
                "name": "http_success_feedback_role_arn",
                "description": "(Optional) The IAM role permitted to receive success feedback for this topic",
                "args": []
            },
            {
                "name": "http_success_feedback_sample_rate",
                "description": "(Optional) Percentage of success to sample",
                "args": []
            },
            {
                "name": "http_failure_feedback_role_arn",
                "description": "(Optional) IAM role for failure feedback",
                "args": []
            },
            {
                "name": "lambda_success_feedback_role_arn",
                "description": "(Optional) The IAM role permitted to receive success feedback for this topic",
                "args": []
            },
            {
                "name": "lambda_success_feedback_sample_rate",
                "description": "(Optional) Percentage of success to sample",
                "args": []
            },
            {
                "name": "lambda_failure_feedback_role_arn",
                "description": "(Optional) IAM role for failure feedback",
                "args": []
            },
            {
                "name": "sqs_success_feedback_role_arn",
                "description": "(Optional) The IAM role permitted to receive success feedback for this topic",
                "args": []
            },
            {
                "name": "sqs_success_feedback_sample_rate",
                "description": "(Optional) Percentage of success to sample",
                "args": []
            },
            {
                "name": "sqs_failure_feedback_role_arn",
                "description": "(Optional) IAM role for failure feedback",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ARN of the SNS topic",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the SNS topic, as a more obvious property (clone of id)",
                "args": []
            }
        ]
    },
    {
        "name": "aws_sns_topic_policy",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/sns_topic_policy.html",
        "groupName": "SNS Resources",
        "args": [
            {
                "name": "arn",
                "description": "(Required) The ARN of the SNS topic",
                "args": []
            },
            {
                "name": "policy",
                "description": "(Required) The fully-formed AWS policy as JSON",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_sns_topic_subscription",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/sns_topic_subscription.html",
        "groupName": "SNS Resources",
        "args": [
            {
                "name": "topic_arn",
                "description": "(Required) The ARN of the SNS topic to subscribe to",
                "args": []
            },
            {
                "name": "protocol",
                "description": "(Required) The protocol to use. The possible values for this are: sqs, sms, lambda, application. (http or https are partially supported, see below) (email is option but unsupported, see below).",
                "args": []
            },
            {
                "name": "endpoint",
                "description": "(Required) The endpoint to send data to, the contents will vary with the protocol. (see below for more information)",
                "args": []
            },
            {
                "name": "endpoint_auto_confirms",
                "description": "(Optional) Boolean indicating whether the end point is capable of auto confirming subscription e.g., PagerDuty (default is false)",
                "args": []
            },
            {
                "name": "confirmation_timeout_in_minutes",
                "description": "(Optional) Integer indicating number of minutes to wait in retying mode for fetching subscription arn before marking it as failure. Only applicable for http and https protocols (default is 1 minute).",
                "args": []
            },
            {
                "name": "raw_message_delivery",
                "description": "(Optional) Boolean indicating whether or not to enable raw message delivery (the original message is directly passed, not wrapped in JSON with the original message in the message property) (default is false).",
                "args": []
            },
            {
                "name": "filter_policy",
                "description": "(Optional) The text of a filter policy to the topic subscription.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ARN of the subscription",
                "args": []
            },
            {
                "name": "topic_arn",
                "description": "The ARN of the topic the subscription belongs to",
                "args": []
            },
            {
                "name": "protocol",
                "description": "The protocol being used",
                "args": []
            },
            {
                "name": "endpoint",
                "description": "The full endpoint to send data to (SQS ARN, HTTP(S) URL, Application ARN, SMS number, etc.)",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the subscription stored as a more user-friendly property",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ssm_activation",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/ssm_activation.html",
        "groupName": "SSM Resources",
        "args": [
            {
                "name": "name",
                "description": "(Optional) The default name of the registerd managed instance.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) The description of the resource that you want to register.",
                "args": []
            },
            {
                "name": "expiration_date",
                "description": "(Optional) The date by which this activation request should expire. The default value is 24 hours.",
                "args": []
            },
            {
                "name": "iam_role",
                "description": "(Required) The IAM Role to attach to the managed instance.",
                "args": []
            },
            {
                "name": "registration_limit",
                "description": "(Optional) The maximum number of managed instances you want to register. The default value is 1 instance.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "activation_code",
                "description": "The code the system generates when it processes the activation.",
                "args": []
            },
            {
                "name": "name",
                "description": "The default name of the registerd managed instance.",
                "args": []
            },
            {
                "name": "description",
                "description": "The description of the resource that was registered.",
                "args": []
            },
            {
                "name": "expired",
                "description": "If the current activation has expired.",
                "args": []
            },
            {
                "name": "expiration_date",
                "description": "The date by which this activation request should expire. The default value is 24 hours.",
                "args": []
            },
            {
                "name": "iam_role",
                "description": "The IAM Role attached to the managed instance.",
                "args": []
            },
            {
                "name": "registration_limit",
                "description": "The maximum number of managed instances you want to be registered. The default value is 1 instance.",
                "args": []
            },
            {
                "name": "registration_count",
                "description": "The number of managed instances that are currently registered using this activation.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ssm_association",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/ssm_association.html",
        "groupName": "SSM Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the SSM document to apply.",
                "args": []
            },
            {
                "name": "association_name",
                "description": "(Optional) The descriptive name for the association.",
                "args": []
            },
            {
                "name": "document_version",
                "description": "(Optional) The document version you want to associate with the target(s). Can be a specific version or the default version.",
                "args": []
            },
            {
                "name": "instance_id",
                "description": "(Optional) The instance ID to apply an SSM document to.",
                "args": []
            },
            {
                "name": "output_location",
                "description": "(Optional) An output location block. Output Location is documented below.",
                "args": []
            },
            {
                "name": "parameters",
                "description": "(Optional) A block of arbitrary string parameters to pass to the SSM document.",
                "args": []
            },
            {
                "name": "schedule_expression",
                "description": "(Optional) A cron expression when the association will be applied to the target(s).",
                "args": []
            },
            {
                "name": "targets",
                "description": "(Optional) A block containing the targets of the SSM association. Targets are documented below. AWS currently supports a maximum of 5 targets.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "name",
                "description": "The name of the SSM document to apply.",
                "args": []
            },
            {
                "name": "instance_ids",
                "description": "The instance id that the SSM document was applied to.",
                "args": []
            },
            {
                "name": "parameters",
                "description": "Additional parameters passed to the SSM document.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ssm_document",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/ssm_document.html",
        "groupName": "SSM Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the document.",
                "args": []
            },
            {
                "name": "content",
                "description": "(Required) The json content of the document.",
                "args": []
            },
            {
                "name": "document_type",
                "description": "(Required) The type of the document. Valid document types include: Command, Policy and Automation",
                "args": []
            },
            {
                "name": "permissions",
                "description": "(Optional) Additional Permissions to attach to the document. See Permissions below for details.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "name",
                "description": "The name of the document.",
                "args": []
            },
            {
                "name": "content",
                "description": "The json content of the document.",
                "args": []
            },
            {
                "name": "created_date",
                "description": "The date the document was created.",
                "args": []
            },
            {
                "name": "description",
                "description": "The description of the document.",
                "args": []
            },
            {
                "name": "schema_version",
                "description": "The schema version of the document.",
                "args": []
            },
            {
                "name": "document_type",
                "description": "The type of document created.",
                "args": []
            },
            {
                "name": "default_version",
                "description": "The default version of the document.",
                "args": []
            },
            {
                "name": "hash",
                "description": "The sha1 or sha256 of the document content",
                "args": []
            },
            {
                "name": "hash_type",
                "description": "\"Sha1\" \"Sha256\". The hashing algorithm used when hashing the content.",
                "args": []
            },
            {
                "name": "latest_version",
                "description": "The latest version of the document.",
                "args": []
            },
            {
                "name": "owner",
                "description": "The AWS user account of the person who created the document.",
                "args": []
            },
            {
                "name": "status",
                "description": "\"Creating\", \"Active\" or \"Deleting\". The current status of the document.",
                "args": []
            },
            {
                "name": "parameter",
                "description": "The parameters that are available to this document.",
                "args": []
            },
            {
                "name": "permissions",
                "description": "The permissions of how this document should be shared.",
                "args": []
            },
            {
                "name": "platform_types",
                "description": "A list of OS platforms compatible with this SSM document, either \"Windows\" or \"Linux\".",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ssm_maintenance_window",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/ssm_maintenance_window.html",
        "groupName": "SSM Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the maintenance window.",
                "args": []
            },
            {
                "name": "schedule",
                "description": "(Required) The schedule of the Maintenance Window in the form of a cron or rate expression.",
                "args": []
            },
            {
                "name": "cutoff",
                "description": "(Required) The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.",
                "args": []
            },
            {
                "name": "duration",
                "description": "(Required) The duration of the Maintenance Window in hours.",
                "args": []
            },
            {
                "name": "allow_unassociated_targets",
                "description": "(Optional) Whether targets must be registered with the Maintenance Window before tasks can be defined for those targets.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the maintenance window.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ssm_maintenance_window_target",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/ssm_maintenance_window_target.html",
        "groupName": "SSM Resources",
        "args": [
            {
                "name": "window_id",
                "description": "(Required) The Id of the maintenance window to register the target with.",
                "args": []
            },
            {
                "name": "resource_type",
                "description": "(Required) The type of target being registered with the Maintenance Window. Possible values INSTANCE.",
                "args": []
            },
            {
                "name": "targets",
                "description": "(Required) The targets (either instances or tags). Instances are specified using Key=instanceids,Values=instanceid1,instanceid2. Tags are specified using Key=tag name,Values=tag value.",
                "args": []
            },
            {
                "name": "owner_information",
                "description": "(Optional) User-provided value that will be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the maintenance window target.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ssm_maintenance_window_task",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/ssm_maintenance_window_task.html",
        "groupName": "SSM Resources",
        "args": [
            {
                "name": "window_id",
                "description": "(Required) The Id of the maintenance window to register the task with.",
                "args": []
            },
            {
                "name": "max_concurrency",
                "description": "(Required) The maximum number of targets this task can be run for in parallel.",
                "args": []
            },
            {
                "name": "max_errors",
                "description": "(Required) The maximum number of errors allowed before this task stops being scheduled.",
                "args": []
            },
            {
                "name": "task_type",
                "description": "(Required) The type of task being registered. The only allowed value is RUN_COMMAND.",
                "args": []
            },
            {
                "name": "task_arn",
                "description": "(Required) The ARN of the task to execute.",
                "args": []
            },
            {
                "name": "service_role_arn",
                "description": "(Required) The role that should be assumed when executing the task.",
                "args": []
            },
            {
                "name": "targets",
                "description": "(Required) The targets (either instances or window target ids). Instances are specified using Key=InstanceIds,Values=instanceid1,instanceid2. Window target ids are specified using Key=WindowTargetIds,Values=window target id1, window target id2.",
                "args": []
            },
            {
                "name": "priority",
                "description": "(Optional) The priority of the task in the Maintenance Window, the lower the number the higher the priority. Tasks in a Maintenance Window are scheduled in priority order with tasks that have the same priority scheduled in parallel.",
                "args": []
            },
            {
                "name": "logging_info",
                "description": "(Optional) A structure containing information about an Amazon S3 bucket to write instance-level logs to. Documented below.",
                "args": []
            },
            {
                "name": "task_parameters",
                "description": "(Optional) A structure containing information about parameters required by the particular task_arn. Documented below.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the maintenance window task.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ssm_patch_baseline",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/ssm_patch_baseline.html",
        "groupName": "SSM Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the patch baseline.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) The description of the patch baseline.",
                "args": []
            },
            {
                "name": "operating_system",
                "description": "(Optional) Defines the operating system the patch baseline applies to. Supported operating systems include WINDOWS, AMAZON_LINUX, UBUNTU and REDHAT_ENTERPRISE_LINUX. The Default value is WINDOWS.",
                "args": []
            },
            {
                "name": "approved_patches_compliance_level",
                "description": "(Optional) Defines the compliance level for approved patches. This means that if an approved patch is reported as missing, this is the severity of the compliance violation. Valid compliance levels include the following: CRITICAL, HIGH, MEDIUM, LOW, INFORMATIONAL, UNSPECIFIED. The default value is UNSPECIFIED.",
                "args": []
            },
            {
                "name": "approved_patches",
                "description": "(Optional) A list of explicitly approved patches for the baseline.",
                "args": []
            },
            {
                "name": "rejected_patches",
                "description": "(Optional) A list of rejected patches.",
                "args": []
            },
            {
                "name": "global_filter",
                "description": "(Optional) A set of global filters used to exclude patches from the baseline. Up to 4 global filters can be specified using Key/Value pairs. Valid Keys are PRODUCT | CLASSIFICATION | MSRC_SEVERITY | PATCH_ID.",
                "args": []
            },
            {
                "name": "approval_rule",
                "description": "(Optional) A set of rules used to include patches in the baseline. up to 10 approval rules can be specified. Each approval_rule block requires the fields documented below.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the patch baseline.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ssm_patch_group",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/ssm_patch_group.html",
        "groupName": "SSM Resources",
        "args": [
            {
                "name": "baseline_id",
                "description": "(Required) The ID of the patch baseline to register the patch group with.",
                "args": []
            },
            {
                "name": "patch_group",
                "description": "(Required) The name of the patch group that should be registered with the patch baseline.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the patch baseline.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ssm_parameter",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/ssm_parameter.html",
        "groupName": "SSM Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) The name of the parameter.",
                "args": []
            },
            {
                "name": "type",
                "description": "(Required) The type of the parameter. Valid types are String, StringList and SecureString.",
                "args": []
            },
            {
                "name": "value",
                "description": "(Required) The value of the parameter.",
                "args": []
            },
            {
                "name": "key_id",
                "description": "(Optional) The KMS key id or arn for encrypting a SecureString.",
                "args": []
            },
            {
                "name": "overwrite",
                "description": "(Optional) Overwrite an existing parameter. If not specified, will default to false.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "arn",
                "description": "The ARN of the parameter.",
                "args": []
            },
            {
                "name": "name",
                "description": "(Required) The name of the parameter.",
                "args": []
            },
            {
                "name": "type",
                "description": "(Required) The type of the parameter. Valid types are String, StringList and SecureString.",
                "args": []
            },
            {
                "name": "value",
                "description": "(Required) The value of the parameter.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_ssm_resource_data_sync",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/ssm_resource_data_sync.html",
        "groupName": "SSM Resources",
        "args": [
            {
                "name": "name",
                "description": "(Required) Name for the configuration.",
                "args": []
            },
            {
                "name": "s3_destination",
                "description": "(Required) Amazon S3 configuration details for the sync.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_sqs_queue",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/sqs_queue.html",
        "groupName": "SQS Resources",
        "args": [
            {
                "name": "name",
                "description": "(Optional) This is the human-readable name of the queue. If omitted, Terraform will assign a random name.",
                "args": []
            },
            {
                "name": "name_prefix",
                "description": "(Optional) Creates a unique name beginning with the specified prefix. Conflicts with name.",
                "args": []
            },
            {
                "name": "visibility_timeout_seconds",
                "description": "(Optional) The visibility timeout for the queue. An integer from 0 to 43200 (12 hours). The default for this attribute is 30. For more information about visibility timeout, see AWS docs.",
                "args": []
            },
            {
                "name": "message_retention_seconds",
                "description": "(Optional) The number of seconds Amazon SQS retains a message. Integer representing seconds, from 60 (1 minute) to 1209600 (14 days). The default for this attribute is 345600 (4 days).",
                "args": []
            },
            {
                "name": "max_message_size",
                "description": "(Optional) The limit of how many bytes a message can contain before Amazon SQS rejects it. An integer from 1024 bytes (1 KiB) up to 262144 bytes (256 KiB). The default for this attribute is 262144 (256 KiB).",
                "args": []
            },
            {
                "name": "delay_seconds",
                "description": "(Optional) The time in seconds that the delivery of all messages in the queue will be delayed. An integer from 0 to 900 (15 minutes). The default for this attribute is 0 seconds.",
                "args": []
            },
            {
                "name": "receive_wait_time_seconds",
                "description": "(Optional) The time for which a ReceiveMessage call will wait for a message to arrive (long polling) before returning. An integer from 0 to 20 (seconds). The default for this attribute is 0, meaning that the call will return immediately.",
                "args": []
            },
            {
                "name": "policy",
                "description": "(Optional) The JSON policy for the SQS queue",
                "args": []
            },
            {
                "name": "redrive_policy",
                "description": "(Optional) The JSON policy to set up the Dead Letter Queue, see AWS docs. Note: when specifying maxReceiveCount, you must specify it as an integer (5), and not a string (\"5\").",
                "args": []
            },
            {
                "name": "fifo_queue",
                "description": "(Optional) Boolean designating a FIFO queue. If not set, it defaults to false making it standard.",
                "args": []
            },
            {
                "name": "content_based_deduplication",
                "description": "(Optional) Enables content-based deduplication for FIFO queues. For more information, see the related documentation",
                "args": []
            },
            {
                "name": "kms_master_key_id",
                "description": "(Optional) The ID of an AWS-managed customer master key (CMK) for Amazon SQS or a custom CMK. For more information, see Key Terms.",
                "args": []
            },
            {
                "name": "kms_data_key_reuse_period_seconds",
                "description": "(Optional) The length of time, in seconds, for which Amazon SQS can reuse a data key to encrypt or decrypt messages before calling AWS KMS again. An integer representing seconds, between 60 seconds (1 minute) and 86,400 seconds (24 hours). The default is 300 (5 minutes).",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the queue.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The URL for the created Amazon SQS queue.",
                "args": []
            },
            {
                "name": "arn",
                "description": "The ARN of the SQS queue",
                "args": []
            }
        ]
    },
    {
        "name": "aws_sqs_queue_policy",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/sqs_queue_policy.html",
        "groupName": "SQS Resources",
        "args": [
            {
                "name": "queue_url",
                "description": "(Required) The URL of the SQS Queue to which to attach the policy",
                "args": []
            },
            {
                "name": "policy",
                "description": "(Required) The JSON policy for the SQS queue",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_customer_gateway",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/customer_gateway.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "bgp_asn",
                "description": "(Required) The gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).",
                "args": []
            },
            {
                "name": "ip_address",
                "description": "(Required) The IP address of the gateway's Internet-routable external interface.",
                "args": []
            },
            {
                "name": "type",
                "description": "(Required) The type of customer gateway. The only type AWS\nsupports at this time is \"ipsec.1\".",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) Tags to apply to the gateway.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_default_network_acl",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/default_network_acl.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "default_network_acl_id",
                "description": "(Required) The Network ACL ID to manage. This\nattribute is exported from aws_vpc, or manually found via the AWS Console.",
                "args": []
            },
            {
                "name": "subnet_ids",
                "description": "(Optional) A list of Subnet IDs to apply the ACL to. See the\nnotes below on managing Subnets in the Default Network ACL",
                "args": []
            },
            {
                "name": "ingress",
                "description": "(Optional) Specifies an ingress rule. Parameters defined below.",
                "args": []
            },
            {
                "name": "egress",
                "description": "(Optional) Specifies an egress rule. Parameters defined below.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the Default Network ACL",
                "args": []
            },
            {
                "name": "vpc_id",
                "description": "The ID of the associated VPC",
                "args": []
            },
            {
                "name": "ingress",
                "description": "Set of ingress rules",
                "args": []
            },
            {
                "name": "egress",
                "description": "Set of egress rules",
                "args": []
            },
            {
                "name": "subnet_ids",
                "description": "– IDs of associated Subnets",
                "args": []
            }
        ]
    },
    {
        "name": "aws_default_route_table",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/default_route_table.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "default_route_table_id",
                "description": "(Required) The ID of the Default Routing Table.",
                "args": []
            },
            {
                "name": "route",
                "description": "(Optional) A list of route objects. Their keys are documented below.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            },
            {
                "name": "propagating_vgws",
                "description": "(Optional) A list of virtual gateways for propagation.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the routing table",
                "args": []
            }
        ]
    },
    {
        "name": "aws_default_security_group",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/default_security_group.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "ingress",
                "description": "(Optional) Can be specified multiple times for each\n ingress rule. Each ingress block supports fields documented below.",
                "args": []
            },
            {
                "name": "egress",
                "description": "(Optional, VPC only) Can be specified multiple times for eachegress rule. Each egress block supports fields documented below.",
                "args": []
            },
            {
                "name": "vpc_id",
                "description": "(Optional, Forces new resource) The VPC ID. Note that changing\nthe vpc_id will not restore any default security group rules that were\nmodified, added, or removed. It will be left in it's current state",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the security group",
                "args": []
            },
            {
                "name": "vpc_id",
                "description": "The VPC ID.",
                "args": []
            },
            {
                "name": "owner_id",
                "description": "The owner ID.",
                "args": []
            },
            {
                "name": "name",
                "description": "The name of the security group",
                "args": []
            },
            {
                "name": "description",
                "description": "The description of the security group",
                "args": []
            },
            {
                "name": "ingress",
                "description": "The ingress rules. See above for more.",
                "args": []
            },
            {
                "name": "egress",
                "description": "The egress rules. See above for more.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_default_subnet",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/default_subnet.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the subnet",
                "args": []
            },
            {
                "name": "availability_zone",
                "description": "The AZ for the subnet.",
                "args": []
            },
            {
                "name": "cidr_block",
                "description": "The CIDR block for the subnet.",
                "args": []
            },
            {
                "name": "vpc_id",
                "description": "The VPC ID.",
                "args": []
            },
            {
                "name": "ipv6_association_id",
                "description": "The association ID for the IPv6 CIDR block.",
                "args": []
            },
            {
                "name": "ipv6_cidr_block",
                "description": "The IPv6 CIDR block.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_default_vpc",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/default_vpc.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "enable_dns_support",
                "description": "(Optional) A boolean flag to enable/disable DNS support in the VPC. Defaults true.",
                "args": []
            },
            {
                "name": "enable_dns_hostnames",
                "description": "(Optional) A boolean flag to enable/disable DNS hostnames in the VPC. Defaults false.",
                "args": []
            },
            {
                "name": "enable_classiclink",
                "description": "(Optional) A boolean flag to enable/disable ClassicLink \nfor the VPC. Only valid in regions and accounts that support EC2 Classic.\nSee the ClassicLink documentation for more information. Defaults false.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the VPC",
                "args": []
            },
            {
                "name": "cidr_block",
                "description": "The CIDR block of the VPC",
                "args": []
            },
            {
                "name": "instance_tenancy",
                "description": "Tenancy of instances spin up within VPC.",
                "args": []
            },
            {
                "name": "enable_dns_support",
                "description": "Whether or not the VPC has DNS support",
                "args": []
            },
            {
                "name": "enable_dns_hostnames",
                "description": "Whether or not the VPC has DNS hostname support",
                "args": []
            },
            {
                "name": "enable_classiclink",
                "description": "Whether or not the VPC has Classiclink enabled",
                "args": []
            },
            {
                "name": "assign_generated_ipv6_cidr_block",
                "description": "Whether or not an Amazon-provided IPv6 CIDR \nblock with a /56 prefix length for the VPC was assigned",
                "args": []
            },
            {
                "name": "main_route_table_id",
                "description": "The ID of the main route table associated with\n   this VPC. Note that you can change a VPC's main route table by using an\n   aws_main_route_table_association",
                "args": []
            },
            {
                "name": "default_network_acl_id",
                "description": "The ID of the network ACL created by default on VPC creation",
                "args": []
            },
            {
                "name": "default_security_group_id",
                "description": "The ID of the security group created by default on VPC creation",
                "args": []
            },
            {
                "name": "default_route_table_id",
                "description": "The ID of the route table created by default on VPC creation",
                "args": []
            },
            {
                "name": "ipv6_association_id",
                "description": "The association ID for the IPv6 CIDR block of the VPC",
                "args": []
            },
            {
                "name": "ipv6_cidr_block",
                "description": "The IPv6 CIDR block of the VPC",
                "args": []
            }
        ]
    },
    {
        "name": "aws_default_vpc_dhcp_options",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/default_vpc_dhcp_options.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "netbios_name_servers",
                "description": "(Optional) List of NETBIOS name servers.",
                "args": []
            },
            {
                "name": "netbios_node_type",
                "description": "(Optional) The NetBIOS node type (1, 2, 4, or 8). AWS recommends to specify 2 since broadcast and multicast are not supported in their network. For more information about these node types, see RFC 2132.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the DHCP Options Set.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_egress_only_internet_gateway",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/egress_only_internet_gateway.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "vpc_id",
                "description": "(Required) The VPC ID to create in.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the Egress Only Internet Gateway.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_flow_log",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/flow_log.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "log_group_name",
                "description": "(Required) The name of the CloudWatch log group",
                "args": []
            },
            {
                "name": "iam_role_arn",
                "description": "(Required) The ARN for the IAM role that's used to post flow\nlogs to a CloudWatch Logs log group",
                "args": []
            },
            {
                "name": "vpc_id",
                "description": "(Optional) VPC ID to attach to",
                "args": []
            },
            {
                "name": "subnet_id",
                "description": "(Optional) Subnet ID to attach to",
                "args": []
            },
            {
                "name": "eni_id",
                "description": "(Optional) Elastic Network Interface ID to attach to",
                "args": []
            },
            {
                "name": "traffic_type",
                "description": "(Required) The type of traffic to capture. Valid values:\nACCEPT,REJECT, ALL",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The Flow Log ID",
                "args": []
            }
        ]
    },
    {
        "name": "aws_internet_gateway",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/internet_gateway.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "vpc_id",
                "description": "(Required) The VPC ID to create in.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the Internet Gateway.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_main_route_table_association",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/main_route_table_assoc.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "vpc_id",
                "description": "(Required) The ID of the VPC whose main route table should be set",
                "args": []
            },
            {
                "name": "route_table_id",
                "description": "(Required) The ID of the Route Table to set as the new\nmain route table for the target VPC",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the Route Table Association",
                "args": []
            },
            {
                "name": "original_route_table_id",
                "description": "Used internally, see Notes below",
                "args": []
            }
        ]
    },
    {
        "name": "aws_nat_gateway",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/nat_gateway.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "allocation_id",
                "description": "(Required) The Allocation ID of the Elastic IP address for the gateway.",
                "args": []
            },
            {
                "name": "subnet_id",
                "description": "(Required) The Subnet ID of the subnet in which to place the gateway.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the NAT Gateway.",
                "args": []
            },
            {
                "name": "allocation_id",
                "description": "The Allocation ID of the Elastic IP address for the gateway.",
                "args": []
            },
            {
                "name": "subnet_id",
                "description": "The Subnet ID of the subnet in which the NAT gateway is placed.",
                "args": []
            },
            {
                "name": "network_interface_id",
                "description": "The ENI ID of the network interface created by the NAT gateway.",
                "args": []
            },
            {
                "name": "private_ip",
                "description": "The private IP address of the NAT Gateway.",
                "args": []
            },
            {
                "name": "public_ip",
                "description": "The public IP address of the NAT Gateway.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_network_acl",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/network_acl.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "vpc_id",
                "description": "(Required) The ID of the associated VPC.",
                "args": []
            },
            {
                "name": "subnet_ids",
                "description": "(Optional) A list of Subnet IDs to apply the ACL to",
                "args": []
            },
            {
                "name": "subnet_id",
                "description": "(Optional, Deprecated) The ID of the associated Subnet. This\nattribute is deprecated, please use the subnet_ids attribute instead",
                "args": []
            },
            {
                "name": "ingress",
                "description": "(Optional) Specifies an ingress rule. Parameters defined below.",
                "args": []
            },
            {
                "name": "egress",
                "description": "(Optional) Specifies an egress rule. Parameters defined below.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the network ACL",
                "args": []
            }
        ]
    },
    {
        "name": "aws_network_acl_rule",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/network_acl_rule.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "network_acl_id",
                "description": "(Required) The ID of the network ACL.",
                "args": []
            },
            {
                "name": "rule_number",
                "description": "(Required) The rule number for the entry (for example, 100). ACL entries are processed in ascending order by rule number.",
                "args": []
            },
            {
                "name": "egress",
                "description": "(Optional, bool) Indicates whether this is an egress rule (rule is applied to traffic leaving the subnet). Default false.",
                "args": []
            },
            {
                "name": "protocol",
                "description": "(Required) The protocol. A value of -1 means all protocols.",
                "args": []
            },
            {
                "name": "rule_action",
                "description": "(Required) Indicates whether to allow or deny the traffic that matches the rule. Accepted values: allow | deny",
                "args": []
            },
            {
                "name": "cidr_block",
                "description": "(Optional) The network range to allow or deny, in CIDR notation (for example 172.16.0.0/24 ).",
                "args": []
            },
            {
                "name": "ipv6_cidr_block",
                "description": "(Optional) The IPv6 CIDR block to allow or deny.",
                "args": []
            },
            {
                "name": "from_port",
                "description": "(Optional) The from port to match.",
                "args": []
            },
            {
                "name": "to_port",
                "description": "(Optional) The to port to match.",
                "args": []
            },
            {
                "name": "icmp_type",
                "description": "(Optional) ICMP protocol: The ICMP type. Required if specifying ICMP for the protocol. e.g. -1",
                "args": []
            },
            {
                "name": "icmp_code",
                "description": "(Optional) ICMP protocol: The ICMP code. Required if specifying ICMP for the protocol. e.g. -1",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the network ACL Rule",
                "args": []
            }
        ]
    },
    {
        "name": "aws_network_interface",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/network_interface.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "subnet_id",
                "description": "(Required) Subnet ID to create the ENI in.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) A description for the network interface.",
                "args": []
            },
            {
                "name": "private_ips",
                "description": "(Optional) List of private IPs to assign to the ENI.",
                "args": []
            },
            {
                "name": "private_ips_count",
                "description": "(Optional) Number of private IPs to assign to the ENI.",
                "args": []
            },
            {
                "name": "security_groups",
                "description": "(Optional) List of security group IDs to assign to the ENI.",
                "args": []
            },
            {
                "name": "attachment",
                "description": "(Optional) Block to define the attachment of the ENI. Documented below.",
                "args": []
            },
            {
                "name": "source_dest_check",
                "description": "(Optional) Whether to enable source destination checking for the ENI. Default true.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "subnet_id",
                "description": "Subnet ID the ENI is in.",
                "args": []
            },
            {
                "name": "description",
                "description": "A description for the network interface.",
                "args": []
            },
            {
                "name": "private_ips",
                "description": "List of private IPs assigned to the ENI.",
                "args": []
            },
            {
                "name": "security_groups",
                "description": "List of security groups attached to the ENI.",
                "args": []
            },
            {
                "name": "attachment",
                "description": "Block defining the attachment of the ENI.",
                "args": []
            },
            {
                "name": "source_dest_check",
                "description": "Whether source destination checking is enabled",
                "args": []
            },
            {
                "name": "tags",
                "description": "Tags assigned to the ENI.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_network_interface_attachment",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/network_interface_attachment.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "instance_id",
                "description": "(Required) Instance ID to attach.",
                "args": []
            },
            {
                "name": "network_interface_id",
                "description": "(Required) ENI ID to attach.",
                "args": []
            },
            {
                "name": "device_index",
                "description": "(Required) Network interface index (int).",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "instance_id",
                "description": "Instance ID.",
                "args": []
            },
            {
                "name": "network_interface_id",
                "description": "Network interface ID.",
                "args": []
            },
            {
                "name": "attachment_id",
                "description": "The ENI Attachment ID.",
                "args": []
            },
            {
                "name": "status",
                "description": "The status of the Network Interface Attachment.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_route",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/route.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "route_table_id",
                "description": "(Required) The ID of the routing table.",
                "args": []
            },
            {
                "name": "destination_cidr_block",
                "description": "(Optional) The destination CIDR block.",
                "args": []
            },
            {
                "name": "destination_ipv6_cidr_block",
                "description": "(Optional) The destination IPv6 CIDR block.",
                "args": []
            },
            {
                "name": "vpc_peering_connection_id",
                "description": "(Optional) An ID of a VPC peering connection.",
                "args": []
            },
            {
                "name": "egress_only_gateway_id",
                "description": "(Optional) An ID of a VPC Egress Only Internet Gateway.",
                "args": []
            },
            {
                "name": "gateway_id",
                "description": "(Optional) An ID of a VPC internet gateway or a virtual private gateway.",
                "args": []
            },
            {
                "name": "nat_gateway_id",
                "description": "(Optional) An ID of a VPC NAT gateway.",
                "args": []
            },
            {
                "name": "instance_id",
                "description": "(Optional) An ID of an EC2 instance.",
                "args": []
            },
            {
                "name": "network_interface_id",
                "description": "(Optional) An ID of a network interface.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "route_table_id",
                "description": "The ID of the routing table.",
                "args": []
            },
            {
                "name": "destination_cidr_block",
                "description": "The destination CIDR block.",
                "args": []
            },
            {
                "name": "destination_ipv6_cidr_block",
                "description": "The destination IPv6 CIDR block.",
                "args": []
            },
            {
                "name": "vpc_peering_connection_id",
                "description": "An ID of a VPC peering connection.",
                "args": []
            },
            {
                "name": "egress_only_gateway_id",
                "description": "An ID of a VPC Egress Only Internet Gateway.",
                "args": []
            },
            {
                "name": "gateway_id",
                "description": "An ID of a VPC internet gateway or a virtual private gateway.",
                "args": []
            },
            {
                "name": "nat_gateway_id",
                "description": "An ID of a VPC NAT gateway.",
                "args": []
            },
            {
                "name": "instance_id",
                "description": "An ID of a NAT instance.",
                "args": []
            },
            {
                "name": "network_interface_id",
                "description": "An ID of a network interface.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_route_table",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/route_table.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "vpc_id",
                "description": "(Required) The VPC ID.",
                "args": []
            },
            {
                "name": "route",
                "description": "(Optional) A list of route objects. Their keys are documented below.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            },
            {
                "name": "propagating_vgws",
                "description": "(Optional) A list of virtual gateways for propagation.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the routing table",
                "args": []
            }
        ]
    },
    {
        "name": "aws_route_table_association",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/route_table_association.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "subnet_id",
                "description": "(Required) The subnet ID to create an association.",
                "args": []
            },
            {
                "name": "route_table_id",
                "description": "(Required) The ID of the routing table to associate with.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the association",
                "args": []
            }
        ]
    },
    {
        "name": "aws_security_group",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/security_group.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "name",
                "description": "(Optional, Forces new resource) The name of the security group. If omitted, Terraform will\nassign a random, unique name",
                "args": []
            },
            {
                "name": "name_prefix",
                "description": "(Optional, Forces new resource) Creates a unique name beginning with the specified\nprefix. Conflicts with name.",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional, Forces new resource) The security group description. Defaults to\n\"Managed by Terraform\". Cannot be \"\". NOTE: This field maps to the AWS\nGroupDescription attribute, for which there is no Update API. If you'd like\nto classify your security groups in a way that can be updated, use tags.",
                "args": []
            },
            {
                "name": "ingress",
                "description": "(Optional) Can be specified multiple times for each\n ingress rule. Each ingress block supports fields documented below.",
                "args": []
            },
            {
                "name": "egress",
                "description": "(Optional, VPC only) Can be specified multiple times for eachegress rule. Each egress block supports fields documented below.",
                "args": []
            },
            {
                "name": "revoke_rules_on_delete",
                "description": "(Optional) Instruct Terraform to revoke all of the\nSecurity Groups attached ingress and egress rules before deleting the rule\nitself. This is normally not needed, however certain AWS services such as\nElastic Map Reduce may automatically add required rules to security groups used\nwith the service, and those rules may contain a cyclic dependency that prevent\nthe security groups from being destroyed without removing the dependency first.\nDefault false",
                "args": []
            },
            {
                "name": "vpc_id",
                "description": "(Optional, Forces new resource) The VPC ID.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the security group",
                "args": []
            },
            {
                "name": "vpc_id",
                "description": "The VPC ID.",
                "args": []
            },
            {
                "name": "owner_id",
                "description": "The owner ID.",
                "args": []
            },
            {
                "name": "name",
                "description": "The name of the security group",
                "args": []
            },
            {
                "name": "description",
                "description": "The description of the security group",
                "args": []
            },
            {
                "name": "ingress",
                "description": "The ingress rules. See above for more.",
                "args": []
            },
            {
                "name": "egress",
                "description": "The egress rules. See above for more.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_network_interface_sg_attachment",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/network_interface_sg_attachment.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "security_group_id",
                "description": "(Required) The ID of the security group.",
                "args": []
            },
            {
                "name": "network_interface_id",
                "description": "(Required) The ID of the network interface to attach to.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_security_group_rule",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/security_group_rule.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "type",
                "description": "(Required) The type of rule being created. Valid options are ingress (inbound)\nor egress (outbound).",
                "args": []
            },
            {
                "name": "cidr_blocks",
                "description": "(Optional) List of CIDR blocks. Cannot be specified with source_security_group_id.",
                "args": []
            },
            {
                "name": "ipv6_cidr_blocks",
                "description": "(Optional) List of IPv6 CIDR blocks.",
                "args": []
            },
            {
                "name": "prefix_list_ids",
                "description": "(Optional) List of prefix list IDs (for allowing access to VPC endpoints).\nOnly valid with egress.",
                "args": []
            },
            {
                "name": "from_port",
                "description": "(Required) The start port (or ICMP type number if protocol is \"icmp\").",
                "args": []
            },
            {
                "name": "protocol",
                "description": "(Required) The protocol. If not icmp, tcp, udp, or all use the protocol number",
                "args": []
            },
            {
                "name": "security_group_id",
                "description": "(Required) The security group to apply this rule to.",
                "args": []
            },
            {
                "name": "source_security_group_id",
                "description": "(Optional) The security group id to allow access to/from,\n   depending on the type. Cannot be specified with cidr_blocks.",
                "args": []
            },
            {
                "name": "self",
                "description": "(Optional) If true, the security group itself will be added as\n   a source to this ingress rule.",
                "args": []
            },
            {
                "name": "to_port",
                "description": "(Required) The end port (or ICMP code if protocol is \"icmp\").",
                "args": []
            },
            {
                "name": "description",
                "description": "(Optional) Description of the rule.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the security group rule",
                "args": []
            },
            {
                "name": "type",
                "description": "The type of rule, ingress or egress",
                "args": []
            },
            {
                "name": "from_port",
                "description": "The start port (or ICMP type number if protocol is \"icmp\")",
                "args": []
            },
            {
                "name": "to_port",
                "description": "The end port (or ICMP code if protocol is \"icmp\")",
                "args": []
            },
            {
                "name": "protocol",
                "description": "– The protocol used",
                "args": []
            },
            {
                "name": "description",
                "description": "– Description of the rule",
                "args": []
            }
        ]
    },
    {
        "name": "aws_subnet",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/subnet.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "availability_zone",
                "description": "(Optional) The AZ for the subnet.",
                "args": []
            },
            {
                "name": "cidr_block",
                "description": "(Required) The CIDR block for the subnet.",
                "args": []
            },
            {
                "name": "ipv6_cidr_block",
                "description": "(Optional) The IPv6 network range for the subnet,\n  in CIDR notation. The subnet size must use a /64 prefix length.",
                "args": []
            },
            {
                "name": "map_public_ip_on_launch",
                "description": "(Optional) Specify true to indicate\n  that instances launched into the subnet should be assigned\n  a public IP address. Default is false.",
                "args": []
            },
            {
                "name": "assign_ipv6_address_on_creation",
                "description": "(Optional) Specify true to indicate\n  that network interfaces created in the specified subnet should be\n  assigned an IPv6 address. Default is false",
                "args": []
            },
            {
                "name": "vpc_id",
                "description": "(Required) The VPC ID.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the subnet",
                "args": []
            },
            {
                "name": "availability_zone",
                "description": "The AZ for the subnet.",
                "args": []
            },
            {
                "name": "cidr_block",
                "description": "The CIDR block for the subnet.",
                "args": []
            },
            {
                "name": "vpc_id",
                "description": "The VPC ID.",
                "args": []
            },
            {
                "name": "ipv6_association_id",
                "description": "The association ID for the IPv6 CIDR block.",
                "args": []
            },
            {
                "name": "ipv6_cidr_block",
                "description": "The IPv6 CIDR block.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_vpc",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/vpc.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "cidr_block",
                "description": "(Required) The CIDR block for the VPC.",
                "args": []
            },
            {
                "name": "instance_tenancy",
                "description": "(Optional) A tenancy option for instances launched into the VPC",
                "args": []
            },
            {
                "name": "enable_dns_support",
                "description": "(Optional) A boolean flag to enable/disable DNS support in the VPC. Defaults true.",
                "args": []
            },
            {
                "name": "enable_dns_hostnames",
                "description": "(Optional) A boolean flag to enable/disable DNS hostnames in the VPC. Defaults false.",
                "args": []
            },
            {
                "name": "enable_classiclink",
                "description": "(Optional) A boolean flag to enable/disable ClassicLink\nfor the VPC. Only valid in regions and accounts that support EC2 Classic.\nSee the ClassicLink documentation for more information. Defaults false.",
                "args": []
            },
            {
                "name": "enable_classiclink_dns_support",
                "description": "(Optional) A boolean flag to enable/disable ClassicLink DNS Support for the VPC.\nOnly valid in regions and accounts that support EC2 Classic.",
                "args": []
            },
            {
                "name": "assign_generated_ipv6_cidr_block",
                "description": "(Optional) Requests an Amazon-provided IPv6 CIDR \nblock with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or \nthe size of the CIDR block. Default is false.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the VPC",
                "args": []
            },
            {
                "name": "cidr_block",
                "description": "The CIDR block of the VPC",
                "args": []
            },
            {
                "name": "instance_tenancy",
                "description": "Tenancy of instances spin up within VPC.",
                "args": []
            },
            {
                "name": "enable_dns_support",
                "description": "Whether or not the VPC has DNS support",
                "args": []
            },
            {
                "name": "enable_dns_hostnames",
                "description": "Whether or not the VPC has DNS hostname support",
                "args": []
            },
            {
                "name": "enable_classiclink",
                "description": "Whether or not the VPC has Classiclink enabled",
                "args": []
            },
            {
                "name": "main_route_table_id",
                "description": "The ID of the main route table associated with\n   this VPC. Note that you can change a VPC's main route table by using an\n   aws_main_route_table_association.",
                "args": []
            },
            {
                "name": "default_network_acl_id",
                "description": "The ID of the network ACL created by default on VPC creation",
                "args": []
            },
            {
                "name": "default_security_group_id",
                "description": "The ID of the security group created by default on VPC creation",
                "args": []
            },
            {
                "name": "default_route_table_id",
                "description": "The ID of the route table created by default on VPC creation",
                "args": []
            },
            {
                "name": "ipv6_association_id",
                "description": "The association ID for the IPv6 CIDR block.",
                "args": []
            },
            {
                "name": "ipv6_cidr_block",
                "description": "The IPv6 CIDR block.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_vpc_dhcp_options",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/vpc_dhcp_options.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "domain_name",
                "description": "(Optional) the suffix domain name to use by default when resolving non Fully Qualified Domain Names. In other words, this is what ends up being the search value in the /etc/resolv.conf file.",
                "args": []
            },
            {
                "name": "domain_name_servers",
                "description": "(Optional) List of name servers to configure in /etc/resolv.conf. If you want to use the default AWS nameservers you should set this to AmazonProvidedDNS.",
                "args": []
            },
            {
                "name": "ntp_servers",
                "description": "(Optional) List of NTP servers to configure.",
                "args": []
            },
            {
                "name": "netbios_name_servers",
                "description": "(Optional) List of NETBIOS name servers.",
                "args": []
            },
            {
                "name": "netbios_node_type",
                "description": "(Optional) The NetBIOS node type (1, 2, 4, or 8). AWS recommends to specify 2 since broadcast and multicast are not supported in their network. For more information about these node types, see RFC 2132.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the DHCP Options Set.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_vpc_dhcp_options_association",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/vpc_dhcp_options_association.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "vpc_id",
                "description": "(Required) The ID of the VPC to which we would like to associate a DHCP Options Set.",
                "args": []
            },
            {
                "name": "dhcp_options_id",
                "description": "(Required) The ID of the DHCP Options Set to associate to the VPC.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the DHCP Options Set Association.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_vpc_endpoint",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/vpc_endpoint.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "vpc_id",
                "description": "(Required) The ID of the VPC in which the endpoint will be used.",
                "args": []
            },
            {
                "name": "vpc_endpoint_type",
                "description": "(Optional) The VPC endpoint type, Gateway or Interface. Defaults to Gateway.",
                "args": []
            },
            {
                "name": "service_name",
                "description": "(Required) The service name, in the form com.amazonaws.region.service for AWS services.",
                "args": []
            },
            {
                "name": "auto_accept",
                "description": "(Optional) Accept the VPC endpoint (the VPC endpoint and service need to be in the same AWS account).",
                "args": []
            },
            {
                "name": "policy",
                "description": "(Optional) A policy to attach to the endpoint that controls access to the service. Applicable for endpoints of type Gateway.\nDefaults to full access.",
                "args": []
            },
            {
                "name": "route_table_ids",
                "description": "(Optional) One or more route table IDs. Applicable for endpoints of type Gateway.",
                "args": []
            },
            {
                "name": "subnet_ids",
                "description": "(Optional) The ID of one or more subnets in which to create a network interface for the endpoint. Applicable for endpoints of type Interface.",
                "args": []
            },
            {
                "name": "security_group_ids",
                "description": "(Optional) The ID of one or more security groups to associate with the network interface. Required for endpoints of type Interface.",
                "args": []
            },
            {
                "name": "private_dns_enabled",
                "description": "(Optional) Whether or not to associate a private hosted zone with the specified VPC. Applicable for endpoints of type Interface.\nDefaults to false.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the VPC endpoint.",
                "args": []
            },
            {
                "name": "state",
                "description": "The state of the VPC endpoint.",
                "args": []
            },
            {
                "name": "prefix_list_id",
                "description": "The prefix list ID of the exposed AWS service. Applicable for endpoints of type Gateway.",
                "args": []
            },
            {
                "name": "cidr_blocks",
                "description": "The list of CIDR blocks for the exposed AWS service. Applicable for endpoints of type Gateway.",
                "args": []
            },
            {
                "name": "network_interface_ids",
                "description": "One or more network interfaces for the VPC Endpoint. Applicable for endpoints of type Interface.",
                "args": []
            },
            {
                "name": "dns_entry",
                "description": "The DNS entries for the VPC Endpoint. Applicable for endpoints of type Interface. DNS blocks are documented below.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_vpc_endpoint_connection_notification",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/vpc_endpoint_connection_notification.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "vpc_endpoint_service_id",
                "description": "(Optional) The ID of the VPC Endpoint Service to receive notifications for.",
                "args": []
            },
            {
                "name": "vpc_endpoint_id",
                "description": "(Optional) The ID of the VPC Endpoint to receive notifications for.",
                "args": []
            },
            {
                "name": "connection_notification_arn",
                "description": "(Required) The ARN of the SNS topic for the notifications.",
                "args": []
            },
            {
                "name": "connection_events",
                "description": "(Required) One or more endpoint events for which to receive notifications.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the VPC connection notification.",
                "args": []
            },
            {
                "name": "state",
                "description": "The state of the notification.",
                "args": []
            },
            {
                "name": "notification_type",
                "description": "The type of notification.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_vpc_endpoint_route_table_association",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/vpc_endpoint_route_table_association.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "vpc_endpoint_id",
                "description": "(Required) The ID of the VPC endpoint with which the routing table will be associated.",
                "args": []
            },
            {
                "name": "route_table_id",
                "description": "(Required) The ID of the routing table to be associated with the VPC endpoint.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the association.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_vpc_endpoint_service",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/vpc_endpoint_service.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "acceptance_required",
                "description": "(Required) Whether or not VPC endpoint connection requests to the service must be accepted by the service owner - true or false.",
                "args": []
            },
            {
                "name": "network_load_balancer_arns",
                "description": "(Required) The ARNs of one or more Network Load Balancers for the endpoint service.",
                "args": []
            },
            {
                "name": "allowed_principals",
                "description": "(Optional) The ARNs of one or more principals allowed to discover the endpoint service.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the VPC endpoint service.",
                "args": []
            },
            {
                "name": "state",
                "description": "The state of the VPC endpoint service.",
                "args": []
            },
            {
                "name": "service_name",
                "description": "The service name.",
                "args": []
            },
            {
                "name": "service_type",
                "description": "The service type, Gateway or Interface.",
                "args": []
            },
            {
                "name": "availability_zones",
                "description": "The Availability Zones in which the service is available.",
                "args": []
            },
            {
                "name": "private_dns_name",
                "description": "The private DNS name for the service.",
                "args": []
            },
            {
                "name": "base_endpoint_dns_names",
                "description": "The DNS names for the service.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_vpc_endpoint_service_allowed_principal",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/vpc_endpoint_service_allowed_principal.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "vpc_endpoint_service_id",
                "description": "(Required) The ID of the VPC endpoint service to allow permission.",
                "args": []
            },
            {
                "name": "principal_arn",
                "description": "(Required) The ARN of the principal to allow permissions.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the association.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_vpc_endpoint_subnet_association",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/vpc_endpoint_subnet_association.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "vpc_endpoint_id",
                "description": "(Required) The ID of the VPC endpoint with which the subnet will be associated.",
                "args": []
            },
            {
                "name": "subnet_id",
                "description": "(Required) The ID of the subnet to be associated with the VPC endpoint.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the association.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_vpc_peering_connection",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/vpc_peering.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "peer_owner_id",
                "description": "(Optional) The AWS account ID of the owner of the peer VPC.\n Defaults to the account ID the AWS provider is currently connected to.",
                "args": []
            },
            {
                "name": "peer_vpc_id",
                "description": "(Required) The ID of the VPC with which you are creating the VPC Peering Connection.",
                "args": []
            },
            {
                "name": "vpc_id",
                "description": "(Required) The ID of the requester VPC.",
                "args": []
            },
            {
                "name": "auto_accept",
                "description": "(Optional) Accept the peering (both VPCs need to be in the same AWS account).",
                "args": []
            },
            {
                "name": "peer_region",
                "description": "(Optional) The region of the accepter VPC of the [VPC Peering Connection]. auto_accept must be false,\nand use the aws_vpc_peering_connection_accepter to manage the accepter side.",
                "args": []
            },
            {
                "name": "accepter",
                "description": "(Optional)  An optional configuration block that allows for [VPC Peering Connection]\n(http://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide) options to be set for the VPC that accepts\nthe peering connection (a maximum of one).",
                "args": []
            },
            {
                "name": "requester",
                "description": "(Optional)  A optional configuration block that allows for [VPC Peering Connection]\n(http://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide) options to be set for the VPC that requests\nthe peering connection (a maximum of one).",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the VPC Peering Connection.",
                "args": []
            },
            {
                "name": "accept_status",
                "description": "The status of the VPC Peering Connection request.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_vpc_peering_connection_accepter",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/vpc_peering_accepter.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "vpc_peering_connection_id",
                "description": "(Required) The VPC Peering Connection ID to manage.",
                "args": []
            },
            {
                "name": "auto_accept",
                "description": "(Optional) Whether or not to accept the peering request. Defaults to false.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the VPC Peering Connection.",
                "args": []
            },
            {
                "name": "accept_status",
                "description": "The status of the VPC Peering Connection request.",
                "args": []
            },
            {
                "name": "vpc_id",
                "description": "The ID of the accepter VPC.",
                "args": []
            },
            {
                "name": "peer_vpc_id",
                "description": "The ID of the requester VPC.",
                "args": []
            },
            {
                "name": "peer_owner_id",
                "description": "The AWS account ID of the owner of the requester VPC.",
                "args": []
            },
            {
                "name": "peer_region",
                "description": "The region of the accepter VPC.",
                "args": []
            },
            {
                "name": "accepter",
                "description": "A configuration block that describes [VPC Peering Connection]\n(http://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide) options set for the accepter VPC.",
                "args": []
            },
            {
                "name": "requester",
                "description": "A configuration block that describes [VPC Peering Connection]\n(http://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide) options set for the requester VPC.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_vpn_connection",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/vpn_connection.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "customer_gateway_id",
                "description": "(Required) The ID of the customer gateway.",
                "args": []
            },
            {
                "name": "static_routes_only",
                "description": "(Optional, Default false) Whether the VPN connection uses static routes exclusively. Static routes must be used for devices that don't support BGP.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) Tags to apply to the connection.",
                "args": []
            },
            {
                "name": "type",
                "description": "(Required) The type of VPN connection. The only type AWS supports at this time is \"ipsec.1\".",
                "args": []
            },
            {
                "name": "vpn_gateway_id",
                "description": "(Required) The ID of the virtual private gateway.",
                "args": []
            },
            {
                "name": "tunnel1_inside_cidr",
                "description": "(Optional) The CIDR block of the inside IP addresses for the first VPN tunnel.",
                "args": []
            },
            {
                "name": "tunnel2_inside_cidr",
                "description": "(Optional) The CIDR block of the second IP addresses for the first VPN tunnel.",
                "args": []
            },
            {
                "name": "tunnel1_preshared_key",
                "description": "(Optional) The preshared key of the first VPN tunnel.",
                "args": []
            },
            {
                "name": "tunnel2_preshared_key",
                "description": "(Optional) The preshared key of the second VPN tunnel.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_vpn_connection_route",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/vpn_connection_route.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "destination_cidr_block",
                "description": "(Required) The CIDR block associated with the local subnet of the customer network.",
                "args": []
            },
            {
                "name": "vpn_connection_id",
                "description": "(Required) The ID of the VPN connection.",
                "args": []
            }
        ],
        "attrs": []
    },
    {
        "name": "aws_vpn_gateway",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/vpn_gateway.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "vpc_id",
                "description": "(Optional) The VPC ID to create in.",
                "args": []
            },
            {
                "name": "availability_zone",
                "description": "(Optional) The Availability Zone for the virtual private gateway.",
                "args": []
            },
            {
                "name": "tags",
                "description": "(Optional) A mapping of tags to assign to the resource.",
                "args": []
            },
            {
                "name": "amazon_side_asn",
                "description": "(Optional) The Autonomous System Number (ASN) for the Amazon side of the gateway. If you don't specify an ASN, the virtual private gateway is created with the default ASN.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "id",
                "description": "The ID of the VPN Gateway.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_vpn_gateway_attachment",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/vpn_gateway_attachment.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "vpc_id",
                "description": "(Required) The ID of the VPC.",
                "args": []
            },
            {
                "name": "vpn_gateway_id",
                "description": "(Required) The ID of the Virtual Private Gateway.",
                "args": []
            }
        ],
        "attrs": [
            {
                "name": "vpc_id",
                "description": "The ID of the VPC that Virtual Private Gateway is attached to.",
                "args": []
            },
            {
                "name": "vpn_gateway_id",
                "description": "The ID of the Virtual Private Gateway.",
                "args": []
            }
        ]
    },
    {
        "name": "aws_vpn_gateway_route_propagation",
        "type": "resource",
        "url": "https://www.terraform.io/docs/providers/aws/r/vpn_gateway_route_propagation.html",
        "groupName": "VPC Resources",
        "args": [
            {
                "name": "vpn_gateway_id",
                "description": "The id of the aws_vpn_gateway to propagate routes from.",
                "args": []
            },
            {
                "name": "route_table_id",
                "description": "The id of the aws_route_table to propagate routes into.",
                "args": []
            }
        ],
        "attrs": []
    }
]